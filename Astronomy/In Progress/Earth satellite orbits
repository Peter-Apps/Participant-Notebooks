{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1VWzCBrMJ0ZnmsYZL88DgjXmt5GC26iC2","timestamp":1694384987256},{"file_id":"1AH3oy96ktBanNPRU_IzxOUHbbuHWzS3L","timestamp":1655822052109}],"collapsed_sections":["72EhYlnLcwLP","l9P1F-xKn6l3","5HsfXsCl5Ieu"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Earth's Satellites Analysis\n","Learning Targets: I can use Python to investigate real world data and find patterns.  I can identify what factor(s) affect satellite period."],"metadata":{"id":"guy70XANrhKm"}},{"cell_type":"markdown","source":["#THIS IS THE TEACHER VERSION of Earth's Satellites Analysis.  The STUDENT VERSION is linked below, as is the TEACHER GUIDE\n","\n","https://colab.research.google.com/drive/1ubG62pfT6pfXPK2YMx9FVEQCOZ8WMEn0?usp=sharing   Student Guide\n","\n","https://docs.google.com/document/d/1Crxl_20VtM8VCykHZHPjV_HrB-JG5OCg/edit?usp=sharing&ouid=100961236926293807081&rtpof=true&sd=true  Teacher Guide"],"metadata":{"id":"NuOr5vhb2_Xo"}},{"cell_type":"markdown","source":["#Basic setup"],"metadata":{"id":"72EhYlnLcwLP"}},{"cell_type":"markdown","source":["Before we get started on manipulating data, or even importing data, we have to import some tools.  Even if we don't use them all, it's still handy to have them imported at the very beginning.\n","As you work through, a reminder that programmers often copy/paste code from their previous work.  If you get code from someone/ something else, you should notate where you got it from.  This helps you find it later (in case of a problem) and helps avoid issues with academic honesty."],"metadata":{"id":"H6EyLS39AmZj"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"lC69qi8KcCcP"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt  #this will be important when we make the graphs!"]},{"cell_type":"markdown","source":["We just imported the code that we'll need to analyze the data, so now it's time to import the data that we're going to analyze!"],"metadata":{"id":"Nhz1-I3mQLtr"}},{"cell_type":"code","source":["data = pd.read_csv(\"https://github.com/JoeFehr/QuarkNet/raw/main/Earth's%20Satellite%20data%20cut.csv\")\n","#This will get you the data from my github drive instead of from Kaggle (not a bad site, this just allows you to avoid creating a Kaggle membership, and striking out some bad data cells)\n","#If you wanted citation info: https://www.kaggle.com/datasets/ucsusa/active-satellites?select=database.csv\n","data.head(3)\n","# The \"XX.head(n)\" command displays the first n rows of a file.\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"XfQfpmVtc8cR","executionInfo":{"status":"ok","timestamp":1655504283338,"user_tz":240,"elapsed":228,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"e23a2925-6848-486d-8e29-eefeca22e3f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Official Name of Satellite Country of Operator/Owner     Users  \\\n","0              NUDT Phonesat                     China  Military   \n","1                   AAUSat-4                   Denmark     Civil   \n","2                      ARC-1                       USA     Civil   \n","\n","                    Purpose Class of Orbit  \\\n","0  Technology Demonstration            LEO   \n","1         Earth Observation            LEO   \n","2    Technology Development            LEO   \n","\n","   Longitude of Geosynchronous Orbit (Degrees)  Perigee (Kilometers)  \\\n","0                                          0.0                   516   \n","1                                          0.0                   442   \n","2                                          0.0                   497   \n","\n","   Apogee (Kilometers)  Eccentricity  Inclination (Degrees)  Period (Minutes)  \\\n","0                  536       0.00145                  97.47             95.24   \n","1                  687       0.01770                  98.20             95.90   \n","2                  801       0.02170                  64.78             97.71   \n","\n","  Launch Mass (Kilograms) Date of Launch Expected Lifetime (Years)  order  \\\n","0                       0      9/19/2015                       NaN      1   \n","1                       1      4/25/2016                       NaN      2   \n","2                       1      10/8/2015                       NaN      3   \n","\n","   Unnamed: 15  Unnamed: 16  Unnamed: 17  \n","0          NaN          NaN          NaN  \n","1          NaN          NaN          NaN  \n","2          NaN          NaN          NaN  "],"text/html":["\n","  <div id=\"df-883fa029-89b7-41ab-86a7-c4951c23c5d2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Official Name of Satellite</th>\n","      <th>Country of Operator/Owner</th>\n","      <th>Users</th>\n","      <th>Purpose</th>\n","      <th>Class of Orbit</th>\n","      <th>Longitude of Geosynchronous Orbit (Degrees)</th>\n","      <th>Perigee (Kilometers)</th>\n","      <th>Apogee (Kilometers)</th>\n","      <th>Eccentricity</th>\n","      <th>Inclination (Degrees)</th>\n","      <th>Period (Minutes)</th>\n","      <th>Launch Mass (Kilograms)</th>\n","      <th>Date of Launch</th>\n","      <th>Expected Lifetime (Years)</th>\n","      <th>order</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","      <th>Unnamed: 17</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NUDT Phonesat</td>\n","      <td>China</td>\n","      <td>Military</td>\n","      <td>Technology Demonstration</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>516</td>\n","      <td>536</td>\n","      <td>0.00145</td>\n","      <td>97.47</td>\n","      <td>95.24</td>\n","      <td>0</td>\n","      <td>9/19/2015</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AAUSat-4</td>\n","      <td>Denmark</td>\n","      <td>Civil</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>442</td>\n","      <td>687</td>\n","      <td>0.01770</td>\n","      <td>98.20</td>\n","      <td>95.90</td>\n","      <td>1</td>\n","      <td>4/25/2016</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ARC-1</td>\n","      <td>USA</td>\n","      <td>Civil</td>\n","      <td>Technology Development</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>497</td>\n","      <td>801</td>\n","      <td>0.02170</td>\n","      <td>64.78</td>\n","      <td>97.71</td>\n","      <td>1</td>\n","      <td>10/8/2015</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-883fa029-89b7-41ab-86a7-c4951c23c5d2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-883fa029-89b7-41ab-86a7-c4951c23c5d2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-883fa029-89b7-41ab-86a7-c4951c23c5d2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["data.shape #XX.shape displays the (number of rows, number of columns) for your data set; this is handy for figuring out the size of your data set\n","#Running this code will show we've got about 1300 rows of data, which means info for about 1300 satellites"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XCL1xn6DTZay","executionInfo":{"status":"ok","timestamp":1655504283339,"user_tz":240,"elapsed":37,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"08951484-e08a-4a13-e285-e8870284e259"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1308, 18)"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["#Make Some Cuts and Review Your Potential IVs"],"metadata":{"id":"l9P1F-xKn6l3"}},{"cell_type":"markdown","source":["Making cuts on your data (i.e., filtering your data set) means we are going to cut out some data based on eccentricity, specifically the non-circle shaped orbits"],"metadata":{"id":"uTl_N9f8-H-0"}},{"cell_type":"code","source":["#The following line means we are making a new set called 'data_eccen' where I'm only keeping data containing Eccentricity values < 0.0005\n","data_eccen = data.query('Eccentricity < 0.0005')\n","data_eccen.shape #Now that we've cut out a bunch of data, this will tell us how much data we have left; we've lost about half, but still have a lot!\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yqgkc8RVEikI","executionInfo":{"status":"ok","timestamp":1655504283340,"user_tz":240,"elapsed":30,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"f3f0283e-b5ec-4b55-d2a8-95daf4f9a52b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(655, 18)"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Let's take a look at the remaining data"],"metadata":{"id":"VnWBEp0qUylV"}},{"cell_type":"code","source":["#data_eccen.head(25)   #Removing the initial hashtag in this line will show a new set of data filtered by Eccentricity values.  This allows you to check your coding.\n","#Make sure to drop the hashtag sign above to check your header.  I want you to see what it's like to \"comment in\" and \"comment out\" some coding"],"metadata":{"id":"K4E-0v5oU2c8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Review the titles of the columns to come up with possible IVs."],"metadata":{"id":"Je51aBM7EVGD"}},{"cell_type":"code","source":["data_eccen.columns #These are the titles of the different columns, in case you couldn't see them properly in the tables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vM4uLjXoXs-q","executionInfo":{"status":"ok","timestamp":1655504283341,"user_tz":240,"elapsed":27,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"9a21ddd3-d3aa-4838-853c-4bb14d3b5644"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Official Name of Satellite', 'Country of Operator/Owner', 'Users',\n","       'Purpose', 'Class of Orbit',\n","       'Longitude of Geosynchronous Orbit (Degrees)', 'Perigee (Kilometers)',\n","       'Apogee (Kilometers)', 'Eccentricity', 'Inclination (Degrees)',\n","       'Period (Minutes)', 'Launch Mass (Kilograms)', 'Date of Launch',\n","       'Expected Lifetime (Years)', 'order', 'Unnamed: 15', 'Unnamed: 16',\n","       'Unnamed: 17'],\n","      dtype='object')"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#data_eccen.tail(25)  --> You can ignore this, I put this in to check for non-numerical data, which Colab doesn't like"],"metadata":{"id":"UHVWq6IbYXM2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Data Analysis\n","Analyze the different potential IVs by making graphs.  Use the graphs to look for trends in the data."],"metadata":{"id":"IWzJjD66ueQF"}},{"cell_type":"markdown","source":["Now it is time to begin making scatter plots to look for patterns!\n","\n","We will start with the satellite's **Launch Mass as the potential IV**.  If Launch Mass affects the period, then increasing the mass will cause some clear reaction in the period (and that clear reaction will show in a predictable way).  The slope could be positive or negative, linear or non-linear, and could even change partway through, but there must be a clear trend to have a relationship.  "],"metadata":{"id":"LJXV_F7ZvYP9"}},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(10,5))\n","plt.scatter(data_eccen['Launch Mass (Kilograms)'], data_eccen['Period (Minutes)'], s=10)\n","#The above command is how we tell the graph which variables go on which axis, in an X,Y format\n","plt.xlabel(\"Launch Mass (Kilograms)\")  #How we label the X axis, including units\n","plt.ylabel('Period (Minutes)')  #How we label the Y axis, including units\n","plt.title('Satellite Period (Minutes) vs. Launch Mass (Kilograms)')  #All graphs need good titles\n","plt.grid(True) #This command gives the grid lines to make it easy to compare data points\n","\n","#plt.show()"],"metadata":{"id":"IEONqLhhPddt","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1655504288031,"user_tz":240,"elapsed":4714,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"64f69fbf-07a1-4c30-9f69-94ec3b9ba7d4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Is there a pattern?  How can you tell? Be prepared to share out with the rest of the class.\n","\n","FYI: The black bar at the bottom is actually all of the mass values smooshed together.  For some reason Python wanted to use small intervals and I haven't had any luck fixing that.  Just know that the horizontal axis should range from 0 to 15,000kg.\n","\n","\n","---\n","\n","\n","Whether or not there was a pattern above, we should keep investigating.  Let's make a new comparison: try again with **Inclination (Degrees)** and see if you can find a pattern.\n","**DON'T DELETE OR CHANGE THE GRAPHS ABOVE!** Make new graphs below for the new comparisons.  \n"],"metadata":{"id":"XPOQGueE8Gn0"}},{"cell_type":"markdown","source":["#-->This is the **student version** of the setup discussed above asking for Inclination (Degrees).  For now I will hashtag these commands out, but will want them for the student activity version.\n","I copied and pasted from above, but *some stuff needs updating*.  Let's get started!\n"],"metadata":{"id":"acy7i3d8DBSo"}},{"cell_type":"code","source":["#plt.scatter(data_eccen['WHAT GOES HERE?'], data_eccen['SOMETHING COOL MUST BELONG HERE'])\n","#The above command is how we tell the graph which variables go on which axis, in an X,Y format\n","#plt.xlabel(\"WHAT THE PHYSICS?\")  #How we label the X axis, including units\n","#plt.ylabel('I HAVE NO IDEA')  #How we label the Y axis, including units\n","#plt.title('Satellite I HAVE NO IDEA vs. WHAT THE PHYSICS?')  #All graphs need good titles\n","#plt.grid(True) #This command gives the grid lines to make it easy to compare data points\n","#plt.show()"],"metadata":{"id":"uwYdfmb25asB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#-->This is the ***teacher version*** of the setup discussed above asking for Inclination (Degrees).  Must keep in the teacher version, delete in the student version.\n","I copied and pasted from above, but *some stuff needs updating*.  Let's get started!\n"],"metadata":{"id":"4UAgwmooyqs3"}},{"cell_type":"code","source":["\n","plt.scatter(data_eccen['Inclination (Degrees)'], data_eccen['Period (Minutes)'], s=10)\n","#The above command is how we tell the graph which variables go on which axis, in an X,Y format\n","plt.xlabel(\"Inclination (Degrees)\")  #How we label the X axis, including units\n","plt.ylabel('Period (Minutes)')  #How we label the Y axis, including units\n","plt.title('Satellite Period (Minutes) vs. Inclination (Degrees)')  #All graphs need good titles\n","plt.grid(True) #This command gives the grid lines to make it easy to compare data points\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"FuBHlpOODCFy","executionInfo":{"status":"ok","timestamp":1655504288770,"user_tz":240,"elapsed":744,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"672a6ac4-3b4a-462d-adb6-155767a3d89d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["\n","Did our graph show a delicious pattern this time?  \n","\n","What is your basis for that response?\n","\n","\n","---\n","\n","\n","Time to make another new graph!  Try with the Longitude option (but you have to copy and paste the commands in yourself).  Reminder that coders often copy and paste their own earlier lines of code, **just make sure you change out the correct info!**"],"metadata":{"id":"KO2p1bvlFChf"}},{"cell_type":"markdown","source":["#-->This is the correct version of the setup discussed above asking for the Longitude data -->Longitude of Geosynchronous Orbit (Degrees)\n","# -->This plotting section doesn't have any scaffolding, it's just blank.  I want the students to copy and paste everything from above and then change Y axis stuff into Longitude stuff.\n"],"metadata":{"id":"5ItVTJ4Kz4Ub"}},{"cell_type":"code","source":["#Lots of space here to paste your code\n","# --> DELETE EVERYTHING BELOW FROM THE STUDENT VERSION <--\n","plt.scatter(data_eccen['Longitude of Geosynchronous Orbit (Degrees)'], data_eccen['Period (Minutes)'], s=10)\n","#The above command is how we tell the graph which variables go on which axis, in an X,Y format\n","plt.xlabel(\"Longitude of Geosynchronous Orbit (Degrees)\")  #How we label the X axis, including units\n","plt.ylabel('Period (Minutes)')  #How we label the Y axis, including units\n","plt.title('Satellite Period (Minutes) vs. Longitude of Geosynchronous Orbit (Degrees)')  #All graphs need good titles\n","plt.grid(True) #This command gives the grid lines to make it easy to compare data points\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"DNCVOsHkBox3","executionInfo":{"status":"ok","timestamp":1655504288774,"user_tz":240,"elapsed":35,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"954fa695-1299-493a-9bd3-3c3265ec79e9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Did our graph show a delicious pattern this time?  \n","\n","What is your basis for that response?"],"metadata":{"id":"_rPu6x2wH2-M"}},{"cell_type":"markdown","source":["#Class Check in\n","Discuss data plots and any patterns you have seen so far."],"metadata":{"id":"p0__fgMF06PR"}},{"cell_type":"markdown","source":["Time to make another new graph!  Try with the Perigee option --> 'Perigee (Kilometers)' (but you have to copy and paste it yourself)\n","\n","*Before you start,* what does Perigee mean?  These values are in which units?  Let's change that into meters"],"metadata":{"id":"F6VuMwN60_6R"}},{"cell_type":"code","source":["#We are going to go through this section AS A CLASS\n","data_eccen['Perigee (Meters)'] = (data_eccen['Perigee (Kilometers)'] * 1000)\n","#We just created a new column of data in the \"data_eccen\" sheet called 'Perigee (Meters)' which came from multiplying an earlier column, 'Perigee (Kilometers)', by 1000.\n","data_eccen.head(5) #This will allow us to check our coding; look at the data in the 'Perigee (Meters)' column and make sure it equals the 'Perigee (Kilometers)' data multiplied by 1000.\n","#You might get a weird note saying this process could have been done another way, don't worry about it."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"lIh5vbiAECI6","executionInfo":{"status":"ok","timestamp":1655504288777,"user_tz":240,"elapsed":35,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"0103486b-0739-46b3-e0a3-a31349e2ffe0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]},{"output_type":"execute_result","data":{"text/plain":["   Official Name of Satellite Country of Operator/Owner       Users  \\\n","64                    STARE-B                       USA    Military   \n","67                    Ukube-1            United Kingdom  Government   \n","81                 Dove 1e-10                       USA  Commercial   \n","82                 Dove 1e-11                       USA  Commercial   \n","83                 Dove 1e-12                       USA  Commercial   \n","\n","                   Purpose Class of Orbit  \\\n","64           Space Science            LEO   \n","67  Technology Development            LEO   \n","81       Earth Observation            LEO   \n","82       Earth Observation            LEO   \n","83       Earth Observation            LEO   \n","\n","    Longitude of Geosynchronous Orbit (Degrees)  Perigee (Kilometers)  \\\n","64                                          0.0                   500   \n","67                                          0.0                   626   \n","81                                          0.0                   398   \n","82                                          0.0                   396   \n","83                                          0.0                   396   \n","\n","    Apogee (Kilometers)  Eccentricity  Inclination (Degrees)  \\\n","64                  506      0.000436                   40.5   \n","67                  631      0.000357                   98.4   \n","81                  401      0.000222                   51.6   \n","82                  402      0.000443                   51.6   \n","83                  402      0.000443                   51.6   \n","\n","    Period (Minutes) Launch Mass (Kilograms) Date of Launch  \\\n","64             94.60                       3     11/19/2013   \n","67             97.27                       3       7/8/2014   \n","81             92.55                       4      7/15/2015   \n","82             92.54                       4      7/15/2015   \n","83             92.54                       4      7/15/2015   \n","\n","   Expected Lifetime (Years)  order  Unnamed: 15  Unnamed: 16  Unnamed: 17  \\\n","64                       NaN     65          NaN          NaN          NaN   \n","67                       NaN     68          NaN          NaN          NaN   \n","81                       NaN     82          NaN          NaN          NaN   \n","82                       NaN     83          NaN          NaN          NaN   \n","83                       NaN     84          NaN          NaN          NaN   \n","\n","    Perigee (Meters)  \n","64            500000  \n","67            626000  \n","81            398000  \n","82            396000  \n","83            396000  "],"text/html":["\n","  <div id=\"df-6158c65c-3888-4323-8824-c8405d8722d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Official Name of Satellite</th>\n","      <th>Country of Operator/Owner</th>\n","      <th>Users</th>\n","      <th>Purpose</th>\n","      <th>Class of Orbit</th>\n","      <th>Longitude of Geosynchronous Orbit (Degrees)</th>\n","      <th>Perigee (Kilometers)</th>\n","      <th>Apogee (Kilometers)</th>\n","      <th>Eccentricity</th>\n","      <th>Inclination (Degrees)</th>\n","      <th>Period (Minutes)</th>\n","      <th>Launch Mass (Kilograms)</th>\n","      <th>Date of Launch</th>\n","      <th>Expected Lifetime (Years)</th>\n","      <th>order</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","      <th>Unnamed: 17</th>\n","      <th>Perigee (Meters)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>64</th>\n","      <td>STARE-B</td>\n","      <td>USA</td>\n","      <td>Military</td>\n","      <td>Space Science</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>500</td>\n","      <td>506</td>\n","      <td>0.000436</td>\n","      <td>40.5</td>\n","      <td>94.60</td>\n","      <td>3</td>\n","      <td>11/19/2013</td>\n","      <td>NaN</td>\n","      <td>65</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>500000</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>Ukube-1</td>\n","      <td>United Kingdom</td>\n","      <td>Government</td>\n","      <td>Technology Development</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>626</td>\n","      <td>631</td>\n","      <td>0.000357</td>\n","      <td>98.4</td>\n","      <td>97.27</td>\n","      <td>3</td>\n","      <td>7/8/2014</td>\n","      <td>NaN</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>626000</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>Dove 1e-10</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>398</td>\n","      <td>401</td>\n","      <td>0.000222</td>\n","      <td>51.6</td>\n","      <td>92.55</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>82</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>398000</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>Dove 1e-11</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>396</td>\n","      <td>402</td>\n","      <td>0.000443</td>\n","      <td>51.6</td>\n","      <td>92.54</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>83</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>396000</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>Dove 1e-12</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>396</td>\n","      <td>402</td>\n","      <td>0.000443</td>\n","      <td>51.6</td>\n","      <td>92.54</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>84</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>396000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6158c65c-3888-4323-8824-c8405d8722d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6158c65c-3888-4323-8824-c8405d8722d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6158c65c-3888-4323-8824-c8405d8722d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["The data is in meters, but is it going to show what we think it will show?  That was rhetorical, but the following questions are not; feel free to use Google for the first 2 questions.\n","\n","What is the radius of the Earth (in meters)?\n","\n","What is the orbital radius of the ISS (in meters)?\n","\n","Is the Perigee showing us the orbital radius (from center of one object to the center of the other object)?"],"metadata":{"id":"-7Kgu4H5OR5I"}},{"cell_type":"markdown","source":["#Finding and Graphing the Orbital Radius"],"metadata":{"id":"EC6cAzLM3hBA"}},{"cell_type":"markdown","source":["For some reason, this data set was using distance from the Earth's surface to the center of the satellite as Perigee, forgetting to add in the radius of the Earth.  What a silly goose!\n","\n","Write some code that will get us the value that we want, using the code in the previous line to help us.\n","\n","For consistency, we will call the orbital radius (distance from Earth's center to satellite's center) 'Orbital Radius (m)'."],"metadata":{"id":"tISqCMi-37IQ"}},{"cell_type":"code","source":["#The space below is here so you can write out the code.\n","#Don't forget to include a command for 'data_eccen.head(5)' so you can check your coding!\n","# -->DELETE ALL LINES BELOW FOR STUDENT VERSION <--\n","data_eccen['Orbital Radius (m)'] = (data_eccen['Perigee (Meters)'] + 6371000)\n","data_eccen.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"_i7D8x0FFaPm","executionInfo":{"status":"ok","timestamp":1655504288779,"user_tz":240,"elapsed":28,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"17df7a71-bb7d-43e2-c565-8d3681c06dfa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n"]},{"output_type":"execute_result","data":{"text/plain":["   Official Name of Satellite Country of Operator/Owner       Users  \\\n","64                    STARE-B                       USA    Military   \n","67                    Ukube-1            United Kingdom  Government   \n","81                 Dove 1e-10                       USA  Commercial   \n","82                 Dove 1e-11                       USA  Commercial   \n","83                 Dove 1e-12                       USA  Commercial   \n","\n","                   Purpose Class of Orbit  \\\n","64           Space Science            LEO   \n","67  Technology Development            LEO   \n","81       Earth Observation            LEO   \n","82       Earth Observation            LEO   \n","83       Earth Observation            LEO   \n","\n","    Longitude of Geosynchronous Orbit (Degrees)  Perigee (Kilometers)  \\\n","64                                          0.0                   500   \n","67                                          0.0                   626   \n","81                                          0.0                   398   \n","82                                          0.0                   396   \n","83                                          0.0                   396   \n","\n","    Apogee (Kilometers)  Eccentricity  Inclination (Degrees)  \\\n","64                  506      0.000436                   40.5   \n","67                  631      0.000357                   98.4   \n","81                  401      0.000222                   51.6   \n","82                  402      0.000443                   51.6   \n","83                  402      0.000443                   51.6   \n","\n","    Period (Minutes) Launch Mass (Kilograms) Date of Launch  \\\n","64             94.60                       3     11/19/2013   \n","67             97.27                       3       7/8/2014   \n","81             92.55                       4      7/15/2015   \n","82             92.54                       4      7/15/2015   \n","83             92.54                       4      7/15/2015   \n","\n","   Expected Lifetime (Years)  order  Unnamed: 15  Unnamed: 16  Unnamed: 17  \\\n","64                       NaN     65          NaN          NaN          NaN   \n","67                       NaN     68          NaN          NaN          NaN   \n","81                       NaN     82          NaN          NaN          NaN   \n","82                       NaN     83          NaN          NaN          NaN   \n","83                       NaN     84          NaN          NaN          NaN   \n","\n","    Perigee (Meters)  Orbital Radius (m)  \n","64            500000             6871000  \n","67            626000             6997000  \n","81            398000             6769000  \n","82            396000             6767000  \n","83            396000             6767000  "],"text/html":["\n","  <div id=\"df-f722c1ee-71a9-40fe-8dd9-b050008cbe78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Official Name of Satellite</th>\n","      <th>Country of Operator/Owner</th>\n","      <th>Users</th>\n","      <th>Purpose</th>\n","      <th>Class of Orbit</th>\n","      <th>Longitude of Geosynchronous Orbit (Degrees)</th>\n","      <th>Perigee (Kilometers)</th>\n","      <th>Apogee (Kilometers)</th>\n","      <th>Eccentricity</th>\n","      <th>Inclination (Degrees)</th>\n","      <th>Period (Minutes)</th>\n","      <th>Launch Mass (Kilograms)</th>\n","      <th>Date of Launch</th>\n","      <th>Expected Lifetime (Years)</th>\n","      <th>order</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","      <th>Unnamed: 17</th>\n","      <th>Perigee (Meters)</th>\n","      <th>Orbital Radius (m)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>64</th>\n","      <td>STARE-B</td>\n","      <td>USA</td>\n","      <td>Military</td>\n","      <td>Space Science</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>500</td>\n","      <td>506</td>\n","      <td>0.000436</td>\n","      <td>40.5</td>\n","      <td>94.60</td>\n","      <td>3</td>\n","      <td>11/19/2013</td>\n","      <td>NaN</td>\n","      <td>65</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>500000</td>\n","      <td>6871000</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>Ukube-1</td>\n","      <td>United Kingdom</td>\n","      <td>Government</td>\n","      <td>Technology Development</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>626</td>\n","      <td>631</td>\n","      <td>0.000357</td>\n","      <td>98.4</td>\n","      <td>97.27</td>\n","      <td>3</td>\n","      <td>7/8/2014</td>\n","      <td>NaN</td>\n","      <td>68</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>626000</td>\n","      <td>6997000</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>Dove 1e-10</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>398</td>\n","      <td>401</td>\n","      <td>0.000222</td>\n","      <td>51.6</td>\n","      <td>92.55</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>82</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>398000</td>\n","      <td>6769000</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>Dove 1e-11</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>396</td>\n","      <td>402</td>\n","      <td>0.000443</td>\n","      <td>51.6</td>\n","      <td>92.54</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>83</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>396000</td>\n","      <td>6767000</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>Dove 1e-12</td>\n","      <td>USA</td>\n","      <td>Commercial</td>\n","      <td>Earth Observation</td>\n","      <td>LEO</td>\n","      <td>0.0</td>\n","      <td>396</td>\n","      <td>402</td>\n","      <td>0.000443</td>\n","      <td>51.6</td>\n","      <td>92.54</td>\n","      <td>4</td>\n","      <td>7/15/2015</td>\n","      <td>NaN</td>\n","      <td>84</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>396000</td>\n","      <td>6767000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f722c1ee-71a9-40fe-8dd9-b050008cbe78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f722c1ee-71a9-40fe-8dd9-b050008cbe78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f722c1ee-71a9-40fe-8dd9-b050008cbe78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["Now it's time to graph Orbital Radius on the X axis w Period on the Y.  Copy, paste, and alter your code from above down here.  Let's hope there's a cool pattern!"],"metadata":{"id":"Ilaw3K-zS3Th"}},{"cell_type":"code","source":["# -->This plotting section doesn't have any scaffolding, it's just blank.  I want the students to copy and paste everything from above and then change Y axis stuff into Orbital Radius stuff.\n","\n","#--> DELETE EVERYTHING BELOW HERE FOR STUDENT VERSION!\n","#This is the correct version of the setup discussed above asking for the Orbital Radius (m)\n","plt.scatter(data_eccen['Orbital Radius (m)'], data_eccen['Period (Minutes)'], s=10)\n","#The above command is how we tell the graph which variables go on which axis, in an X,Y format\n","plt.xlabel(\"Orbital Radius (m)\")  #How we label the X axis, including units\n","plt.ylabel('Period (Minutes)')  #How we label the Y axis, including units\n","plt.title('Satellite Period (Minutes) vs. Orbital Radius (m)')  #All graphs need good titles\n","plt.grid(True) #This command gives the grid lines to make it easy to compare data points\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Oi1F6VzEPkBF","executionInfo":{"status":"ok","timestamp":1655504289120,"user_tz":240,"elapsed":364,"user":{"displayName":"Joe Fehr","userId":"00431279452812132647"}},"outputId":"60ab9ed3-9992-4a8f-da93-f08c01f7664e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Did our graph show a delicious pattern this time?  BTW, note the *values on the horizontal axis are x10^7 power*\n","\n","What is your basis for that response?"],"metadata":{"id":"2Uh_APNsiuj5"}},{"cell_type":"markdown","source":["#Conclusion"],"metadata":{"id":"5HsfXsCl5Ieu"}},{"cell_type":"markdown","source":["Notice that the data is in a nice smooth curve, which means there is a distinct pattern!  As the Orbital Radius increases, the Period increases (it's a non-linear relationship, but we'll focus on that later).\n","\n","While the data *could be* spread along that whole curve, it's not, because this is real world data.  What's up with the clusters?\n","\n","Any guesses on which satellites are in which clusters?  As in, why would we want a satellite at one particular height vs. another?  HINT: Converting minutes into hours might be helpful to you."],"metadata":{"id":"1XX1A-Zui9d5"}},{"cell_type":"markdown","source":["Why did we do this activity using Python instead of Excel/ Sheets?\n","\n","Why would we ever use one vs. another?"],"metadata":{"id":"G8FJhSLDlCyz"}}]}