{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1RSeK924VyHuutF4qNJMLWzfhwTwKRIGT","timestamp":1694386162007}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### **Objective:**\n","\n","At the end of the lesson the students will:\n","\n","\n","*   Design a program to analyze the motion of a free-falling object.\n","*   Analyze a video of a dropped object using a video analysis app.\n","*   Create a .cvs file containing the position-time data which will be integrated to the program created or written code."],"metadata":{"id":"oJRJGNP6JdZo"}},{"cell_type":"markdown","source":["### **Engage: C-E-R**\n","\n","Between a baseball and a golf ball released from the same height, which will hit the ground first?  Defend your answer."],"metadata":{"id":"pW1f7JQyKIhi"}},{"cell_type":"markdown","source":["### **Explore:**\n","\n","*   Collect data by taking a video of a free-falling object.\n","*   Use video analysis app to retrieve a .cvs file of a free-falling object.\n","*   Code the program to analyze data of free-falling object."],"metadata":{"id":"wRD0-y7PKlVL"}},{"cell_type":"code","source":["# this cell only needs to be run once, but re-exectuing it doesn't hurt anything either\n","# imports software packages (not too exciting)\n","import pandas as pd\n","import numpy as np\n","%matplotlib inline\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"],"metadata":{"id":"W8QEWy7lK8vq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataset = pd.read_csv ('https://raw.githubusercontent.com/cattleya1218/QuarkNet/main/PandaDrop.csv')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kJysIGr-NRSy","executionInfo":{"status":"ok","timestamp":1687362592505,"user_tz":300,"elapsed":158,"user":{"displayName":"Celestina A. Pangan","userId":"03714738804464811156"}},"outputId":"451dc885-a673-40b1-c105-6c9cfb5cf033"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time (s)     X (m)     Y (m)  X Velocity (m/s)  Y Velocity (m/s)\n","0     3.267  1.907935  1.980631         -0.022043         -1.138366\n","1     3.300  1.904678  1.944802          0.050472         -1.246728\n","2     3.333  1.911192  1.905716          0.081085         -1.472683\n","3     3.367  1.914450  1.850344          0.008163         -1.812888\n","4     3.400  1.911192  1.785201         -0.052025         -2.211438"],"text/html":["\n","  <div id=\"df-d829d806-bf4f-43c2-8338-fb67c07f2852\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time (s)</th>\n","      <th>X (m)</th>\n","      <th>Y (m)</th>\n","      <th>X Velocity (m/s)</th>\n","      <th>Y Velocity (m/s)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.267</td>\n","      <td>1.907935</td>\n","      <td>1.980631</td>\n","      <td>-0.022043</td>\n","      <td>-1.138366</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.300</td>\n","      <td>1.904678</td>\n","      <td>1.944802</td>\n","      <td>0.050472</td>\n","      <td>-1.246728</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.333</td>\n","      <td>1.911192</td>\n","      <td>1.905716</td>\n","      <td>0.081085</td>\n","      <td>-1.472683</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.367</td>\n","      <td>1.914450</td>\n","      <td>1.850344</td>\n","      <td>0.008163</td>\n","      <td>-1.812888</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.400</td>\n","      <td>1.911192</td>\n","      <td>1.785201</td>\n","      <td>-0.052025</td>\n","      <td>-2.211438</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d829d806-bf4f-43c2-8338-fb67c07f2852')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d829d806-bf4f-43c2-8338-fb67c07f2852 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d829d806-bf4f-43c2-8338-fb67c07f2852');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["#Add a column in the data set for adjusted time and adjusted height.\n","#To adjust time, subtract ti from each time data point to get adjusted time = 0.\n","dataset['adj_time'] = dataset['Time (s)'] - 3.267\n","#To adjust height, subtract hf from the hi.\n","dataset['adj_height'] = dataset['Y (m)'] - 0.309701044\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fHBUXbQLSz4H","executionInfo":{"status":"ok","timestamp":1687362606086,"user_tz":300,"elapsed":140,"user":{"displayName":"Celestina A. Pangan","userId":"03714738804464811156"}},"outputId":"bfe1feef-3fef-435a-f3a2-86cbe5fd1059"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time (s)     X (m)     Y (m)  X Velocity (m/s)  Y Velocity (m/s)  adj_time  \\\n","0     3.267  1.907935  1.980631         -0.022043         -1.138366     0.000   \n","1     3.300  1.904678  1.944802          0.050472         -1.246728     0.033   \n","2     3.333  1.911192  1.905716          0.081085         -1.472683     0.066   \n","3     3.367  1.914450  1.850344          0.008163         -1.812888     0.100   \n","4     3.400  1.911192  1.785201         -0.052025         -2.211438     0.133   \n","\n","   adj_height  \n","0    1.670930  \n","1    1.635101  \n","2    1.596015  \n","3    1.540643  \n","4    1.475500  "],"text/html":["\n","  <div id=\"df-7df37cc3-0dd7-4944-917c-b4bad65e76fb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time (s)</th>\n","      <th>X (m)</th>\n","      <th>Y (m)</th>\n","      <th>X Velocity (m/s)</th>\n","      <th>Y Velocity (m/s)</th>\n","      <th>adj_time</th>\n","      <th>adj_height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.267</td>\n","      <td>1.907935</td>\n","      <td>1.980631</td>\n","      <td>-0.022043</td>\n","      <td>-1.138366</td>\n","      <td>0.000</td>\n","      <td>1.670930</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.300</td>\n","      <td>1.904678</td>\n","      <td>1.944802</td>\n","      <td>0.050472</td>\n","      <td>-1.246728</td>\n","      <td>0.033</td>\n","      <td>1.635101</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.333</td>\n","      <td>1.911192</td>\n","      <td>1.905716</td>\n","      <td>0.081085</td>\n","      <td>-1.472683</td>\n","      <td>0.066</td>\n","      <td>1.596015</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.367</td>\n","      <td>1.914450</td>\n","      <td>1.850344</td>\n","      <td>0.008163</td>\n","      <td>-1.812888</td>\n","      <td>0.100</td>\n","      <td>1.540643</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.400</td>\n","      <td>1.911192</td>\n","      <td>1.785201</td>\n","      <td>-0.052025</td>\n","      <td>-2.211438</td>\n","      <td>0.133</td>\n","      <td>1.475500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7df37cc3-0dd7-4944-917c-b4bad65e76fb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7df37cc3-0dd7-4944-917c-b4bad65e76fb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7df37cc3-0dd7-4944-917c-b4bad65e76fb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"EDPLAYodP3Ju"},"source":["The code in the next box sets values for some parameters of motion.\n","- What is the initial velocity? What's the name of the variable stores that value?\n","- Edit the text below with the proper SI units for each quantity. Re-run the code to make sure your like your edits.\n","\n","These coefficients can be used to predict the motion using the *position function*. The position function is a quadratic equation that predicts the position of an object:\n","$$y_f=y_i+v_i t+\\frac{1}{2}gt^2$$\n","The variables are:\n","- final position, $y_f$\n","- initial position, $y_i$\n","- initial velocity, $v_i$\n","- time, $t$\n","- acceleration due to gravity, $g$\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-6ydpTDWP3Jt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1687362609378,"user_tz":300,"elapsed":151,"user":{"displayName":"Celestina A. Pangan","userId":"03714738804464811156"}},"outputId":"15572c92-a2b2-4f2c-8f72-1a7506e43c45"},"outputs":[{"output_type":"stream","name":"stdout","text":["initial position = 1.67093 m\n","initial velocity = 0 m/s\n","acceleration = -9.8 m/s/s\n"]}],"source":["# this sets the coefficients\n","yi = 1.670930\n","vi = 0\n","g = -9.8\n","print(\"initial position =\", yi, \"m\")\n","print(\"initial velocity =\", vi, \"m/s\")\n","print(\"acceleration =\", g, \"m/s/s\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1687362611370,"user_tz":300,"elapsed":441,"user":{"displayName":"Celestina A. Pangan","userId":"03714738804464811156"}},"outputId":"7c1f05b2-e52c-4627-fd33-3cd875c09d96","id":"eafQeSzZG3Dx"},"outputs":[{"output_type":"stream","name":"stdout","text":["-7.814191107198071\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAkAAAAHHCAYAAABXx+fLAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABG4klEQVR4nO3de1yUZf7/8fcwCmMFo3hgoFBI0yRK1IKwWnPDpPqidvJQptnpt+5m65Jt0pZI7S6dttQybe2g5a7YQevrWmwtaa2Fskq2EnbQ8JBx8Aiogcncvz98MF8nQBmcI/N6Ph7zyLnmmpvPfa8b7+7rvq7LZBiGIQAAgCAS4usCAAAAvI0ABAAAgg4BCAAABB0CEAAACDoEIAAAEHQIQAAAIOgQgAAAQNAhAAEAgKBDAAIAAEGHAATAY0wmk2bNmtWqvnFxcbr99ts9Wk8guPLKK3XllVf6ugyg3SMAAfCazz77TLNmzdLBgwd9XYpPlZaWatasWdq+fbuvSwGClom9wAB4Sl1dnTp06KAOHTpIkp5++mk98MADKisrU1xcnFPf+vp6hYSEqGPHjj6o1Lveeust3XzzzVq9enWTuz1Hjx6VJIWGhvqgMiB4dPB1AQDaL4vF0uq+YWFhHqwkcBB8AO9gCAwIArNmzZLJZNJXX32lMWPGKCIiQl27dtVvf/tb1dXVOfU9duyYHnvsMfXu3VthYWGKi4vTQw89pPr6eqd+GzZs0IgRI9StWzd16tRJ8fHxuuOOO5z6nPgM0KxZs/TAAw9IkuLj42UymWQymRzDQM09A/Tdd9/p5ptvVmRkpM444wxdeumlWrVqlVOfNWvWyGQy6Y033tCf/vQnnXPOObJYLLrqqqu0devWk16Xt956SyaTSR9//HGTz1588UWZTCaVlJRIkioqKjR58mSdc845CgsLU3R0tEaNGuXyMNaiRYt08803S5KGDRvmuA5r1qyR1PQZoBPPLycnR2effbbCw8N10003qbq6WvX19Zo2bZp69Oihs846S5MnT27yv5UkLVmyRIMHD1anTp0UGRmpcePGadeuXS7VDrQn3AECgsiYMWMUFxen3NxcrVu3TnPnztWBAwf02muvOfrcddddWrx4sW666Sbdf//9Wr9+vXJzc7VlyxatWLFCklRVVaWrr75a3bt314wZM9S5c2dt375dy5cvb/Fn33DDDfrmm2+0dOlSPfvss+rWrZskqXv37s32r6ys1JAhQ3TkyBHdd9996tq1qxYvXqyRI0fqrbfe0vXXX+/U//HHH1dISIimT5+u6upqPfnkk7r11lu1fv36Fmu67rrrdNZZZ+mNN97Q0KFDnT5btmyZLrjgAiUmJkqSbrzxRn355ZeaOnWq4uLiVFVVpQ8//FA7d+5sMpx3Mr/4xS903333ae7cuXrooYfUv39/SXL8syW5ubnq1KmTZsyYoa1bt+q5555Tx44dFRISogMHDmjWrFlat26dFi1apPj4eM2cOdPx3T/96U965JFHNGbMGN11113as2ePnnvuOf3iF7/Q559/rs6dO7e6fqDdMAC0e9nZ2YYkY+TIkU7tv/71rw1JxhdffGEYhmFs2rTJkGTcddddTv2mT59uSDI++ugjwzAMY8WKFYYk4z//+c9Jf64kIzs72/H+qaeeMiQZZWVlTfr26tXLmDRpkuP9tGnTDEnGv//9b0dbbW2tER8fb8TFxRkNDQ2GYRjG6tWrDUlG//79jfr6ekffOXPmGJKMzZs3n7TG8ePHGz169DCOHTvmaCsvLzdCQkKMRx991DAMwzhw4IAhyXjqqadOeqzWevPNNw1JxurVq5t8NnToUGPo0KGO943nl5iYaBw9etSpbpPJZFxzzTVO309NTTV69erleL99+3bDbDYbf/rTn5z6bd682ejQoUOTdiBYMAQGBJHf/OY3Tu+nTp0qSXrvvfec/pmZmenU7/7775ckx/BT4x2Df/zjH/rpp588Uut7772n5ORkXX755Y62s846S/fcc4+2b9+u0tJSp/6TJ092en7miiuukHR8GO1kxo4dq6qqKscQlHR8aMxut2vs2LGSpE6dOik0NFRr1qzRgQMHTvfU2mTixIlOD4inpKTIMIwmw44pKSnatWuXjh07Jklavny57Ha7xowZo7179zpeNptN5513nlavXu3V8wD8BQEICCLnnXee0/vevXsrJCTE8RzLjh07FBISoj59+jj1s9ls6ty5s3bs2CFJGjp0qG688Ubl5OSoW7duGjVqlF599dVmnz1pqx07dqhfv35N2huHihpradSzZ0+n9126dJGkUwaW9PR0Wa1WLVu2zNG2bNkyJSUlqW/fvpKOP6D9xBNP6P3331dUVJR+8Ytf6Mknn1RFRYXrJ9ZGPz8/q9UqSYqN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0HDKvvn5+UpKSnJsxgnAfxGAAPiNK6+8UtOmTXNqGzJkiMrLy2W1Wn1S0+9//3s9/PDDMpvNp+ybnp6ujh076m9/+5sXKgNwOghAAPxaaGiobDabTCaT13/22rVrtW3bNt14442t/s7tt9+uuXPnerAqAO5AAALgF26//XZ9/PHHmjNnjkwmk0wmk7Zv395kCGzRokXq3Lmz/vGPf6hfv34644wzdNNNN+nIkSNavHix4uLi1KVLF913331Ow1b19fWaPn26zj77bJ155plKSUnRmjVrTlpTXl6ehg8fLovF4mj74osvNGzYMIWHhysiIkKDBw/Whg0bHJ9nZGRow4YN2rZtm1uvDwD36uDrAgBAkubMmaNvvvlGiYmJevTRRyVJ3bt31/bt25v0PXLkiObOnau8vDzV1tbqhhtu0PXXX6/OnTvrvffe03fffacbb7xRl112mcaOHStJuvfee1VaWqq8vDzFxMRoxYoVSk9P1+bNm3Xeeec1W9O///1v3XLLLU5tt956qwYOHKj58+fLbDZr06ZN6tixo+Pznj17KioqSv/+97/Vu3dvN10dAO5GAALgF6xWq0JDQ3XGGWfIZrOdtO9PP/2k+fPnOwLGTTfdpNdff12VlZU666yzlJCQoGHDhmn16tUaO3asdu7cqVdffVU7d+5UTEyMJGn69OnKz8/Xq6++qj//+c/N/pwdO3Y4+jfauXOnHnjgAZ1//vmS1Gx4iomJ0Y4dO1y+BgC8hwAEIOCcccYZTndXoqKiFBcXp7POOsupraqqSpK0efNmNTQ0qG/fvk7Hqa+vV9euXVv8OT/++KPT8JckZWZm6q677tLrr7+utLQ03XzzzU3u9HTq1ElHjhxp8/kB8DwCEICAc+KQkySZTKZm2xqnox86dEhms1kbN25sMpvrxND0c926ddOBAwec2mbNmqVbbrlFq1at0vvvv6/s7Gzl5eXp+uuvd/TZv3+/unfv3qZzA+AdBCAAfiM0NLRV6+24auDAgWpoaFBVVZWuuOIKl75XWlrapL1v377q27evfve732n8+PF69dVXHQGorq5O27Zt08CBA91WPwD3YxYYAL8RFxen9evXa/v27dq7d6/bFhTs27evbr31Vk2cOFHLly9XWVmZioqKlJubq1WrVrX4vREjRmjt2rWO9z/++KPuvfderVmzRjt27NCnn36q//znP+rfv7+jz7p16xQWFqbU1FS31A7AMwhAAPzG9OnTZTablZCQoO7du2vnzp1uO/arr76qiRMn6v7771e/fv00evRo/ec//1HPnj1b/M6tt96qL7/8Ul9//bUkyWw2a9++fZo4caL69u2rMWPG6JprrlFOTo7jO0uXLtWtt96qM844w221A3A/k2EYhq+LAAB/9cADD6impkYvvvjiKfvu3btX/fr104YNGxQfH++F6gC0FXeAAOAk/vCHP6hXr16tGo7bvn27XnjhBcIPEAC4AwQAAIIOd4AAAEDQIQABAICgQwACAABBhwAEAACCDgEIAAAEHQIQAAAIOgQgAAAQdAhAAAAg6BCAAABA0Pn/ISNnaQEZc38AAAAASUVORK5CYII=\n"},"metadata":{}}],"source":["# makes an empty position/time data set\n","time_list = []\n","position_list = []\n","t = 0              # sets a starting value for time\n","\n","while (t < 0.55):                  # runs the 4 lines below until time is not < 11\n","    time_list.append(t)          # saves the time value\n","    yf = yi + vi*t + .5*g*t**2   # calculates yf\n","    position_list.append(yf)     # saves yf as the position value\n","    t = t + 1/30\n","\n","#fit a quadratic formula to collected data.\n","z = np.polyfit(time_list, dataset['adj_height'],2)\n","g = 2*z[0]\n","print(g)\n","#   this creates a scatterplot: plt.scatter(x-variable, y-variable)\n","\n","plt.scatter(time_list, dataset['adj_height'])\n","plt.title(\"position vs. time\")\n","plt.xlabel(\"time (s)\")\n","plt.ylabel(\"position (m)\");"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1687362619312,"user_tz":300,"elapsed":501,"user":{"displayName":"Celestina A. Pangan","userId":"03714738804464811156"}},"outputId":"87520529-e581-4080-f726-e143b785261c","id":"eM2z-tUNdOpd"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# makes an empty position/time data set\n","time_list = []\n","position_list = []\n","fit_list = []\n","t = 0              # sets a starting value for time\n","\n","while (t < 0.55):                  # runs the 4 lines below until time is not < 11\n","    time_list.append(t)          # saves the time value\n","    yf = yi + vi*t + .5*g*t**2   # calculates yf\n","    position_list.append(yf)     # saves yf as the position value\n","    yfit = z[2] + z[1] * t + z[0] *t**2\n","    fit_list.append(yfit)\n","    t = t + 1/30\n","\n","\n","\n","#   this creates a scatterplot: plt.scatter(x-variable, y-variable) of the dataand the theoretical curve\n","plt.scatter(time_list, dataset['adj_height'])\n","plt.scatter(time_list, position_list)\n","plt.plot(time_list, fit_list, linewidth=1, color = 'y')\n","plt.title(\"position vs. time\")\n","plt.xlabel(\"time (s)\")\n","plt.ylabel(\"position (m)\")\n","plt.text (0,0, f'acceleration(g) = {g:.2f} m/s/s', size=14);"]},{"cell_type":"markdown","source":["## **Explain:**\n","\n","What does the orange and blue plot represent?\n","\n","Explain what the two data plot mean.\n"],"metadata":{"id":"-D9ZaPfOjt3K"}}]}