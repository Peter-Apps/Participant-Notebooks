{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"5XCt10xHj0Di"},"outputs":[],"source":[]},{"cell_type":"markdown","source":[" # Teacher's info\n","\n"," I plan to make this an introductory activity.  Problably for my AP students and Honors students\n","\n"," For Fundamental Physics, I will take out the statistics, but keep in things like reading files, and making scatterplots and histograms.\n","\n"," In both cases, I want to stress the importance of seeing data as opposed to reading data.  Both are useful, but humans tend to be visual, so seeing the data plotted is often more satisfying and more illustrative than reading a series of numbers.\n","\n"," Baseball also shows that we can analyze any kind of data!  It does'nt have to be \"science\" or \"physics\"  At the beginning of the school year, baseball is still in full swing\n","\n"," Not sure about assessments.  I'm thinking of having each small group (3 to 4 students) present their findings, whatever they are, as a whiteboard or computerboard session.  Modeling stresses this as a major portion of how science works.  "],"metadata":{"id":"3AIYTCbyiONH"}},{"cell_type":"markdown","metadata":{"id":"rUtM3R2gjfQf"},"source":["# Baseball\n","\n","Your task is to:\n","\n","Play with the data.  See what relationships you can find with the various data.  \n","\n","Some info\n","\n","playerID - this is the player's name, may not be recognizable, but that it ok.  The format is the first 5 letters of the last name, first two letters of the first name, and then a two digit number.  My favorite player growing up was Ernie Banks, so he would be identified as bankser01\n","\n","yearID - this is the year that stats are from.  Baseball started in 1871, the AL and NL became MLB in 1901, the color barrier was broken in 1947, and baseball adopted the 162 game season in 1962\n","\n","stint - not sure what this means\n","\n","teamID - team the player was on for the stats, not sure if there are two entries for a player traded?\n","\n","lgID - what league was in.  After 1901, this would be AL or NL\n","\n","G, AB, R, H, 2B, 3B, HR, RBI - these are traditional stats, games played, at bats, runs, hits, doubles, triples, home runs, and runs batted in\n","\n","SB, CS - this is stolen bases, and caught stealing\n","\n","W, SO - this is walks and strikeouts (many people use BB for walks, and K for strikeouts as opposed to SO)\n","\n","IBB - intentional walks\n","\n","HBP - hit by pitch\n","\n","SH, SF - sacrifice hits and sacrifice flies. These do not count as an at bat!\n","\n","GIDP - grounded into double play\n","\n","Your Goals!\n","\n","Become familiar with Python, and running code using Colab\n","\n","Play with the stats, making whatever cuts on the data you think is interesting\n","\n","Discover some relationships in baseball (Baseball is VERY statistically driven)\n","\n","Learn something about statistics, particularly the Normal (Gaussian) distribution\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"eEtmm3dEcbOG","outputId":"37b0f71f-93b8-4ad0-d927-c597c666cf16","executionInfo":{"status":"ok","timestamp":1655494936838,"user_tz":300,"elapsed":50629,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    playerID  yearID  stint teamID lgID   G   AB   R   H  2B  ...   RBI   SB  \\\n","0  abercda01    1871      1    TRO  NaN   1    4   0   0   0  ...   0.0  0.0   \n","1   addybo01    1871      1    RC1  NaN  25  118  30  32   6  ...  13.0  8.0   \n","2  allisar01    1871      1    CL1  NaN  29  137  28  40   4  ...  19.0  3.0   \n","3  allisdo01    1871      1    WS3  NaN  27  133  28  44  10  ...  27.0  1.0   \n","4  ansonca01    1871      1    RC1  NaN  25  120  29  39  11  ...  16.0  6.0   \n","\n","    CS  BB   SO  IBB  HBP  SH  SF  GIDP  \n","0  0.0   0  0.0  NaN  NaN NaN NaN   0.0  \n","1  1.0   4  0.0  NaN  NaN NaN NaN   0.0  \n","2  1.0   2  5.0  NaN  NaN NaN NaN   1.0  \n","3  1.0   0  2.0  NaN  NaN NaN NaN   0.0  \n","4  2.0   2  1.0  NaN  NaN NaN NaN   0.0  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-dbf76500-3446-42e7-888a-c5548b99a880\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>RBI</th>\n","      <th>SB</th>\n","      <th>CS</th>\n","      <th>BB</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>abercda01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>TRO</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>addybo01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>RC1</td>\n","      <td>NaN</td>\n","      <td>25</td>\n","      <td>118</td>\n","      <td>30</td>\n","      <td>32</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>13.0</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>allisar01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>CL1</td>\n","      <td>NaN</td>\n","      <td>29</td>\n","      <td>137</td>\n","      <td>28</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>19.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>allisdo01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>WS3</td>\n","      <td>NaN</td>\n","      <td>27</td>\n","      <td>133</td>\n","      <td>28</td>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>...</td>\n","      <td>27.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ansonca01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>RC1</td>\n","      <td>NaN</td>\n","      <td>25</td>\n","      <td>120</td>\n","      <td>29</td>\n","      <td>39</td>\n","      <td>11</td>\n","      <td>...</td>\n","      <td>16.0</td>\n","      <td>6.0</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 22 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbf76500-3446-42e7-888a-c5548b99a880')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dbf76500-3446-42e7-888a-c5548b99a880 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dbf76500-3446-42e7-888a-c5548b99a880');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}],"source":[" # We've included some links and potential tools, but the rest is up to you! Put your code here.\n","# Pro tip: programmers often copy/paste code from their previous work\n","# in programming python, the hashtag symbol, # means the words after are comments.\n","# Comments are very useful in reminding you what you are doing, AND telling readers of your code what you are doing.\n","#  Comment alot!\n","\n","# imports some software packages we'll use\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","\n","\n","#data = pd.read_csv('/content/drive/MyDrive/Batting.csv') I'm saving this just in case something goes wrong\n","data = pd.read_excel('https://docs.google.com/spreadsheets/d/1pQVMo8DVCO0W44I4xVLUnWvdrjIoM6oU/export')\n","\n","# The .head(n) command displays the first n rows of a file.  Just testing to make sure we can read the data\n","data.head(5)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":111,"status":"ok","timestamp":1655494949821,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"rs3K9iWSM9Vf","outputId":"a54b2dc3-c7dc-4458-9939-611fddc1f8b4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(110495, 22)"]},"metadata":{},"execution_count":2}],"source":["data.shape\n","# Just checking to see how big the file is, this is a big file!\n","#There are over 110,000 people that have appeared in at least 1 major league game\n"]},{"cell_type":"markdown","source":["Can you figure out how to calculate singles?  Most of the time MLB (Major League Baseball) does not have a separate statistic for singles....\n","H == Hits, are the total singles, doubles, triples, and home runs.  MLB does keep track of doubles, triples and singles.\n","\n","Then, can you figure out total bases?  That is the total number of bases you get for each hit.  \n","\n","Batting average is a very common and popular stat.  Batting averge is hits/at bats.  Calculate this!  A perfect average is 1.000, meaning 1 hit for each at bat\n","\n","Slugging shows the importance of hits other than singles.  Slugging is total bases/at bats.  Perfect slugging is 4.000, meaning a Home run for each at bat"],"metadata":{"id":"EGdK1satVQdI"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"elapsed":103,"status":"ok","timestamp":1655494958660,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"0xjfhSwQG55K","outputId":"211637a2-29e1-46b6-c3b6-0b15865e47d5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    playerID  yearID  stint teamID lgID   G   AB   R   H  2B  ...   SO  IBB  \\\n","0  abercda01    1871      1    TRO  NaN   1    4   0   0   0  ...  0.0  NaN   \n","1   addybo01    1871      1    RC1  NaN  25  118  30  32   6  ...  0.0  NaN   \n","2  allisar01    1871      1    CL1  NaN  29  137  28  40   4  ...  5.0  NaN   \n","3  allisdo01    1871      1    WS3  NaN  27  133  28  44  10  ...  2.0  NaN   \n","4  ansonca01    1871      1    RC1  NaN  25  120  29  39  11  ...  1.0  NaN   \n","\n","   HBP  SH  SF  GIDP  1B  total bases   average  slugging  \n","0  NaN NaN NaN   0.0   0            0  0.000000  0.000000  \n","1  NaN NaN NaN   0.0  26           38  0.271186  0.322034  \n","2  NaN NaN NaN   1.0  31           54  0.291971  0.394161  \n","3  NaN NaN NaN   0.0  30           64  0.330827  0.481203  \n","4  NaN NaN NaN   0.0  25           56  0.325000  0.466667  \n","\n","[5 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-24c3de09-1d37-40f4-a5b4-b9097cf80331\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","      <th>1B</th>\n","      <th>total bases</th>\n","      <th>average</th>\n","      <th>slugging</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>abercda01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>TRO</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>addybo01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>RC1</td>\n","      <td>NaN</td>\n","      <td>25</td>\n","      <td>118</td>\n","      <td>30</td>\n","      <td>32</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>26</td>\n","      <td>38</td>\n","      <td>0.271186</td>\n","      <td>0.322034</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>allisar01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>CL1</td>\n","      <td>NaN</td>\n","      <td>29</td>\n","      <td>137</td>\n","      <td>28</td>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>31</td>\n","      <td>54</td>\n","      <td>0.291971</td>\n","      <td>0.394161</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>allisdo01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>WS3</td>\n","      <td>NaN</td>\n","      <td>27</td>\n","      <td>133</td>\n","      <td>28</td>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>30</td>\n","      <td>64</td>\n","      <td>0.330827</td>\n","      <td>0.481203</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ansonca01</td>\n","      <td>1871</td>\n","      <td>1</td>\n","      <td>RC1</td>\n","      <td>NaN</td>\n","      <td>25</td>\n","      <td>120</td>\n","      <td>29</td>\n","      <td>39</td>\n","      <td>11</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>25</td>\n","      <td>56</td>\n","      <td>0.325000</td>\n","      <td>0.466667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24c3de09-1d37-40f4-a5b4-b9097cf80331')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-24c3de09-1d37-40f4-a5b4-b9097cf80331 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-24c3de09-1d37-40f4-a5b4-b9097cf80331');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["# You can specify a column by data['column name']  This allows us to make calculated colunms\n","\n","# playing with various stats.   H is hits, that is all hits, so to get singles (1B) out\n","# we need to subtract 2B, 3B, and HR from hits\n","\n","data['1B'] = data['H'] - data['2B'] - data['3B'] - data['HR']\n","\n","data['total bases'] = data['H'] + data['2B'] + 2*data['3B'] + 3*data['HR']\n","#This calculates the total bases.  A single is 1 base, a double is 2 bases, a triple is 3 bases, a HR is 4 bases.  This formula is a bit\n","# complicated to see if you can make sense of it.\n","\n","data['average'] = data['H']/data['AB']\n","#average is a very traditional stat\n","data['slugging'] = data['total bases']/data['AB']\n","\n","data.head(5)"]},{"cell_type":"markdown","source":["We can use python to find sums of columns and averages of columns.  to find the sum of a column we use sum(data['column name']  Average is a bit different.  we use the numpy function (that's why we imported it at the beginning).  np.mean(data['column name']  finds average (Mean is another name for average)\n","\n","Then play with the formating in the print. .3f means three decimals.   "],"metadata":{"id":"YKZUIMT6i7x-"}},{"cell_type":"code","source":["value = (sum(data['total bases'])/sum(data['AB']))\n","value3 = (sum(data['H'])/sum(data['AB']))\n","print(\"Batting average is \",f'{value3:.3f}')\n","print(\"Slugging % is \",f'{value:.3f}')\n","# use sum() to find the sum of a particular column.\n","\n","value2 = np.mean(data['G'])\n","print(\"Average games played per year is \",f'{value2:.1f}', \" games\")\n","# use np.mean() to find the average of a particular column"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LXDJTgaPi6SG","executionInfo":{"status":"ok","timestamp":1655494969113,"user_tz":300,"elapsed":246,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"e22f9dad-84d9-48c5-c383-9d0eaa5f6d17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Batting average is  0.261\n","Slugging % is  0.385\n","Average games played per year is  50.6  games\n"]}]},{"cell_type":"markdown","source":["How about seeing if there is a relationship between the number of hits a player gets in a season and the number of runs that player scores in the same season? Scatter plots work real well for this!\n","\n","Can you do the same thing for single and runs, doubles and runs, triples and runs, and then Home Runs and runs?\n","\n","Sometimes coding is very syntax dependent (the words used really matter).  If you get stuck, you can always \"google\"  scatterplot python, and you should be able to find lots of info about making the syntax work"],"metadata":{"id":"oF5Zu2i6sm7l"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":790,"status":"ok","timestamp":1655494991337,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"qZlWQN5SNQzG","outputId":"397d8b7b-8137-4257-b058-d16ec329433c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(data['H'], data['R'])  # makes the scatterplot  the first argument is the x data, and the second argument is the y data\n","plt.title(\"Hits and runs\")  # A title is always helpful.  Science is about communication, so tell your reader what you are graphing!\n","plt.xlabel(\"Hits\") # An axis without a label is not very descriptive\n","plt.ylabel(\"runs\") # Same as above\n","plt.grid(True); # Try replacing True with False and see what happens"]},{"cell_type":"markdown","source":["Now make a scatter plot for the singles and runs"],"metadata":{"id":"Z0laRjnrtATo"}},{"cell_type":"code","source":["#insert your code here to make the scatterplot of singles and runs.  Copy the code from above and modify it!  There is nothing\n","# wrong with borrowing existing code and making modifications!\n"],"metadata":{"id":"MIH8XsaytJ7g"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now make the scatterplot for doubles and runs"],"metadata":{"id":"nURRBHBKtdu8"}},{"cell_type":"code","source":["#insert your code here to make the scatterplot of doubles and runs.  Copy the code from above and modify it!  There is nothing\n","# wrong with borrowing existing code and making modifications!\n"],"metadata":{"id":"JWYwyJ7Otj3G"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now the scatterplot for triples and runs"],"metadata":{"id":"iAL6GZ0mtweM"}},{"cell_type":"code","source":["#insert your code here to make the scatterplot of triples and runs.  Copy the code from above and modify it!  There is nothing\n","# wrong with borrowing existing code and making modifications!\n"],"metadata":{"id":"Gxz0KqZCt1qF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now, the scatterplot for Home runs and runs"],"metadata":{"id":"gXBa6SCdt7IN"}},{"cell_type":"code","source":["#insert your code here to make the scatterplot of home runs and runs.  Copy the code from above and modify it!  There is nothing\n","# wrong with borrowing existing code and making modifications!\n"],"metadata":{"id":"iM0L3ep2uEc2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now, make a scatterplot of any two statistics to see if there is any obvious relationship"],"metadata":{"id":"CJwqtiYQuNHj"}},{"cell_type":"code","source":["#insert your code here to make the scatterplot of variable1 and variable2.  Copy the code from above and modify it!  There is nothing\n","# wrong with borrowing existing code and making modifications!\n"],"metadata":{"id":"AB8vUNN_uVwa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Beginning in 1947, MLB became integrated.  So the first cuts, we can make are to find all the data after 1946"],"metadata":{"id":"JjcwSZgSXLH6"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"executionInfo":{"elapsed":177,"status":"ok","timestamp":1655495005042,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"Sh2AwPlMOx0M","outputId":"79d23798-3332-4652-c59a-3dee79580002"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        playerID  yearID  stint teamID lgID    G   AB   R    H  2B  ...    SO  \\\n","32748  abernwo01    1947      1    NY1   NL    1    0   0    0   0  ...   0.0   \n","32749  aberscl01    1947      1    CHN   NL   47  140  24   39   6  ...  32.0   \n","32750  adamsbo03    1947      1    CIN   NL   81  217  39   59  11  ...  23.0   \n","32751  adamsbu01    1947      1    PHI   NL   69  182  21   45  11  ...  29.0   \n","32752  adamsdi01    1947      1    PHA   AL   37   89   9   18   2  ...  18.0   \n","32753  albrija01    1947      1    PHI   NL   41   99   9   23   4  ...  11.0   \n","32754  andrehu01    1947      1    NY1   NL    7    0   0    0   0  ...   0.0   \n","32755  applilu01    1947      1    CHA   AL  139  503  67  154  29  ...  28.0   \n","32756  ardizru01    1947      1    NYA   AL    1    0   0    0   0  ...   0.0   \n","32757  auldsle01    1947      1    BOS   AL    3    4   0    1   0  ...   1.0   \n","\n","       IBB  HBP   SH   SF  GIDP   1B  total bases   average  slugging  \n","32748  0.0  0.0  0.0  0.0   0.0    0            0       NaN       NaN  \n","32749  NaN  0.0  0.0  NaN   5.0   26           63  0.278571  0.450000  \n","32750  NaN  4.0  7.0  NaN   2.0   42           86  0.271889  0.396313  \n","32751  NaN  0.0  1.0  NaN   3.0   31           64  0.247253  0.351648  \n","32752  NaN  0.0  2.0  NaN   0.0   11           32  0.202247  0.359551  \n","32753  NaN  0.0  3.0  NaN   2.0   17           33  0.232323  0.333333  \n","32754  0.0  0.0  0.0  0.0   0.0    0            0       NaN       NaN  \n","32755  NaN  1.0  4.0  NaN  15.0  117          207  0.306163  0.411531  \n","32756  0.0  0.0  0.0  0.0   0.0    0            0       NaN       NaN  \n","32757  NaN  0.0  0.0  NaN   0.0    1            1  0.250000  0.250000  \n","\n","[10 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-8bbdd0f9-1da5-4cd3-b522-4447f4518fe0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","      <th>1B</th>\n","      <th>total bases</th>\n","      <th>average</th>\n","      <th>slugging</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32748</th>\n","      <td>abernwo01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>NY1</td>\n","      <td>NL</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>32749</th>\n","      <td>aberscl01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>47</td>\n","      <td>140</td>\n","      <td>24</td>\n","      <td>39</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>32.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>26</td>\n","      <td>63</td>\n","      <td>0.278571</td>\n","      <td>0.450000</td>\n","    </tr>\n","    <tr>\n","      <th>32750</th>\n","      <td>adamsbo03</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>CIN</td>\n","      <td>NL</td>\n","      <td>81</td>\n","      <td>217</td>\n","      <td>39</td>\n","      <td>59</td>\n","      <td>11</td>\n","      <td>...</td>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>42</td>\n","      <td>86</td>\n","      <td>0.271889</td>\n","      <td>0.396313</td>\n","    </tr>\n","    <tr>\n","      <th>32751</th>\n","      <td>adamsbu01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>PHI</td>\n","      <td>NL</td>\n","      <td>69</td>\n","      <td>182</td>\n","      <td>21</td>\n","      <td>45</td>\n","      <td>11</td>\n","      <td>...</td>\n","      <td>29.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>31</td>\n","      <td>64</td>\n","      <td>0.247253</td>\n","      <td>0.351648</td>\n","    </tr>\n","    <tr>\n","      <th>32752</th>\n","      <td>adamsdi01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>PHA</td>\n","      <td>AL</td>\n","      <td>37</td>\n","      <td>89</td>\n","      <td>9</td>\n","      <td>18</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>32</td>\n","      <td>0.202247</td>\n","      <td>0.359551</td>\n","    </tr>\n","    <tr>\n","      <th>32753</th>\n","      <td>albrija01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>PHI</td>\n","      <td>NL</td>\n","      <td>41</td>\n","      <td>99</td>\n","      <td>9</td>\n","      <td>23</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>17</td>\n","      <td>33</td>\n","      <td>0.232323</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>32754</th>\n","      <td>andrehu01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>NY1</td>\n","      <td>NL</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>32755</th>\n","      <td>applilu01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>CHA</td>\n","      <td>AL</td>\n","      <td>139</td>\n","      <td>503</td>\n","      <td>67</td>\n","      <td>154</td>\n","      <td>29</td>\n","      <td>...</td>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>15.0</td>\n","      <td>117</td>\n","      <td>207</td>\n","      <td>0.306163</td>\n","      <td>0.411531</td>\n","    </tr>\n","    <tr>\n","      <th>32756</th>\n","      <td>ardizru01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>NYA</td>\n","      <td>AL</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>32757</th>\n","      <td>auldsle01</td>\n","      <td>1947</td>\n","      <td>1</td>\n","      <td>BOS</td>\n","      <td>AL</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.250000</td>\n","      <td>0.250000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bbdd0f9-1da5-4cd3-b522-4447f4518fe0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8bbdd0f9-1da5-4cd3-b522-4447f4518fe0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8bbdd0f9-1da5-4cd3-b522-4447f4518fe0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["# Making cuts on your data (i.e., filtering your data set)\n","# Cuts allow us to pick out certain data, excluding others.\n","# data_trimmed_after1946 = data.query('yearID > 1946') look at this statement.  You make another data set, and then query (question) the larger\n","# dataset.  In this case, I want the data where the year is after 1946.  Again, \"google\" query python to see how to format this statement\n","\n","data_trimmed_after1946 = data.query('yearID > 1946')\n","\n","# I picked this cut to only inlcude games after baseball became integrated\n","data_trimmed_after1946.head(10)  # juat to make sure we are getting the proper data"]},{"cell_type":"markdown","source":["Now you could do the same scatterplots as before to see the relationship between hits and runs after the 1946 season.\n","\n","I've done the scatterplot of hits and runs"],"metadata":{"id":"cJqhbqFhXwkj"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":673,"status":"ok","timestamp":1655495015773,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"Iien1DKZM6QD","outputId":"693eeec6-8c26-4e6c-ca2b-f4aa96df189a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(data_trimmed_after1946['H'], data_trimmed_after1946['R'])  # makes the scatterplot\n","plt.title(\"Hits and runs\")\n","plt.xlabel(\"Hits\")\n","plt.ylabel(\"runs\")\n","plt.grid(True);"]},{"cell_type":"markdown","source":["Home runs are one of the most popular parts of the game.  How many times have players hit more than 50 Home runs in a season?  Histograms work well for this visualization\n","\n","\"google\" histogram python for more about how to make and plot histograms\n","\n","Can you modifiy the code to see how many times players have hit more than 40 HRs in a season?  \n","\n","Or similar plots for singles, doubles, triples?  \n","\n","something to notice about the bins and the range....My range for this particular plot is 50 to 80, that is 31 values.  If I make bins = that number, I get a single integer value for each bin...."],"metadata":{"id":"xJUZXbgrYNYI"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":441,"status":"ok","timestamp":1655495025894,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"mawEC6FaOIjJ","outputId":"fb0017ed-3672-41e3-df4e-32b8f2aa9362"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["# first parameter is what you want to bin, bins is how fine you want, range is what you want the range to be\n","plt.hist(data_trimmed_after1946['HR'], bins=31, range=[50,80], log=False)  # makes the histogram\n","plt.title(\"HR\")\n","plt.xlabel(\"HR\")\n","plt.ylabel(\"number of events\")\n","plt.grid(True);"]},{"cell_type":"markdown","source":["After the 1961 season, all MLB teams went to a 162 game season.  I made another cut, getting all the data after the 1961 season"],"metadata":{"id":"R3yl8WPLzRFI"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"executionInfo":{"elapsed":215,"status":"ok","timestamp":1655495037661,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"289mTL2Nu6Mf","outputId":"810bffa4-30f3-42a6-90b9-93acc0db835c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        playerID  yearID  stint teamID lgID    G   AB    R    H  2B  ...  \\\n","41959  aaronha01    1962      1    ML1   NL  156  592  127  191  28  ...   \n","41960  aaronto01    1962      1    ML1   NL  141  334   54   77  20  ...   \n","41961  adairje01    1962      1    BAL   AL  139  538   67  153  29  ...   \n","41962  adcocjo01    1962      1    ML1   NL  121  391   48   97  12  ...   \n","41963   ageeto01    1962      1    CLE   AL    5   14    0    3   0  ...   \n","41964  aguirha01    1962      1    DET   AL   42   75    0    2   0  ...   \n","41965  allenbe01    1962      1    MIN   AL  159  573   79  154  27  ...   \n","41966  allenbo04    1962      1    CLE   AL   30    5    0    0   0  ...   \n","41967  allisbo01    1962      1    MIN   AL  149  519  102  138  24  ...   \n","41968   aloufe01    1962      1    SFN   NL  154  561   96  177  30  ...   \n","\n","          SO   IBB  HBP   SH   SF  GIDP   1B  total bases   average  slugging  \n","41959   73.0  14.0  3.0  0.0  6.0  14.0  112          366  0.322635  0.618243  \n","41960   58.0   0.0  0.0  4.0  3.0  10.0   47          125  0.230539  0.374251  \n","41961   77.0   1.0  2.0  4.0  3.0  15.0  109          223  0.284387  0.414498  \n","41962   91.0   8.0  1.0  2.0  3.0  18.0   55          198  0.248082  0.506394  \n","41963    4.0   0.0  0.0  0.0  0.0   0.0    3            3  0.214286  0.214286  \n","41964   46.0   0.0  0.0  4.0  0.0   1.0    2            2  0.026667  0.026667  \n","41965   82.0  10.0  0.0  7.0  4.0   9.0  108          231  0.268761  0.403141  \n","41966    2.0   0.0  0.0  0.0  0.0   0.0    0            0  0.000000  0.000000  \n","41967  115.0   0.0  4.0  3.0  3.0   9.0   77          265  0.265896  0.510597  \n","41968   66.0   2.0  5.0  2.0  5.0   4.0  119          288  0.315508  0.513369  \n","\n","[10 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-b6d9499d-7e7d-43ed-8c7f-18b168f06764\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","      <th>1B</th>\n","      <th>total bases</th>\n","      <th>average</th>\n","      <th>slugging</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>41959</th>\n","      <td>aaronha01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>ML1</td>\n","      <td>NL</td>\n","      <td>156</td>\n","      <td>592</td>\n","      <td>127</td>\n","      <td>191</td>\n","      <td>28</td>\n","      <td>...</td>\n","      <td>73.0</td>\n","      <td>14.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>112</td>\n","      <td>366</td>\n","      <td>0.322635</td>\n","      <td>0.618243</td>\n","    </tr>\n","    <tr>\n","      <th>41960</th>\n","      <td>aaronto01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>ML1</td>\n","      <td>NL</td>\n","      <td>141</td>\n","      <td>334</td>\n","      <td>54</td>\n","      <td>77</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>58.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>10.0</td>\n","      <td>47</td>\n","      <td>125</td>\n","      <td>0.230539</td>\n","      <td>0.374251</td>\n","    </tr>\n","    <tr>\n","      <th>41961</th>\n","      <td>adairje01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>BAL</td>\n","      <td>AL</td>\n","      <td>139</td>\n","      <td>538</td>\n","      <td>67</td>\n","      <td>153</td>\n","      <td>29</td>\n","      <td>...</td>\n","      <td>77.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>15.0</td>\n","      <td>109</td>\n","      <td>223</td>\n","      <td>0.284387</td>\n","      <td>0.414498</td>\n","    </tr>\n","    <tr>\n","      <th>41962</th>\n","      <td>adcocjo01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>ML1</td>\n","      <td>NL</td>\n","      <td>121</td>\n","      <td>391</td>\n","      <td>48</td>\n","      <td>97</td>\n","      <td>12</td>\n","      <td>...</td>\n","      <td>91.0</td>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>18.0</td>\n","      <td>55</td>\n","      <td>198</td>\n","      <td>0.248082</td>\n","      <td>0.506394</td>\n","    </tr>\n","    <tr>\n","      <th>41963</th>\n","      <td>ageeto01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CLE</td>\n","      <td>AL</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.214286</td>\n","      <td>0.214286</td>\n","    </tr>\n","    <tr>\n","      <th>41964</th>\n","      <td>aguirha01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>DET</td>\n","      <td>AL</td>\n","      <td>42</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>46.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.026667</td>\n","      <td>0.026667</td>\n","    </tr>\n","    <tr>\n","      <th>41965</th>\n","      <td>allenbe01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>MIN</td>\n","      <td>AL</td>\n","      <td>159</td>\n","      <td>573</td>\n","      <td>79</td>\n","      <td>154</td>\n","      <td>27</td>\n","      <td>...</td>\n","      <td>82.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>4.0</td>\n","      <td>9.0</td>\n","      <td>108</td>\n","      <td>231</td>\n","      <td>0.268761</td>\n","      <td>0.403141</td>\n","    </tr>\n","    <tr>\n","      <th>41966</th>\n","      <td>allenbo04</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CLE</td>\n","      <td>AL</td>\n","      <td>30</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>41967</th>\n","      <td>allisbo01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>MIN</td>\n","      <td>AL</td>\n","      <td>149</td>\n","      <td>519</td>\n","      <td>102</td>\n","      <td>138</td>\n","      <td>24</td>\n","      <td>...</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>9.0</td>\n","      <td>77</td>\n","      <td>265</td>\n","      <td>0.265896</td>\n","      <td>0.510597</td>\n","    </tr>\n","    <tr>\n","      <th>41968</th>\n","      <td>aloufe01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>SFN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>561</td>\n","      <td>96</td>\n","      <td>177</td>\n","      <td>30</td>\n","      <td>...</td>\n","      <td>66.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>119</td>\n","      <td>288</td>\n","      <td>0.315508</td>\n","      <td>0.513369</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6d9499d-7e7d-43ed-8c7f-18b168f06764')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b6d9499d-7e7d-43ed-8c7f-18b168f06764 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b6d9499d-7e7d-43ed-8c7f-18b168f06764');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["# Making cuts on your data (i.e., filtering your data set)\n","data_trimmed_after1961 = data.query('yearID > 1961')\n","# I picked this cut to only inlcude games after baseball adopted 162 game season\n","data_trimmed_after1961.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":578,"status":"ok","timestamp":1655495051532,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"DRT4OjCtvX3B","outputId":"ebb4f444-cf7a-408b-92d1-7fc08de69a86"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(data_trimmed_after1961['AB'], data_trimmed_after1961['H'])  # makes the scatterplot\n","plt.title(\"At bats and hits\")\n","plt.xlabel(\"At Bats\")\n","plt.ylabel(\"Hits\")\n","plt.grid(True);"]},{"cell_type":"markdown","source":["My favorite player growing up was Ernie Banks.  His playerID would be bankser01.  The following cut picks out the batting statistics for Ernie Banks during his career.  \n","\n","Can you make a cut picking out your favorite player?  "],"metadata":{"id":"R-PdpPYizhpc"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":674},"executionInfo":{"elapsed":110,"status":"ok","timestamp":1655495058061,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"h5YixRZZAJgn","outputId":"125d690f-5a8f-4388-f1a2-7fa021df23c2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        playerID  yearID  stint teamID lgID    G   AB    R    H  2B  ...  \\\n","36327  bankser01    1953      1    CHN   NL   10   35    3   11   1  ...   \n","36908  bankser01    1954      1    CHN   NL  154  593   70  163  19  ...   \n","37489  bankser01    1955      1    CHN   NL  154  596   98  176  29  ...   \n","38141  bankser01    1956      1    CHN   NL  139  538   82  160  25  ...   \n","38763  bankser01    1957      1    CHN   NL  156  594  113  169  34  ...   \n","39378  bankser01    1958      1    CHN   NL  154  617  119  193  23  ...   \n","40019  bankser01    1959      1    CHN   NL  155  589   97  179  25  ...   \n","40654  bankser01    1960      1    CHN   NL  156  597   94  162  32  ...   \n","41293  bankser01    1961      1    CHN   NL  138  511   75  142  22  ...   \n","41996  bankser01    1962      1    CHN   NL  154  610   87  164  20  ...   \n","42756  bankser01    1963      1    CHN   NL  130  432   41   98  20  ...   \n","43502  bankser01    1964      1    CHN   NL  157  591   67  156  29  ...   \n","44257  bankser01    1965      1    CHN   NL  163  612   79  162  25  ...   \n","45015  bankser01    1966      1    CHN   NL  141  511   52  139  23  ...   \n","45786  bankser01    1967      1    CHN   NL  151  573   68  158  26  ...   \n","46571  bankser01    1968      1    CHN   NL  150  552   71  136  27  ...   \n","47294  bankser01    1969      1    CHN   NL  155  565   60  143  19  ...   \n","48223  bankser01    1970      1    CHN   NL   72  222   25   56   6  ...   \n","49137  bankser01    1971      1    CHN   NL   39   83    4   16   2  ...   \n","\n","          SO   IBB  HBP   SH    SF  GIDP   1B  total bases   average  slugging  \n","36327    5.0   NaN  0.0  0.0   NaN   0.0    7           20  0.314286  0.571429  \n","36908   50.0   NaN  7.0  5.0   4.0  11.0  118          253  0.274874  0.426644  \n","37489   72.0   6.0  2.0  0.0   3.0  16.0   94          355  0.295302  0.595638  \n","38141   62.0  18.0  0.0  0.0   3.0   7.0   99          285  0.297398  0.529740  \n","38763   85.0  11.0  3.0  2.0   5.0  12.0   86          344  0.284512  0.579125  \n","39378   87.0  12.0  4.0  1.0   8.0  14.0  112          379  0.312804  0.614263  \n","40019   72.0  20.0  7.0  2.0   9.0  18.0  103          351  0.303905  0.595925  \n","40654   69.0  28.0  4.0  0.0   6.0  14.0   82          331  0.271357  0.554439  \n","41293   75.0  21.0  2.0  0.0   6.0  11.0   87          259  0.277886  0.506849  \n","41996   71.0   3.0  7.0  0.0  10.0  19.0  101          307  0.268852  0.503279  \n","42756   73.0  16.0  4.0  1.0   8.0   7.0   59          174  0.226852  0.402778  \n","43502   84.0  11.0  3.0  1.0   6.0  16.0   98          266  0.263959  0.450085  \n","44257   64.0  19.0  6.0  0.0   7.0  16.0  106          277  0.264706  0.452614  \n","45015   59.0  10.0  5.0  4.0   5.0  15.0   94          221  0.272016  0.432485  \n","45786   93.0   8.0  3.0  8.0   4.0  20.0  105          261  0.275742  0.455497  \n","46571   67.0   4.0  5.0  9.0   2.0  12.0   77          259  0.246377  0.469203  \n","47294  101.0   7.0  7.0  8.0   7.0  15.0   99          235  0.253097  0.415929  \n","48223   33.0   3.0  1.0  1.0   3.0   5.0   36          102  0.252252  0.459459  \n","49137   14.0   1.0  0.0  3.0   0.0   1.0   11           27  0.192771  0.325301  \n","\n","[19 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-bbc5b91a-e242-4348-bbf6-bf704e80fb77\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","      <th>1B</th>\n","      <th>total bases</th>\n","      <th>average</th>\n","      <th>slugging</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>36327</th>\n","      <td>bankser01</td>\n","      <td>1953</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>10</td>\n","      <td>35</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>7</td>\n","      <td>20</td>\n","      <td>0.314286</td>\n","      <td>0.571429</td>\n","    </tr>\n","    <tr>\n","      <th>36908</th>\n","      <td>bankser01</td>\n","      <td>1954</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>593</td>\n","      <td>70</td>\n","      <td>163</td>\n","      <td>19</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>NaN</td>\n","      <td>7.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>11.0</td>\n","      <td>118</td>\n","      <td>253</td>\n","      <td>0.274874</td>\n","      <td>0.426644</td>\n","    </tr>\n","    <tr>\n","      <th>37489</th>\n","      <td>bankser01</td>\n","      <td>1955</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>596</td>\n","      <td>98</td>\n","      <td>176</td>\n","      <td>29</td>\n","      <td>...</td>\n","      <td>72.0</td>\n","      <td>6.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>16.0</td>\n","      <td>94</td>\n","      <td>355</td>\n","      <td>0.295302</td>\n","      <td>0.595638</td>\n","    </tr>\n","    <tr>\n","      <th>38141</th>\n","      <td>bankser01</td>\n","      <td>1956</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>139</td>\n","      <td>538</td>\n","      <td>82</td>\n","      <td>160</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>62.0</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>99</td>\n","      <td>285</td>\n","      <td>0.297398</td>\n","      <td>0.529740</td>\n","    </tr>\n","    <tr>\n","      <th>38763</th>\n","      <td>bankser01</td>\n","      <td>1957</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>156</td>\n","      <td>594</td>\n","      <td>113</td>\n","      <td>169</td>\n","      <td>34</td>\n","      <td>...</td>\n","      <td>85.0</td>\n","      <td>11.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>12.0</td>\n","      <td>86</td>\n","      <td>344</td>\n","      <td>0.284512</td>\n","      <td>0.579125</td>\n","    </tr>\n","    <tr>\n","      <th>39378</th>\n","      <td>bankser01</td>\n","      <td>1958</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>617</td>\n","      <td>119</td>\n","      <td>193</td>\n","      <td>23</td>\n","      <td>...</td>\n","      <td>87.0</td>\n","      <td>12.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>14.0</td>\n","      <td>112</td>\n","      <td>379</td>\n","      <td>0.312804</td>\n","      <td>0.614263</td>\n","    </tr>\n","    <tr>\n","      <th>40019</th>\n","      <td>bankser01</td>\n","      <td>1959</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>155</td>\n","      <td>589</td>\n","      <td>97</td>\n","      <td>179</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>72.0</td>\n","      <td>20.0</td>\n","      <td>7.0</td>\n","      <td>2.0</td>\n","      <td>9.0</td>\n","      <td>18.0</td>\n","      <td>103</td>\n","      <td>351</td>\n","      <td>0.303905</td>\n","      <td>0.595925</td>\n","    </tr>\n","    <tr>\n","      <th>40654</th>\n","      <td>bankser01</td>\n","      <td>1960</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>156</td>\n","      <td>597</td>\n","      <td>94</td>\n","      <td>162</td>\n","      <td>32</td>\n","      <td>...</td>\n","      <td>69.0</td>\n","      <td>28.0</td>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>82</td>\n","      <td>331</td>\n","      <td>0.271357</td>\n","      <td>0.554439</td>\n","    </tr>\n","    <tr>\n","      <th>41293</th>\n","      <td>bankser01</td>\n","      <td>1961</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>138</td>\n","      <td>511</td>\n","      <td>75</td>\n","      <td>142</td>\n","      <td>22</td>\n","      <td>...</td>\n","      <td>75.0</td>\n","      <td>21.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>11.0</td>\n","      <td>87</td>\n","      <td>259</td>\n","      <td>0.277886</td>\n","      <td>0.506849</td>\n","    </tr>\n","    <tr>\n","      <th>41996</th>\n","      <td>bankser01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>610</td>\n","      <td>87</td>\n","      <td>164</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>71.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>10.0</td>\n","      <td>19.0</td>\n","      <td>101</td>\n","      <td>307</td>\n","      <td>0.268852</td>\n","      <td>0.503279</td>\n","    </tr>\n","    <tr>\n","      <th>42756</th>\n","      <td>bankser01</td>\n","      <td>1963</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>130</td>\n","      <td>432</td>\n","      <td>41</td>\n","      <td>98</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>73.0</td>\n","      <td>16.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>59</td>\n","      <td>174</td>\n","      <td>0.226852</td>\n","      <td>0.402778</td>\n","    </tr>\n","    <tr>\n","      <th>43502</th>\n","      <td>bankser01</td>\n","      <td>1964</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>157</td>\n","      <td>591</td>\n","      <td>67</td>\n","      <td>156</td>\n","      <td>29</td>\n","      <td>...</td>\n","      <td>84.0</td>\n","      <td>11.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","      <td>16.0</td>\n","      <td>98</td>\n","      <td>266</td>\n","      <td>0.263959</td>\n","      <td>0.450085</td>\n","    </tr>\n","    <tr>\n","      <th>44257</th>\n","      <td>bankser01</td>\n","      <td>1965</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>163</td>\n","      <td>612</td>\n","      <td>79</td>\n","      <td>162</td>\n","      <td>25</td>\n","      <td>...</td>\n","      <td>64.0</td>\n","      <td>19.0</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>16.0</td>\n","      <td>106</td>\n","      <td>277</td>\n","      <td>0.264706</td>\n","      <td>0.452614</td>\n","    </tr>\n","    <tr>\n","      <th>45015</th>\n","      <td>bankser01</td>\n","      <td>1966</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>141</td>\n","      <td>511</td>\n","      <td>52</td>\n","      <td>139</td>\n","      <td>23</td>\n","      <td>...</td>\n","      <td>59.0</td>\n","      <td>10.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>15.0</td>\n","      <td>94</td>\n","      <td>221</td>\n","      <td>0.272016</td>\n","      <td>0.432485</td>\n","    </tr>\n","    <tr>\n","      <th>45786</th>\n","      <td>bankser01</td>\n","      <td>1967</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>151</td>\n","      <td>573</td>\n","      <td>68</td>\n","      <td>158</td>\n","      <td>26</td>\n","      <td>...</td>\n","      <td>93.0</td>\n","      <td>8.0</td>\n","      <td>3.0</td>\n","      <td>8.0</td>\n","      <td>4.0</td>\n","      <td>20.0</td>\n","      <td>105</td>\n","      <td>261</td>\n","      <td>0.275742</td>\n","      <td>0.455497</td>\n","    </tr>\n","    <tr>\n","      <th>46571</th>\n","      <td>bankser01</td>\n","      <td>1968</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>150</td>\n","      <td>552</td>\n","      <td>71</td>\n","      <td>136</td>\n","      <td>27</td>\n","      <td>...</td>\n","      <td>67.0</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>9.0</td>\n","      <td>2.0</td>\n","      <td>12.0</td>\n","      <td>77</td>\n","      <td>259</td>\n","      <td>0.246377</td>\n","      <td>0.469203</td>\n","    </tr>\n","    <tr>\n","      <th>47294</th>\n","      <td>bankser01</td>\n","      <td>1969</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>155</td>\n","      <td>565</td>\n","      <td>60</td>\n","      <td>143</td>\n","      <td>19</td>\n","      <td>...</td>\n","      <td>101.0</td>\n","      <td>7.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>15.0</td>\n","      <td>99</td>\n","      <td>235</td>\n","      <td>0.253097</td>\n","      <td>0.415929</td>\n","    </tr>\n","    <tr>\n","      <th>48223</th>\n","      <td>bankser01</td>\n","      <td>1970</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>72</td>\n","      <td>222</td>\n","      <td>25</td>\n","      <td>56</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>33.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>36</td>\n","      <td>102</td>\n","      <td>0.252252</td>\n","      <td>0.459459</td>\n","    </tr>\n","    <tr>\n","      <th>49137</th>\n","      <td>bankser01</td>\n","      <td>1971</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>39</td>\n","      <td>83</td>\n","      <td>4</td>\n","      <td>16</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>14.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>11</td>\n","      <td>27</td>\n","      <td>0.192771</td>\n","      <td>0.325301</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19 rows Ã— 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbc5b91a-e242-4348-bbf6-bf704e80fb77')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bbc5b91a-e242-4348-bbf6-bf704e80fb77 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bbc5b91a-e242-4348-bbf6-bf704e80fb77');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}],"source":["# Making cuts on your data (i.e., filtering your data set)\n","data_trimmed_Banks = data.query('playerID == \"bankser01\"')\n","# I picked this cut to only inlcude games played by Ernie Banks\n","data_trimmed_Banks.head(30)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":408,"status":"ok","timestamp":1655495070645,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"},"user_tz":300},"id":"KplVz1eZA7QR","outputId":"00b7854a-bbbd-4d9b-bc61-4f2690e48659"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.plot(data_trimmed_Banks['yearID'], data_trimmed_Banks['HR'], label = 'HR')  # makes the line plot\n","plt.plot(data_trimmed_Banks['yearID'], data_trimmed_Banks['1B'], label = '1B')\n","plt.plot(data_trimmed_Banks['yearID'], data_trimmed_Banks['2B'], label = '2B')\n","plt.plot(data_trimmed_Banks['yearID'], data_trimmed_Banks['3B'], label = '3B')\n","plt.title(\"Ernie Banks\")\n","plt.xlabel(\"Year\")\n","plt.ylabel(\"1B and HR\")\n","plt.legend()\n","plt.grid(True);"]},{"cell_type":"code","source":["data_trimmed_Banks['AB'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LOdAGtudGrVA","executionInfo":{"status":"ok","timestamp":1655495083291,"user_tz":300,"elapsed":95,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"d2b559d1-1a85-4c9a-f1d7-42a96ce2c5bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     19.000000\n","mean     495.842105\n","std      178.929304\n","min       35.000000\n","25%      511.000000\n","50%      573.000000\n","75%      595.000000\n","max      617.000000\n","Name: AB, dtype: float64"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["some more statistics...I'm going to cut on players with more than 400 AB in a season, these would be players that get into games ona regular basis.  Still looking after 1961 to assure the 162 game season"],"metadata":{"id":"p0S-_aGIJZwY"}},{"cell_type":"code","source":["# Making cuts on your data (i.e., filtering your data set)\n","data_trimmed_after1961_400AB = data_trimmed_after1961.query('AB > 399')\n","# I picked this cut to only inlcude games after baseball adopted 162 game season and >400 B\n","data_trimmed_after1961_400AB.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"id":"86jRoOsDJ3Bw","executionInfo":{"status":"ok","timestamp":1655495090644,"user_tz":300,"elapsed":119,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"5d2a2ad9-9208-480b-930c-a627eb89ed22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        playerID  yearID  stint teamID lgID    G   AB    R    H  2B  ...  \\\n","41959  aaronha01    1962      1    ML1   NL  156  592  127  191  28  ...   \n","41961  adairje01    1962      1    BAL   AL  139  538   67  153  29  ...   \n","41965  allenbe01    1962      1    MIN   AL  159  573   79  154  27  ...   \n","41967  allisbo01    1962      1    MIN   AL  149  519  102  138  24  ...   \n","41968   aloufe01    1962      1    SFN   NL  154  561   96  177  30  ...   \n","41970  altmage01    1962      1    CHN   NL  147  534   74  170  27  ...   \n","41981  aparilu01    1962      1    CHA   AL  153  581   72  140  23  ...   \n","41986  asprobo01    1962      1    HOU   NL  149  534   59  142  18  ...   \n","41996  bankser01    1962      1    CHN   NL  154  610   87  164  20  ...   \n","42001  batteea01    1962      1    MIN   AL  148  522   58  146  20  ...   \n","\n","          SO   IBB  HBP   SH    SF  GIDP   1B  total bases   average  slugging  \n","41959   73.0  14.0  3.0  0.0   6.0  14.0  112          366  0.322635  0.618243  \n","41961   77.0   1.0  2.0  4.0   3.0  15.0  109          223  0.284387  0.414498  \n","41965   82.0  10.0  0.0  7.0   4.0   9.0  108          231  0.268761  0.403141  \n","41967  115.0   0.0  4.0  3.0   3.0   9.0   77          265  0.265896  0.510597  \n","41968   66.0   2.0  5.0  2.0   5.0   4.0  119          288  0.315508  0.513369  \n","41970   89.0  14.0  5.0  0.0   2.0   8.0  116          273  0.318352  0.511236  \n","41981   36.0   1.0  1.0  4.0   4.0  11.0  105          194  0.240964  0.333907  \n","41986   54.0   4.0  8.0  5.0   3.0  10.0  109          201  0.265918  0.376404  \n","41996   71.0   3.0  7.0  0.0  10.0  19.0  101          307  0.268852  0.503279  \n","42001   48.0   3.0  0.0  8.0   4.0  20.0  112          205  0.279693  0.392720  \n","\n","[10 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-cf0c69ae-c7f2-4dfa-8b62-7693742246cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>playerID</th>\n","      <th>yearID</th>\n","      <th>stint</th>\n","      <th>teamID</th>\n","      <th>lgID</th>\n","      <th>G</th>\n","      <th>AB</th>\n","      <th>R</th>\n","      <th>H</th>\n","      <th>2B</th>\n","      <th>...</th>\n","      <th>SO</th>\n","      <th>IBB</th>\n","      <th>HBP</th>\n","      <th>SH</th>\n","      <th>SF</th>\n","      <th>GIDP</th>\n","      <th>1B</th>\n","      <th>total bases</th>\n","      <th>average</th>\n","      <th>slugging</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>41959</th>\n","      <td>aaronha01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>ML1</td>\n","      <td>NL</td>\n","      <td>156</td>\n","      <td>592</td>\n","      <td>127</td>\n","      <td>191</td>\n","      <td>28</td>\n","      <td>...</td>\n","      <td>73.0</td>\n","      <td>14.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>14.0</td>\n","      <td>112</td>\n","      <td>366</td>\n","      <td>0.322635</td>\n","      <td>0.618243</td>\n","    </tr>\n","    <tr>\n","      <th>41961</th>\n","      <td>adairje01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>BAL</td>\n","      <td>AL</td>\n","      <td>139</td>\n","      <td>538</td>\n","      <td>67</td>\n","      <td>153</td>\n","      <td>29</td>\n","      <td>...</td>\n","      <td>77.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>15.0</td>\n","      <td>109</td>\n","      <td>223</td>\n","      <td>0.284387</td>\n","      <td>0.414498</td>\n","    </tr>\n","    <tr>\n","      <th>41965</th>\n","      <td>allenbe01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>MIN</td>\n","      <td>AL</td>\n","      <td>159</td>\n","      <td>573</td>\n","      <td>79</td>\n","      <td>154</td>\n","      <td>27</td>\n","      <td>...</td>\n","      <td>82.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>7.0</td>\n","      <td>4.0</td>\n","      <td>9.0</td>\n","      <td>108</td>\n","      <td>231</td>\n","      <td>0.268761</td>\n","      <td>0.403141</td>\n","    </tr>\n","    <tr>\n","      <th>41967</th>\n","      <td>allisbo01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>MIN</td>\n","      <td>AL</td>\n","      <td>149</td>\n","      <td>519</td>\n","      <td>102</td>\n","      <td>138</td>\n","      <td>24</td>\n","      <td>...</td>\n","      <td>115.0</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>9.0</td>\n","      <td>77</td>\n","      <td>265</td>\n","      <td>0.265896</td>\n","      <td>0.510597</td>\n","    </tr>\n","    <tr>\n","      <th>41968</th>\n","      <td>aloufe01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>SFN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>561</td>\n","      <td>96</td>\n","      <td>177</td>\n","      <td>30</td>\n","      <td>...</td>\n","      <td>66.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>5.0</td>\n","      <td>4.0</td>\n","      <td>119</td>\n","      <td>288</td>\n","      <td>0.315508</td>\n","      <td>0.513369</td>\n","    </tr>\n","    <tr>\n","      <th>41970</th>\n","      <td>altmage01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>147</td>\n","      <td>534</td>\n","      <td>74</td>\n","      <td>170</td>\n","      <td>27</td>\n","      <td>...</td>\n","      <td>89.0</td>\n","      <td>14.0</td>\n","      <td>5.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>116</td>\n","      <td>273</td>\n","      <td>0.318352</td>\n","      <td>0.511236</td>\n","    </tr>\n","    <tr>\n","      <th>41981</th>\n","      <td>aparilu01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CHA</td>\n","      <td>AL</td>\n","      <td>153</td>\n","      <td>581</td>\n","      <td>72</td>\n","      <td>140</td>\n","      <td>23</td>\n","      <td>...</td>\n","      <td>36.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>11.0</td>\n","      <td>105</td>\n","      <td>194</td>\n","      <td>0.240964</td>\n","      <td>0.333907</td>\n","    </tr>\n","    <tr>\n","      <th>41986</th>\n","      <td>asprobo01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>HOU</td>\n","      <td>NL</td>\n","      <td>149</td>\n","      <td>534</td>\n","      <td>59</td>\n","      <td>142</td>\n","      <td>18</td>\n","      <td>...</td>\n","      <td>54.0</td>\n","      <td>4.0</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>10.0</td>\n","      <td>109</td>\n","      <td>201</td>\n","      <td>0.265918</td>\n","      <td>0.376404</td>\n","    </tr>\n","    <tr>\n","      <th>41996</th>\n","      <td>bankser01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>CHN</td>\n","      <td>NL</td>\n","      <td>154</td>\n","      <td>610</td>\n","      <td>87</td>\n","      <td>164</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>71.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>10.0</td>\n","      <td>19.0</td>\n","      <td>101</td>\n","      <td>307</td>\n","      <td>0.268852</td>\n","      <td>0.503279</td>\n","    </tr>\n","    <tr>\n","      <th>42001</th>\n","      <td>batteea01</td>\n","      <td>1962</td>\n","      <td>1</td>\n","      <td>MIN</td>\n","      <td>AL</td>\n","      <td>148</td>\n","      <td>522</td>\n","      <td>58</td>\n","      <td>146</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>48.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>4.0</td>\n","      <td>20.0</td>\n","      <td>112</td>\n","      <td>205</td>\n","      <td>0.279693</td>\n","      <td>0.392720</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows Ã— 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf0c69ae-c7f2-4dfa-8b62-7693742246cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf0c69ae-c7f2-4dfa-8b62-7693742246cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf0c69ae-c7f2-4dfa-8b62-7693742246cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["data_trimmed_after1961_400AB['average'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fADhgs5EOkKK","executionInfo":{"status":"ok","timestamp":1655495098247,"user_tz":300,"elapsed":88,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"404f8d6f-3e8a-4ace-f13a-bf8018ebe9f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    8911.000000\n","mean        0.274004\n","std         0.028019\n","min         0.159036\n","25%         0.254664\n","50%         0.273234\n","75%         0.292453\n","max         0.393795\n","Name: average, dtype: float64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["In statistics, we usually assume that our data has a normal or Gaussian distribution.  Let's try to fit our data to a Gaussian\n","\n","mean_average is the x value of the peak\n","\n","width is the staandard deviation of the data, large widths mean a wide peak.  The standard deviation (sigma) is related to the full width half maximum, by the equation FWHM ~ 2.3655(sigma) Play with this to get the line to fit the data\n","\n","K is a scaling constant, usually the maximum y value\n","\n","Adjust the mean_average, width, and K as best you can"],"metadata":{"id":"S_arWCqpQMg-"}},{"cell_type":"code","source":["xmin = 0  # lower bound for your plot\n","xmax = .5  # upper bound for your plot\n","mean_average = 0.300 # the x-value of the peak\n","width = 0.05 # width of the peak halfway up; a.k.a. \"full width at half max\" or FWHM\n","K = 1000  # a constant that affects the height of the curve, you'll need to tinker with this some\n","\n","# calculate the Gaussian curve\n","x = np.arange(xmin, xmax, (xmax-xmin)/100) # makes a series of equally spaced x-values\n","y = K * np.exp(-.5*((x-mean_average)/width)**2) # calculates the y-values for the Gaussian curve\n","\n","# make the plot\n","fig, ax = plt.subplots(1,1, figsize=(6,4))\n","ax.hist(data_trimmed_after1961_400AB['average'], bins=100, range=[xmin,xmax], log=False)  # plots the histogram\n","ax.plot(x, y, color='r')  # plots the curve\n","plt.title(\"Average\")\n","plt.xlabel(\"average\")\n","plt.ylabel(\"number of events\")\n","plt.grid(True);\n","\n","# first parameter is what you want to bin, bins is how fine you want, range is what you want the range to be\n","#plt.hist(data_trimmed_after1961_400AB['average'], bins=100, range=[0,0.5], log=False)  # makes the histogram\n","#plt.title(\"Average\")\n","#plt.xlabel(\"average\")\n","#plt.ylabel(\"number of events\")\n","#plt.grid(True);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Pz3E6NRrKyYK","executionInfo":{"status":"ok","timestamp":1655498849834,"user_tz":300,"elapsed":558,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"12424716-3293-4a70-874f-178c77ad37ef"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Do the same thing for HR, see if that curve is different"],"metadata":{"id":"Y17mkh0jSKIR"}},{"cell_type":"code","source":["data_trimmed_after1961_400AB['HR'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mYm_dIbwSXox","executionInfo":{"status":"ok","timestamp":1655495332728,"user_tz":300,"elapsed":107,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"4216c5ad-538a-494f-8416-d61a3bc41802"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    8911.000000\n","mean       16.629896\n","std        10.682771\n","min         0.000000\n","25%         8.000000\n","50%        15.000000\n","75%        23.000000\n","max        73.000000\n","Name: HR, dtype: float64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["xmin = 0  # lower bound for your plot\n","xmax = 80  # upper bound for your plot\n","mean_average = 13 # the x-value of the peak\n","width = 12 # width of the peak halfway up; a.k.a. \"full width at half max\" or FWHM\n","K = 325  # a constant that affects the height of the curve, you'll need to tinker with this some\n","\n","# calculate the Gaussian curve\n","x = np.arange(xmin, xmax, (xmax-xmin)/100) # makes a series of equally spaced x-values\n","y = K * np.exp(-.5*((x-mean_average)/width)**2) # calculates the y-values for the Gaussian curve\n","\n","# make the plot\n","fig, ax = plt.subplots(1,1, figsize=(6,4))\n","ax.hist(data_trimmed_after1961_400AB['HR'], bins=80, range=[xmin,xmax], log=False)  # plots the histogram\n","ax.plot(x, y, color='r')  # plots the curve\n","plt.title(\"Homers\")\n","plt.xlabel(\"HR\")\n","plt.ylabel(\"number of events\")\n","plt.grid(True);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"vOnIXF68SkJs","executionInfo":{"status":"ok","timestamp":1655498920077,"user_tz":300,"elapsed":530,"user":{"displayName":"Dave Baran","userId":"00815194484824389396"}},"outputId":"314c89d7-45dc-4b39-c792-e15f83400a00"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Any ideas why this graph does not appear to be a Gaussian distribution"],"metadata":{"id":"ts_FSNGFUcu6"}}],"metadata":{"colab":{"provenance":[{"file_id":"1MrAtfq-d-sTb69NumHMyqTmcdISoJf7S","timestamp":1694384783128},{"file_id":"1HQ5tHmeQddGus3nKumkMOZehAsKQh2yG","timestamp":1655821839208}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}