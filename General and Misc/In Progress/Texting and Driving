{"cells":[{"cell_type":"markdown","metadata":{"id":"VxPAdfoTjv0X"},"source":["# Texting And driving\n","\n","This activity will cover standard [HS-ETS1](https://www.k12.wa.us/sites/default/files/public/science/pubdocs/Topic%20Arrangements%20of%20the%20Next%20Generation%20Science%20Standards.pdf).\n","The activity situation is our school's 9th-grade health teacher asked us to develop an APP for a student who [texting while driving](https://www.youtube.com/watch?v=yjQGc6m8mw0) (watch the video).\n","\n"," How do we analyze complex systems?\n","\n"," How do we use STEM to enhance a social discussion?\n","\n","Getting start:\n","\n","\n","*   Make your Team enegeneering statement (use the below format)\n","\n","**We as (role) seek to (problem/constraint) in order to (major criteria/goal) for (stakeholder).**\n","*   Work with your team and discuss together using your team data collected from the lab (2L1, 2L2, and mini-labs).\n","\n","*   Futhermore, after first task, your team is able to create notebook for \"Alert driver\" and \"New driving situation\" such as icy road, old car vs new car so on.\n","\n","\n"]},{"cell_type":"code","source":["# imports some software packages we'll use\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"],"metadata":{"id":"fLMiTXxEuoNn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OezzANGxjv04"},"source":["## Part One\n","Distance while Distracted\n","\n","Let's assume the car travels with constant speed and a positive direction while distracted.\n","\n","*   Team must finish mini lab: distracted time and get average time of the team\n","*   Enter your team distracted time to t=...\n","\n","\n"]},{"cell_type":"markdown","source":["# Given values for dry road situation\n","\n","Enter all initial data (team discussion)"],"metadata":{"id":"Ds4jM-TSEEYc"}},{"cell_type":"code","source":["xi=0        # initial position before distracted\n","ti=0       # starting time of distraction\n","tri=0      # initial time of reaction\n","vi= 15        # m/s, the initial velocity of the car at the moment distracted by the Phone's text message\n","xpedestrian = 50 # m, the position of a pedestrian\n","tdelta= 0.5 # sec, time interval (increase by 0.5 sec)"],"metadata":{"id":"11H0jHBrEBcZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Here, we will code how to calculate distacted distance and create data table or graph our situation distance vs time."],"metadata":{"id":"B6Wu49aZG_Ab"}},{"cell_type":"code","source":["# Task 1: Distracted Driver\n","td=ti\n","xd=xi\n","a=0 # car is moving constant speed\n","tdlist = []  # defining a list for each vairable\n","xdlist = []\n","\n","tdlist.append(td)  # creating a list of data for each vairable. this should have one value right now (initial value)\n","xdlist.append(xd)\n","\n","while td<= 1: # You can adjust the time. This time is based on your team's distracted average time from the lab.\n"," td = td +tdelta\n"," xd = xi + vi*td\n"," xdlist.append(xd)\n"," tdlist.append(td)\n","\n","if xd<xpedestrian:\n","  print(xd)\n","else:\n","  print(\"Your distracted distance is greater than distance where a pedestrian walking. You are in accident. Call 911!\")\n","\n","\n","data = pd.DataFrame({\"td\": tdlist, \"xd\": xdlist})\n","data\n"],"metadata":{"id":"175rlp2sIrsO","colab":{"base_uri":"https://localhost:8080/","height":192},"executionInfo":{"status":"ok","timestamp":1689267243242,"user_tz":420,"elapsed":122,"user":{"displayName":"төгс дорж","userId":"03367798413985927621"}},"outputId":"5d6f771e-bf5b-4b6b-b669-ab31faf43a0d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["22.5\n"]},{"output_type":"execute_result","data":{"text/plain":["    td    xd\n","0  0.0   0.0\n","1  0.5   7.5\n","2  1.0  15.0\n","3  1.5  22.5"],"text/html":["\n","\n","  <div id=\"df-e31bacdc-8b99-41c9-bfbe-34d5535f1ab8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>td</th>\n","      <th>xd</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.5</td>\n","      <td>7.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.5</td>\n","      <td>22.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e31bacdc-8b99-41c9-bfbe-34d5535f1ab8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6311ac0a-b632-49a1-9572-c60ccf5562e9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6311ac0a-b632-49a1-9572-c60ccf5562e9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6311ac0a-b632-49a1-9572-c60ccf5562e9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e31bacdc-8b99-41c9-bfbe-34d5535f1ab8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e31bacdc-8b99-41c9-bfbe-34d5535f1ab8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"KufRU5EUjv0_"},"source":["## Part Two\n","Distance while reacted\n","\n","\n","*    Each student of the team must finish mini lab to find their individual reaction time .\n","*   Find team average reaction time and placed it below.\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"baDYUis1jv05","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688157687295,"user_tz":420,"elapsed":171,"user":{"displayName":"төгс дорж","userId":"03367798413985927621"}},"outputId":"0ec0b058-b146-487c-b667-267c7d08bc55"},"outputs":[{"output_type":"stream","name":"stdout","text":["15\n"]}],"source":["from numpy.lib.twodim_base import tri\n","# driver must react after seeing a pedestrian crossing a road.\n","tr=tri\n","while td<= 0.7: # You can adjust the time. This time is based on your team's reaction average time from the lab.\n"," tr = tr +tdelta\n"," xd = xi + vi*tr\n"," xr = vi*tr  # m, travel distance of while reacted to apply break.\n","print(xr)\n"]},{"cell_type":"markdown","metadata":{"id":"4MXlLaWNjv1F"},"source":["## Part Three\n","Stopping Distance\n","\n","Each student of the team must finish Desmos [\"2CT Computational Thinking to Determine the Patterns in Distance and Time while braking\"](https://teacher.desmos.com/activitybuilder/custom/5ffe1a56fa866e482a4c4266) lab activity.\n","\n","\n","\n","*   Read this article [\"Vehicle stopping distance and time\"](https://nacto.org/docs/usdg/vehicle_stopping_distance_and_time_upenn.pdf). what is the slowing down acceleration after apllied the break.\n","*   enter the acceleration.\n","\n","\n","*   Find right equation to find time to stop and distance\n","*   code the equation below\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1sgk3CLRjv1A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688157761592,"user_tz":420,"elapsed":201,"user":{"displayName":"төгс дорж","userId":"03367798413985927621"}},"outputId":"86efff89-7786-4c26-8aae-4722c86f9550"},"outputs":[{"output_type":"stream","name":"stdout","text":["14.0625\n"]}],"source":["# After applying the brake, the car will slow down and stop\n","vf= 0     # m/s, the final velocity of the car\n","a = -8      # m/s^2, enter here average acceleration dry road situation.\n","ts= (vf-vi)/a     # sec, enter the correct equation\n","xs = vi*ts+ 0.5*a*ts**2 # m, travel distance of while reacted to apply break.\n","print(xs)"]},{"cell_type":"markdown","source":["# Find total distance"],"metadata":{"id":"WlDh_WDu2s9f"}},{"cell_type":"code","source":["# total travel distance of the car\n","dtotal= xd+xr+xs         # Write the equation here to find the total distance car travel\n","ttotal= td + tr + ts\n","\n","print(dtotal)\n","print(ttotal)\n","if dtotal>xpedestrian:\n","  print(\"Call 911! someone is in accident\")\n","else:\n","    print(\"You are safe. Drive more careful!\")\n"],"metadata":{"id":"3SD8AoZHv9Qe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zlF-KDk0jv1K"},"source":["## Part Four\n","Do above for Alert driver.\n","Think what is difference between distracted driver and alert (safety) driver.\n","\n","## Part Five  \n","Do above for New Situation.\n","Talk with your team first create the situation and what variable(s) must be change.\n"]}],"metadata":{"anaconda-cloud":{},"colab":{"provenance":[{"file_id":"1OxiDa2yX0AxOy2zL-F6v30TRvzM7KGqW","timestamp":1694384026375},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/main/muon_mass.ipynb","timestamp":1687974209156}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"}},"nbformat":4,"nbformat_minor":0}