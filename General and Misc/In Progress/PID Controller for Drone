{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Tv2o5h6aFuvcT7fULk_snAJ0BAgpYUOU","timestamp":1694385394949},{"file_id":"1LAEElsyMlpnh8WFFkMgT7Q_vzXqkGT3w","timestamp":1626090894838}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"9EZK-jRmlU_T"},"source":["This is going to be an implementation of a PID controller to control just the height of a single axis drone.\n","\n","Please play with the: mass, gravity, or force matrix to explore its dynamics.\n","\n","What are some observations you can make with this simulation?"]},{"cell_type":"markdown","metadata":{"id":"rs_MjVcixwqw"},"source":["![picture](https://lh3.googleusercontent.com/sAfSPeqIwDwZmvTVDRidjpQIzTY2E8Udfw1qpgXp-G0KnVJIrbEPsI8YrKy_AcHOLM21r-a2GmZcDxxJy8b24pwu2jBYOQH9e7PTm8yY6v31cQl86blumhcS1JSnpCcWrehUYcwkeOtO5xTMy95mGWi2J5DSfqdYjkxi-koW3e_bzkBT3jQR0CBikS5cqeatZ58yIE6110jm3ZYkCxiXGV5CdoWgbbq9CvEQ899Q-yRaBOyp2_pawtStHyNROsuuwSqEyC_oEnpRVmTp-Ok91ycc1nPVXEz2hjsVEk2TnGm_qlWZVwRstYzk6FdsegvEHlt_LP-DxDmfx3K9F_xfcRQp96BQtlZupEkLBuS4dxjMGrfasEj3W6sX4hLJTceXx8Gfgh2HFe5eO2RNiEVlrc9wibfXkQoT7IgwYXbGjmd3aKdjc0bx3862mx7sac0GtNipXlX8p0FUrm_PHJRV8HiSDnVxC4ntjkNDvb42xz7ads6ZG8MzD8dmbB9qD3HhktGqvsiDDyFgqOe9wqCFATW3mr5aTc8BU2YzZqvmmpnzBFXeEc07Puusa2R4MGEFtcAkbXRGCf_b7InPnVHZDncliWCdunb_LbYm4Xztyzr9MCogCl0SJzuFNmNmib2ZqeRXqCovzBqI6GB3KYuE6uxNc1A3TCa1WApIgbW2jKhhauQEQTqAn6Qn1jmz0BWXHa8KqWNUKAultSlbXhZyrrJstQ=w570-h504-no?authuser=0)\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"93oNlDtq0YoJ"},"source":["Below is the start of the code.  It is broken into blocks where you can run each section or the entire code.\n","\n","There are a few things that need to be fixed before it will run.  In the second code block include a mass and gravity value on the right side of each equal sign. Then run both blocks.  After you run the first block which imports the libraries you don't have to import it again each time you run the simulation.\n"]},{"cell_type":"code","metadata":{"id":"zuwuxT8WNtd3"},"source":["# Import some libraries as np, plt, and odeint\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import math\n","from scipy.integrate import odeint"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"FovZLwXyOAGw","executionInfo":{"status":"ok","timestamp":1625758603285,"user_tz":240,"elapsed":1060,"user":{"displayName":"Jasun Burdick","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhZt2UhQo7Uumicirbm8OASbwtY75PD9HhkwXyoeGA=s64","userId":"07895912616947082358"}},"outputId":"a1cf77c4-8472-46a9-8aa0-00b6dee87e2f"},"source":["\n","# This is the physics for the drone\n","def drone(timeStep,throttle, velocity):\n","  mass = 1                # mass of vehicle in kilograms\n","  gravity = 10            # m/s^2\n","  deltaHeight = ((throttle-mass*gravity)/mass)*timeStep**2 + (velocity*timeStep)\n","  return deltaHeight\n","\n","# Set up the time and sampling parameters\n","NumberSamples = 101\n","timeStep = 0.1\n","ts = np.linspace(0,(NumberSamples-1)*timeStep,NumberSamples)  # timespan 0-10, 101 samples\n","\n","\n","# Set up the force matrix and object position\n","f=np.zeros(NumberSamples)       # f is the throttle array\n","f[0:NumberSamples] = 10       # When the Force in Newtons is applied\n","height = 50                     # Initial height in meters off the ground\n","velocity = 0                    # Initial velocity\n","\n","# Build all the arrays to store data in\n","h = np.zeros(NumberSamples)     # height array\n","v = np.zeros(NumberSamples)     # velocity array\n","a = np.zeros(NumberSamples)     # acceleration array\n","\n","# Runs the simulation and stores the data\n","for i in range(NumberSamples):\n","  throttle = f[i]\n","  height += drone(timeStep, throttle, velocity)\n","  h[i] = height\n","  if i < 1:\n","    velocity = velocity-0\n","  else:\n","    velocity = (h[i]-h[i-1])/timeStep\n","    v[i] = velocity\n","    acceleration = (v[i]-v[i-1])/timeStep\n","    a[i] = acceleration\n","\n","plt.figure()\n","plt.subplot(4,1,1)\n","plt.plot(ts,f,'r--',linewidth=3)\n","plt.ylabel('Throttle')\n","\n","plt.subplot(4,1,2)\n","plt.plot(ts,h,'b-',linewidth=3)\n","plt.ylabel('Distance')\n","\n","plt.subplot(4,1,3)\n","plt.plot(ts,v,'r-',linewidth=3)\n","plt.ylabel('Velocity')\n","\n","plt.subplot(4,1,4)\n","plt.plot(ts,a,'g-',linewidth=3)\n","plt.ylabel('Acceleration')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Acceleration')"]},"metadata":{"tags":[]},"execution_count":2},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 4 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"g-CZhIvS41tp"},"source":["Now that you have interacted with the simulation.  \n","\n","   Try to hover 10 meters off the ground. What throttle is needed?  \n","\n","Your goal will be to reproduce the graphs of one of the scenarios below.  Take a screenshot of your result.  Write a paragraph with a sentence to explain each graph (d,v,a,...).  Then create your own senario take a second screenshot and describe each graph\n","\n","Freefall - without any throttle\n","\n","Constant throttle\n","\n","Throttle for the 1/3 of the time\n","\n"]},{"cell_type":"markdown","metadata":{"id":"2zPlddXqKiPW"},"source":["-------------\n","\n","Next we will implement a controller to automatically adjust the throttle to achieve a stable distance above the ground.\n","\n","Using the same physics for the drone we have only changed its throttle inputs.  By implementing a PID control loop we can now feed the simulation a goal height and its given height and have it calculate the desired throttle.  To control the PID it has three parameters. Read more about [PID here](https://en.wikipedia.org/wiki/PID_controller)\n","\n","You can adust the three variables: kp, ki, kd to help tune the system. This can depend on your system goals of reducing: error, energy, vibrations,...\n","\n","  Kp is the proportion of error. It applies a throttle based on how far away you are from the target (kp * error)\n","  \n","  Ki is the integral or sum of all the error (ki * sum of error)\n","\n","  kd is the derivitive (kd * slope)\n","There are online resources on how to do this more effeciently.  \n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"Ewti9KvBKT0f","executionInfo":{"status":"ok","timestamp":1625758732848,"user_tz":240,"elapsed":1156,"user":{"displayName":"Jasun Burdick","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhZt2UhQo7Uumicirbm8OASbwtY75PD9HhkwXyoeGA=s64","userId":"07895912616947082358"}},"outputId":"a7012838-5ace-416e-e1be-d08d1703fb5f"},"source":["# This is the physics for the drone\n","def drone(timeStep,throttle, velocity):\n","  mass = 1                # mass of vehicle in kilograms\n","  gravity = 10            # m/s^2\n","  deltaHeight = ((throttle-mass*gravity)/mass)*timeStep**2 + (velocity*timeStep)\n","  return deltaHeight\n","\n","# Set up the time and sampling parameters\n","NumberSamples = 101\n","ts = np.linspace(0,10,NumberSamples)  # timespan 0-10, 101 samples\n","timeStep = 0.1\n","\n","# Set up the force matrix and object position\n","height = 2                      # Initial height in meters off the ground\n","heightGoal = 10\n","velocity = 0                    # Initial velocity\n","throttle = 0\n","\n","# PID parameters\n","kp = 8\n","ki = 0\n","kd = 0\n","\n","# Build all the arrays to store data in\n","h = np.zeros(NumberSamples)     # height array\n","v = np.zeros(NumberSamples)     # velocity array\n","a = np.zeros(NumberSamples)     # acceleration array\n","e = np.zeros(NumberSamples)     # error array\n","t = np.zeros(NumberSamples)     # throttle array\n","\n","# Runs the simulation and stores the data\n","for i in range(NumberSamples):\n","  height += drone(timeStep, throttle, velocity) # Flies the drone and returns the change in height\n","  if i > 1:\n","    throttle = kp*e[i-1] + ki*(np.sum(e[i-5:i])) + kd*(e[i-1]-e[i-2]) +10         # This is the PID controller\n","\n","#  throttleMax = 50\n","#  if throttle > throttleMax:   # Puts a limitation on the top throttle\n","#    throttle = throttleMax\n","\n","  h[i] = height                 # save current height in height array\n","  e[i] = heightGoal-height      # save the error in height\n","  t[i] = throttle               # save the throttle\n","\n","  if i > 0:\n","    velocity = (h[i]-h[i-1])/timeStep\n","    v[i] = velocity\n","    acceleration = (v[i]-v[i-1])/timeStep\n","    a[i] = acceleration\n","\n","# This creates our graphs.  They are all subplots so they are linked on the x axis.\n","plt.figure()\n","plt.subplot(5,1,1)\n","plt.plot(ts,t,'r--',linewidth=3)\n","plt.ylabel('Throttle')\n","\n","plt.subplot(5,1,2)\n","plt.plot(ts,h,'b-',linewidth=3)\n","plt.ylabel('height')\n","\n","plt.subplot(5,1,3)\n","plt.plot(ts,v,'r-',linewidth=3)\n","plt.ylabel('Velocity')\n","\n","plt.subplot(5,1,4)\n","plt.plot(ts,a,'g-',linewidth=3)\n","plt.ylabel('Acceleration')\n","\n","plt.subplot(5,1,5)\n","plt.plot(ts,e,'y-',linewidth=3)\n","plt.ylabel('Error')\n","plt.xlabel('time (s)')\n","\n","print(\"Sum of the squares of Error:  \" + str(math.sqrt((np.sum(e))**2)))\n","print(\"Sum of the Throttle: \" + str(math.sqrt((np.sum(t))**2)))\n","\n","h[i]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Sum of the squares of Error:  985.8985067023372\n","Sum of the Throttle: 10234.64260839441\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["187.78181934696397"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 5 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}