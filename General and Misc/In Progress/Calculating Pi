{"cells":[{"cell_type":"markdown","metadata":{"id":"VxPAdfoTjv0X"},"source":["# Calculating Pi\n","\n","**Objectives**\n","\n","1. Determine an experimental value for Pi (π) by measuring twelve different objects.\n","2. Understand the difference between random and systematic error.\n","3. Calculate the percent error between our experimental value(s) and the accepted value through:\n","\n","a. standard deviation\n","\n","b. average percent error\n","\n","c. percent error of the mean\n","\n","d. percent error of the slope of the graph of the data\n","\n","e. systematic percent error\n","\n","\n","**Background**\n","\n","Discussion: The majority of the error you will experience in this lab will be the random error of humans trying to take\n","measurements with fairly rudimentary tools. Here, the random error is mostly due to human error, but random error exists anytime\n","the environment can’t be completely controlled and thus has an impact on your experimental outcomes. Systematic error comes\n","from the precision of the tools you are working with. The Giancoli textbook for Physics I Honors and Pre-IB Physics defines\n","systematic error as plus or minus the smallest measurement on the instrument. The Tsokos textbook for IB Physics uses this same\n","definition for electronic tools (digital readout of measurement), but uses plus or minus half of the lowest measurement for\n","mechanical tools (observer must read from a scale). We will use the Tsokos method. Percent uncertainty, when comparing\n","experimental data to a known value is equal to the difference between the measured value and the accepted value, divided by the\n","accepted value, multiplied by 100%. . The percent uncertainty caused by a known or estimated error\n","is equal to the error divided by the measured or average value, multiplied by 100%.\n","\n","**Experimental**\n","\n","Procedure: The following numbered items can be found on the lab counter and side tables.\n","1. Metal reflector (measure large\n","end)\n","2. Plastic funnel (measure large\n","end)\n","3. Wooden turntable\n","4. Wiffle ball\n","5. Spool of fishing line\n","6. Quarter\n","7. Blue plastic lid\n","8. Roll of duct tape\n","9. Easy button\n","10. Plastic bucket (measure top\n","edge)\n","11. Red cup\n","12. Bicycle tire (measure outside\n","of metal rim)\n","1. Using a measuring tape, measure the circumference and diameter of each item in millimeters and record the value in the\n","table below.\n","(https://docs.google.com/spreadsheets/d/1fdjzlWsDo_jOL8Uxa2tAyk3O6HW_shHg50Q0swY2XEM/edit#gid=0).\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NiDzd_bwjv0Z"},"outputs":[],"source":["# imports some software packages we'll use\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WMTlKXuwjv0j","colab":{"base_uri":"https://localhost:8080/","height":677},"executionInfo":{"status":"ok","timestamp":1687375504705,"user_tz":300,"elapsed":1361,"user":{"displayName":"Frank Geurts","userId":"06961530065493617041"}},"outputId":"2920e80d-885a-4edd-b9af-47da19a93bf0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Item  Circumference  Diameter\n","0      1         14.290      4.45\n","1      2         16.310      5.45\n","2      3         21.990      6.99\n","3      4         19.500      7.00\n","4      5         20.810      6.61\n","5      6         11.750      3.69\n","6      7         19.500      5.00\n","7      8         22.000      7.00\n","8      9          7.500      2.05\n","9     10          3.100      1.79\n","10    11         28.210      8.43\n","11    12         22.560      6.98\n","12    13         11.200      3.20\n","13    14         23.100      7.10\n","14    15         23.700      8.10\n","15    16         24.100      6.90\n","16    17         29.516      9.40\n","17    18         21.980      7.00\n","18    19         22.940      7.00\n","19    20         22.900      7.10"],"text/html":["\n","  <div id=\"df-b1625517-3482-40ac-861e-a4e1a241b432\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item</th>\n","      <th>Circumference</th>\n","      <th>Diameter</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>14.290</td>\n","      <td>4.45</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>16.310</td>\n","      <td>5.45</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>21.990</td>\n","      <td>6.99</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>19.500</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>20.810</td>\n","      <td>6.61</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>11.750</td>\n","      <td>3.69</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>19.500</td>\n","      <td>5.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>22.000</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>7.500</td>\n","      <td>2.05</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>3.100</td>\n","      <td>1.79</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>28.210</td>\n","      <td>8.43</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>22.560</td>\n","      <td>6.98</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>11.200</td>\n","      <td>3.20</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>23.100</td>\n","      <td>7.10</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>23.700</td>\n","      <td>8.10</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>24.100</td>\n","      <td>6.90</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>29.516</td>\n","      <td>9.40</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>21.980</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>22.940</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>22.900</td>\n","      <td>7.10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1625517-3482-40ac-861e-a4e1a241b432')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1625517-3482-40ac-861e-a4e1a241b432 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1625517-3482-40ac-861e-a4e1a241b432');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["# a hashtag tells the program \"don't read the rest of the line\"\n","# That way we can write \"comments\" to humans trying to figure out what the code does\n","\n","data = pd.read_excel('https://docs.google.com/spreadsheets/d/1QI8BkBOxorOimk6kOApp2-XmzNhyZujSvVUk2dguolA/export')\n","# units in these files are time, T (rolls) and Undecayed Atoms, A (number of atoms)\n","\n","# The .head(n) command displays the first n rows of a file.\n","data.head(21)"]},{"cell_type":"markdown","metadata":{"id":"KufRU5EUjv0_"},"source":["## Part Two\n","Record the average in the proper column on the datasheet.\n","\n","When you're ready, scroll down to **Part 3**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"baDYUis1jv05","colab":{"base_uri":"https://localhost:8080/","height":677},"executionInfo":{"status":"ok","timestamp":1687375504706,"user_tz":300,"elapsed":10,"user":{"displayName":"Frank Geurts","userId":"06961530065493617041"}},"outputId":"9574318d-82cd-4377-cfd9-07c5212d6ffd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Item  Circumference  Diameter        Pi\n","0      1         14.290      4.45  0.311407\n","1      2         16.310      5.45  0.334151\n","2      3         21.990      6.99  0.317872\n","3      4         19.500      7.00  0.358974\n","4      5         20.810      6.61  0.317636\n","5      6         11.750      3.69  0.314043\n","6      7         19.500      5.00  0.256410\n","7      8         22.000      7.00  0.318182\n","8      9          7.500      2.05  0.273333\n","9     10          3.100      1.79  0.577419\n","10    11         28.210      8.43  0.298830\n","11    12         22.560      6.98  0.309397\n","12    13         11.200      3.20  0.285714\n","13    14         23.100      7.10  0.307359\n","14    15         23.700      8.10  0.341772\n","15    16         24.100      6.90  0.286307\n","16    17         29.516      9.40  0.318471\n","17    18         21.980      7.00  0.318471\n","18    19         22.940      7.00  0.305144\n","19    20         22.900      7.10  0.310044"],"text/html":["\n","  <div id=\"df-1bffe69a-508f-4d9d-97b6-a63efb5a1b83\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item</th>\n","      <th>Circumference</th>\n","      <th>Diameter</th>\n","      <th>Pi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>14.290</td>\n","      <td>4.45</td>\n","      <td>0.311407</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>16.310</td>\n","      <td>5.45</td>\n","      <td>0.334151</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>21.990</td>\n","      <td>6.99</td>\n","      <td>0.317872</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>19.500</td>\n","      <td>7.00</td>\n","      <td>0.358974</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>20.810</td>\n","      <td>6.61</td>\n","      <td>0.317636</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>11.750</td>\n","      <td>3.69</td>\n","      <td>0.314043</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>19.500</td>\n","      <td>5.00</td>\n","      <td>0.256410</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>22.000</td>\n","      <td>7.00</td>\n","      <td>0.318182</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>7.500</td>\n","      <td>2.05</td>\n","      <td>0.273333</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>3.100</td>\n","      <td>1.79</td>\n","      <td>0.577419</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>28.210</td>\n","      <td>8.43</td>\n","      <td>0.298830</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>22.560</td>\n","      <td>6.98</td>\n","      <td>0.309397</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>11.200</td>\n","      <td>3.20</td>\n","      <td>0.285714</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>23.100</td>\n","      <td>7.10</td>\n","      <td>0.307359</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>23.700</td>\n","      <td>8.10</td>\n","      <td>0.341772</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>24.100</td>\n","      <td>6.90</td>\n","      <td>0.286307</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>29.516</td>\n","      <td>9.40</td>\n","      <td>0.318471</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>21.980</td>\n","      <td>7.00</td>\n","      <td>0.318471</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>22.940</td>\n","      <td>7.00</td>\n","      <td>0.305144</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>22.900</td>\n","      <td>7.10</td>\n","      <td>0.310044</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1bffe69a-508f-4d9d-97b6-a63efb5a1b83')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1bffe69a-508f-4d9d-97b6-a63efb5a1b83 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1bffe69a-508f-4d9d-97b6-a63efb5a1b83');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}],"source":["# You can specify a column by data['column name']\n","# This adds a column and fills it with E+px^2 for each event\n","data['Pi'] = (data['Diameter']  / data['Circumference'])\n","data.head(21)"]},{"cell_type":"markdown","metadata":{"id":"4MXlLaWNjv1F"},"source":["## Part Three\n","\n","Decay Graph\n","For each radioactive nuclei sample, plot the average values of “counts/min” (Avg Run) as a function of time. The Avg Run value is on the y-axis and time is on the x-axis.\n","\n","The graphed data should result in an exponential decay curve. Connect the data points with a curve.\n","\n","On the same graph, plot the Avg Run versus time data for the other radioactive nuclei samples. Be sure to provide a legend to label each line on the graph.\n","\n","When you're ready, scroll down to **Part 4**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-scsKIdKjv1G","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1687375505354,"user_tz":300,"elapsed":656,"user":{"displayName":"Frank Geurts","userId":"06961530065493617041"}},"outputId":"87989a0c-ae4d-40d4-a8ba-cbabc8a0ef3f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#   this creates a scatterplot: plt.scatter(x-variable, y-variable)\n","plt.scatter(data['Circumference'], data['Diameter'])\n","plt.title(\"Determining Pi\")\n","plt.xlabel(\"Diameter (mm)\")\n","plt.ylabel(\"Circumference (mm)\");"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"executionInfo":{"status":"ok","timestamp":1687375505960,"user_tz":300,"elapsed":613,"user":{"displayName":"Frank Geurts","userId":"06961530065493617041"}},"outputId":"94932ce6-88d1-4478-be51-4cda6f12bff0","id":"0VbYdD6_wDQs"},"outputs":[{"output_type":"stream","name":"stdout","text":["slope =  3.165827671250616\n","3.165827671250616\n"]},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7fe4031457e0>]"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#   this creates a scatterplot: plt.scatter(x-variable, y-variable)\n","plt.scatter(data['Diameter'], data['Circumference'])\n","plt.title(\"determining pi\")\n","plt.xlabel(\"Diameter)\")\n","plt.ylabel(\"Circumference\");\n","plt.plot(data['Diameter'], data['Circumference'], 'o')\n","#create scatter plot\n","\n","\n","m, b = np.polyfit(data['Diameter'], data['Circumference'], 1)\n","#m = slope, b=intercept\n","print('slope = ',(m))\n","print(m)\n","\n","\n","plt.plot(data['Diameter'], m*data['Diameter'] + b)\n","#add line of best fit"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Zq2yLC0jv1L"},"outputs":[],"source":["# run this command to make your plots look like they're from xkcd.com\n","plt.xkcd();\n","# then re-execute your code to make a plot and see it xkcd-ified."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SIbaFNC1jv1Q"},"outputs":[],"source":["# run this cell to make normal-looking plots again\n","mpl.rcdefaults()"]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"IckJMDaijv1f"},"source":["---\n","## Saving Your Work\n","This is running on a Google server on a distant planet and deletes what you've done when you close this tab. To save your work for later use or analysis you have a few options:\n","- File > \"Save a copy in Drive\" will save it to you Google Drive in a folder called \"Collaboratory\". You can run it later from there.\n","- File > \"Download .ipynb\" to save to your computer (and run with Jupyter software later)\n","- File > Print to ... um ... print.\n","- To save an image of a graph or chart, right-click on it and select Save Image as ...\n","\n","## Credits\n","This notebook was designed by [Quarknet](https://quarknet.org/) Teaching and Learning Fellow [Adam LaMee](https://adamlamee.github.io/) and UCF Physics undergrad Brooke Emison. The handy csv files were created from the CMS Run2011A primary datasets and converted from ROOT format by the masterful [Tom McCauley](https://github.com/tpmccauley). More can be found on the [CERN OpenData](http://opendata.cern.ch/?ln=en) site, like [here](http://opendata.cern.ch/record/545). The 3D vector image can be found on [WikiMedia Commons](https://commons.wikimedia.org/wiki/File:Coord_XYZ.svg). Finally, thanks to the great folks at [Binder](https://mybinder.org/) and [Google Colaboratory](https://colab.research.google.com/notebooks/intro.ipynb) for making this notebook interactive without you needing to download it or install [Jupyter](https://jupyter.org/) on your own device. Find more activities and license info at [CODINGinK12.org](http://www.codingink12.org).\n","[Real Python](https://realpython.com/linear-regression-in-python/)\n","[Numpy](https://numpy.org/doc/stable/reference/generated/numpy.lib.scimath.log2.html)"]}],"metadata":{"anaconda-cloud":{},"colab":{"provenance":[{"file_id":"1OT9Wr4ym3eqLyeppcxMnbAcZKzfolOFW","timestamp":1694386171716},{"file_id":"1diOqiNNKF1HxvB5LWQIq4KbAlivCG_pm","timestamp":1687359522694},{"file_id":"1pGmqMYWWhjpqblVQWHK-nbosnGoT4Zg-","timestamp":1687286896135},{"file_id":"1sx-P7mL6ekoCiL3m0mPfQToQ6OsqGeab","timestamp":1654609035827},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/master/muon_mass.ipynb","timestamp":1654529207733}],"collapsed_sections":["VxPAdfoTjv0X"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"nbformat":4,"nbformat_minor":0}