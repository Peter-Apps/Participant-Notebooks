{"cells":[{"cell_type":"markdown","source":["# How to use Histograms to determine accepted values\n"],"metadata":{"id":"wvyD0lxuJPS1"}},{"cell_type":"markdown","source":["##Teacher Notes\n","This lab is designed to have students practice and understand how to collect, analyze and interpret large data sets.  It does not require a knowledge of how to code to begin, but an intro activity link is provided.  The prelab will allow students to use actual particle physics data and be taken step by step through a mostly provided code to create a histogram.  The idea is that students will come to the conclusion that where you see peaks in the histogram are the value we assign to whatever quantity we measure, but also allows them to see that depending on measurement methods and data collection can vary slightly (any student that has had statistic will probably love this)\n","\n","**Implementation**\n"," - Ideally this lab should take 3 days.\n","    - 1 day for the prelab\n","    - 1 day to collect and submit the student data to be compiled\n","    - 1 day to analyze the data and finish\n","\n","- The method of compiling data is up to the teacher. Some methods that work are:\n","  - By hand (have each group turn in work and enter into excel then save as csv file.  This will be the most time consuming)\n","  - The faster method is to make a google form that imputs responses into a google sheet and save as a csv.  This will update in real time and can allow students to work with not just other students or classes, but district wide if teachers at other schools use the same form to collect the data.\n","  - I'm sure there is a way to do Microsoft forms to excel but haven't figured it out yet."],"metadata":{"id":"I5UFsX2FFgwf"}},{"cell_type":"markdown","metadata":{"id":"VxPAdfoTjv0X"},"source":["# Prelab - The Mass of a Muon\n","\n","The Prelab activity uses data from the [CMS detector](https://cms.cern/detector) at CERN in Geneva, Switzerland. Yes this is real particle accelerator data.\n","\n","To get started,\n","- You won't hurt anything by experimenting. If you break it, close the tab and open the activity again to start over.\n","- Is this your first time? Need a refresher? Try the 5-minute [Intro to Coding activity](./intro.ipynb) and come back here.\n","\n","When you're ready, run each code cell until you get down to part 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NiDzd_bwjv0Z"},"outputs":[],"source":["# imports some software packages we'll use.  These will let you do math and make plots.\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WMTlKXuwjv0j"},"outputs":[],"source":["# a hashtag tells the program \"don't read the rest of the line\"\n","# That way we can write \"comments\" to humans trying to figure out what the code does\n","\n","#the following code says that the csv file located at the link provided will be used as the term data through the rest of the programs after this\n","data = pd.read_csv('https://github.com/QuarkNet-HEP/coding-camp/raw/main/data/muons.csv')\n","# units in these files are energy, E (in GeV) and momentum, p (in GeV/c)\n","\n","\n","# The .head(n) command displays the first n rows of a file.\n","data.head(3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bdlj4S83jv0z"},"outputs":[],"source":["# .shape displays the (number of rows , number of columns)\n","data.shape"]},{"cell_type":"markdown","metadata":{"id":"OezzANGxjv04"},"source":["\n","Part 1 - Looking at the Data\n","\n","This data set represents muons produced in a proton-proton collision (called an *event*).Here is a [key](https://github.com/QuarkNet-HEP/coding-camp/raw/main/data/muons.csv) to what the column headings are.\n","Look at the cells above and discuss/answer these following questions with your partner:\n","- why do you think there are 3 versions of the variable p? (px, py, pz)\n","- How many events does this data set contain?"]},{"cell_type":"markdown","metadata":{"id":"KufRU5EUjv0_"},"source":["Part 2 - 3D Momentum\n","\n","Each muon has momentum and since they travel in 3 dimensions the momentum has three components. You can calculate the total momentum with the Pythogorean Theorem:  \n","- In 2 dimensions, it's the familiar:  \n","|p|<sup>2</sup> = p<sub>x</sub><sup>2</sup> + p<sub>y</sub><sup>2</sup>  \n","  \n","  \n","- In 3 dimensions, it looks like:  \n","|p|<sup>2</sup> = p<sub>x</sub><sup>2</sup> + p<sub>y</sub><sup>2</sup> + p<sub>z</sub><sup>2</sup>  \n","  \n","  \n","<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Coord_XYZ.svg/2000px-Coord_XYZ.svg.png\" alt=\"Drawing\" width=\"200\" height=\"200\"/>  \n","\n","Run the code in the cell below to calculate the muon's total momentum.\n","\n","When you're ready, scroll down to **Part 3**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"baDYUis1jv05"},"outputs":[],"source":["# You can specify a column by data['column name']\n","# the following line will add a new column to the data set that has that name\n","data['ptotal'] = np.sqrt(data['px']**2 + data['py']**2 + data['pz']**2)     #too make it more challenging, imput this math incorrectly and let students determine how to fix it\n","data.head(3)"]},{"cell_type":"markdown","metadata":{"id":"4MXlLaWNjv1F"},"source":["Part Three - The Einstein stuff\n","\n","Here's where special relativity comes in. A particle's **energy** is due to both it's **mass** and **momentum**. This equation is also similar to the Pythagoream theorem:  \n","\n","<center>energy<sup>2</sup> = mass<sup>2</sup> + momentum<sup>2</sup></center>  \n","\n","*Mass* in this equation is called the particle's *invariant mass* because it is a value all observers would agree on, regardless of their reference frame. The code below creates a column for the mass of the muon, but the equation isn't quite right.  \n","- Edit the code in the cell below to *really* calculate the muon's mass.  \n","- How could your equation produce some imaginary numbers?  \n","\n","When you're ready, scroll down to **Part 4**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1sgk3CLRjv1A"},"outputs":[],"source":["#solve the above equation for mass, then edit the code below to make it calculate that.  It will add another column called mass.\n","data['mass'] = (data['E']**2 - data['ptotal']**2)**(1/2) #students will need to correct this code to calculate the mass column properly\n","data = data.fillna(0) # fills in a zero for any imaginary values your caluclation might produce\n","data.head(3)"]},{"cell_type":"markdown","metadata":{"id":"zlF-KDk0jv1K"},"source":["Part Four - The Histogram fun\n","\n","The code below may take a few moments to run since it's grabbing a pretty big data set (>400,000 events!?). When it's finished, you'll see a histogram of the invariant mass values you calucalted for muon 1 in each event. This is called a *mass plot*.  \n","- You'll probably need to adjust the histogram's range and number of bins to see a clear peak. The x-value of that peak occurs at the invariant mass of the particle (in this case, a muon).\n","- Based on your histogram, what value does the muon's invariant mass seem to be?\n","- Try replacing the histogram's title and x-axis label to something better.  \n","\n"]},{"cell_type":"markdown","source":[],"metadata":{"id":"ncGN2z2gLJSu"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"-scsKIdKjv1G"},"outputs":[],"source":["plt.hist(data['mass'], bins=500, range=[0,.3], log=False)  # makes the histogram\n","plt.title(\"Good enough Title\")\n","plt.xlabel(\"x-axis label (in GeV/c^2)\")\n","plt.ylabel(\"number of events\")\n","plt.grid(False);   #a good range is between 0 and 0.3, and about 1000 bins gives a nice sharp peak"]},{"cell_type":"markdown","source":["## Prelab Questions\n","\n","1. How did you choose what range to set for the histogram?\n","2. What happened when you increased the number of \"bins\" for the histogram?\n","3. What would you report as the mass of a muon from the given data and histogram set? Explain why that is your choice using feature of the histogram.\n"],"metadata":{"id":"HglCNdS-LKC3"}},{"cell_type":"markdown","source":["## Lab - The Confirmation of g\n","\n","This lab will not only incorrporate just your groups data, but the data from all other groups, even those in different periods and/or schools.\n","\n","Your group will be dropping some object from different heights and measuring the time of the fall.  Each group will be collecting 20 \"events\" to be compiled into a csv file that you can upload and manipulate.\n","\n","Remember\n","\n","- You need 20 heights and 20 times.\n","- Use a few different starting heights\n","- Make sure to measure your height and times as accurately as possible.\n","\n","Once you've collected your data points, enter them into the provided forms link to compile the data with the rest of the class/course. link will be here for forms\n","\n","Proceed to the data analysis stage once all data has been compiled.\n","\n","\n"],"metadata":{"id":"5Jk27keRI9Js"}},{"cell_type":"code","source":["#The first thing you should do is import the file so we can manipulate that data.\n","#Determine what the code would be to read the data file (the prelab really helps)\n","\n","data = pd.read_csv('https://raw.githubusercontent.com/Chemdrummer/Data-Samples/main/RandomTestDataSample.csv') #this was test data to make sure the code works\n","data.head(3)"],"metadata":{"id":"9MQUL8E-G5aI","executionInfo":{"status":"ok","timestamp":1655501669325,"user_tz":240,"elapsed":163,"user":{"displayName":"George Ryan Moore","userId":"12376198978779741176"}},"outputId":"cb6f86f1-66ad-40dc-8f1f-d985c752139d","colab":{"base_uri":"https://localhost:8080/","height":143}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Trial  Fall Height (m)  Fall Time (s)\n","0      1             1.00           0.46\n","1      2             1.05           0.47\n","2      3             2.00           0.64"],"text/html":["\n","  <div id=\"df-f11d06a2-6ac5-49d9-9235-fa81975bc728\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Trial</th>\n","      <th>Fall Height (m)</th>\n","      <th>Fall Time (s)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1.00</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.05</td>\n","      <td>0.47</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2.00</td>\n","      <td>0.64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f11d06a2-6ac5-49d9-9235-fa81975bc728')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f11d06a2-6ac5-49d9-9235-fa81975bc728 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f11d06a2-6ac5-49d9-9235-fa81975bc728');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["#Now that the data is loaded, we need to use it to create a histogram that plots acceleration.\n","#The first task is to determine the equation that will take the information you have and calculate acceleration\n","#Code that equation below to add another column to the data set that provides the acceleration for each trial\n","\n","data['acceleration'] = (2 * data['Fall Height (m)'])/(data['Fall Time (s)']**2)\n","data.head(5)"],"metadata":{"id":"NOTqZR7AO01t","executionInfo":{"status":"ok","timestamp":1655501671558,"user_tz":240,"elapsed":160,"user":{"displayName":"George Ryan Moore","userId":"12376198978779741176"}},"outputId":"8b34b6fc-6cb0-4225-9c6c-845f9d99de10","colab":{"base_uri":"https://localhost:8080/","height":206}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Trial  Fall Height (m)  Fall Time (s)  acceleration\n","0      1             1.00           0.46      9.451796\n","1      2             1.05           0.47      9.506564\n","2      3             2.00           0.64      9.765625\n","3      4             1.50           0.50     12.000000\n","4      5             3.00           0.78      9.861933"],"text/html":["\n","  <div id=\"df-84e4d41f-4b95-4516-9537-1af9aea6bd3a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Trial</th>\n","      <th>Fall Height (m)</th>\n","      <th>Fall Time (s)</th>\n","      <th>acceleration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1.00</td>\n","      <td>0.46</td>\n","      <td>9.451796</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.05</td>\n","      <td>0.47</td>\n","      <td>9.506564</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2.00</td>\n","      <td>0.64</td>\n","      <td>9.765625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.50</td>\n","      <td>0.50</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>3.00</td>\n","      <td>0.78</td>\n","      <td>9.861933</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84e4d41f-4b95-4516-9537-1af9aea6bd3a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-84e4d41f-4b95-4516-9537-1af9aea6bd3a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-84e4d41f-4b95-4516-9537-1af9aea6bd3a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#Now it is time to create the histogram\n","#Write the code below that will allow you to create a histogram\n","#Fiddle with the bin size and range until you get a graph you like\n","\n","plt.hist(data['acceleration'], bins=15, range=[6,14], log=False)  # makes the histogram\n","plt.title(\"acceleration due to gravity\")\n","plt.xlabel(\"acceleration in m/s/s\")\n","plt.ylabel(\"number of events\")\n","plt.grid(False)"],"metadata":{"id":"8rHoeqazUpFn","executionInfo":{"status":"ok","timestamp":1655501680782,"user_tz":240,"elapsed":390,"user":{"displayName":"George Ryan Moore","userId":"12376198978779741176"}},"outputId":"7a5efb94-c1c0-47a2-92d6-13219bfa3811","colab":{"base_uri":"https://localhost:8080/","height":295}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Conclusion Questions\n","\n","1. Using the graph you created, what value would you assign to the acceleration due to gravity (on earth)?\n","2. How does this value compare to the current accepted value for the acceleration due to gravity?\n","3. What do you think the amount of bins/bin size tells you about the method of data collection?\n","4. What things do you think could be done to refine the data collection procedures and measurement methods?"],"metadata":{"id":"iusa_AK_Vmlh"}},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"IckJMDaijv1f"},"source":["---  \n","## Saving Your Work  \n","This is running on a Google server on a distant planet and deletes what you've done when you close this tab. To save your work for later use or analysis you have a few options:  \n","- File > \"Save a copy in Drive\" will save it to you Google Drive in a folder called \"Collaboratory\". You can run it later from there.  \n","- File > \"Download .ipynb\" to save to your computer (and run with Jupyter software later)  \n","- File > Print to ... um ... print.  \n","- To save an image of a graph or chart, right-click on it and select Save Image as ...  \n","\n","## Credits\n","The prelab is adapted from [Quarknet](https://quarknet.org/) Teaching and Learning Fellow [Adam LaMee](https://adamlamee.github.io/) and UCF Physics undergrad Brooke Emison. The handy csv files were created from the CMS Run2011A primary datasets and converted from ROOT format by the masterful [Tom McCauley](https://github.com/tpmccauley). More can be found on the [CERN OpenData](http://opendata.cern.ch/?ln=en) site, like [here](http://opendata.cern.ch/record/545). The 3D vector image can be found on [WikiMedia Commons](https://commons.wikimedia.org/wiki/File:Coord_XYZ.svg). Finally, thanks to the great folks at [Binder](https://mybinder.org/) and [Google Colaboratory](https://colab.research.google.com/notebooks/intro.ipynb) for making this notebook interactive without you needing to download it or install [Jupyter](https://jupyter.org/) on your own device. Find more activities and license info at [CODINGinK12.org](http://www.codingink12.org)."]}],"metadata":{"anaconda-cloud":{},"colab":{"provenance":[{"file_id":"1agU0FZeElSTgxQBri3_nK_uYPqpVs1bU","timestamp":1694385037535},{"file_id":"1Jq-Aaww7j4kAYcQGKJOKYavUotiDrmp-","timestamp":1655821911881},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/main/muon_mass.ipynb","timestamp":1655314016673}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"}},"nbformat":4,"nbformat_minor":0}