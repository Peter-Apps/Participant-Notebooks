{"cells":[{"cell_type":"markdown","metadata":{"id":"vChUtQQIasbR"},"source":["**Teacher Notes**  \n","Objective: Students will interpret the scatterplot and determine the equation of the line of best fit.  \n","The purpose of this lesson is to have students analyze a scatterplot and determine the slope and y-intercept of a line.  Student will also work on adjusting the window to have a good view of what they are looking for.  Using the values the students came up with, a line will be graphed.  The students will compare the given line to the line they have to determine if their slope and y-intercept is correct.  Those who get it incorrect multiple time can see how the changes in their values have an effect on their line.\n","This activity is designed to be implemented after having some basic knowledge of slopes and y-intercepts.  If you haven't gone over slope-intercept form this could be used as an intro into that lesson.  You can add code that will write out their equation after entering the slope and y-intercept.  From there have students discuss their noticings.\n"]},{"cell_type":"markdown","metadata":{"id":"F57e5ziRbQHN"},"source":["Step 1: Run Code\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"G8gY-lvGj3uv"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","metadata":{"id":"ix2VGTaZ5NCC"},"source":["Step 2: Fix the xlim and ylim if needed so that you can have a good view of the graph to answer the questions to follow."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1656096697174,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"dpa1s03ej8bW","outputId":"b241da8b-d400-4ab7-8ca7-bf586d164e00"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["fig, ax = plt.subplots()\n","x = range(50)\n","y = range(50) + np.random.randint(0,30,50)\n","plt.xlim(0,25) #Adjust the scatter plot x-axis\n","plt.ylim(0, 50) #Adjust the scatter plot x-axis\n","plt.scatter(x, y)\n","plt.title('Simple Scatter plot')\n","plt.xlabel('X - value')\n","plt.ylabel('Y - value')\n","ax.xaxis.grid(True, which='minor')\n","plt.grid(True)\n","\n","a, b = np.polyfit(x, y, 1)\n","plt.plot(x, a*x+b)\n","plt.show()\n","\n","#print(a)\n","#print(round(a, 0))\n","a = (round(a, 0))\n","a = str(a)\n","#print (a)\n","#print (b)\n","#print(round(b, 0))\n","b = (round(b, 0))\n","b = str(b)\n"]},{"cell_type":"markdown","metadata":{"id":"dClXP9rbbXsm"},"source":["Step 2: Answer the following questions"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15504,"status":"ok","timestamp":1656096715842,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"d5f7jqEzkW_z","outputId":"cc4c628d-ecdb-4849-8bc2-18ce39cf4730"},"outputs":[{"name":"stdout","output_type":"stream","text":["What do you think the slope of the line is? (Round answer to nearest whole ex. 7.0) 1.0\n"]}],"source":["slope = input(\"What do you think the slope of the line is? (Round answer to nearest whole ex. 7.0) \")\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3991,"status":"ok","timestamp":1656096719966,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"sXFPLbb1nMCC","outputId":"160dfd24-35b4-469f-fff7-e4cc78119c21"},"outputs":[{"name":"stdout","output_type":"stream","text":["Estimate the y-intercept to the nearest whole ex. 7.0. 19\n"]}],"source":["yintercept = input(\"Estimate the y-intercept to the nearest whole ex. 7.0. \")\n"]},{"cell_type":"markdown","metadata":{"id":"CrlvJ8kt9uDL"},"source":["This is what you entered for the slope and y-intercept:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":147,"status":"ok","timestamp":1656096722741,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"N27PDX-x7eYA","outputId":"988c0e1a-7351-4d41-c33a-358846ec260f"},"outputs":[{"output_type":"stream","name":"stdout","text":["slope = 1.0\n","y-intercept = 19\n"]}],"source":["a = slope\n","b = yintercept\n","print('slope = {}'.format(a))\n","print('y-intercept = {}'.format(b))"]},{"cell_type":"markdown","metadata":{"id":"SjL_inqJ90tX"},"source":["Step 3: Now lets graph the line that goes with your answer.  Determine if it matches the given graph above.  If it matches, move on.  If not go back and adjust your slope and/or y-intercept."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"elapsed":240,"status":"ok","timestamp":1656096660801,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"nCTLj9PtXn-O","outputId":"748a91e7-8470-449a-cf40-c40622061886"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["a, b = np.polyfit(x, y, 1)\n","plt.xlim(0,25) #Adjust the scatter plot x-axis\n","plt.ylim(0, 50)\n","plt.plot(x, a*x+b)\n","plt.title('Enter a title')\n","plt.xlabel('X - value')\n","plt.ylabel('Y - value')\n","plt.grid(True)\n","plt.show()\n","\n"]},{"cell_type":"markdown","metadata":{"id":"U0qAHlqe9_97"},"source":["Step 4:  Look at the equation of your line.  What do you notice about it?"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1656096660802,"user":{"displayName":"Adam LaMee","userId":"10554742376757049308"},"user_tz":240},"id":"N6cZklBhYDOP","outputId":"b9f56a62-ba5f-4bce-f544-13f8de5e174b"},"outputs":[{"output_type":"stream","name":"stdout","text":["y = .8x + 19\n"]}],"source":["print ('y = {}x + {}' .format(slope,yintercept))\n","\n","\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1FndWKo_XUAuIcWJkNGl7ibYtOrlee-lz","timestamp":1694385020338},{"file_id":"1ce9VT46wai3_zXuAaU3ro9CUwB--J64y","timestamp":1656096389360},{"file_id":"1SOcu3E8pbJ3TFU1tCr0KsVQKHnnXUKdn","timestamp":1656096320188}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}