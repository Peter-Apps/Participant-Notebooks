{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1lfq2V_sJ9o1DaV9imTV5vokXEG_uGO4i","timestamp":1694386883781},{"file_id":"1__1cEy78b-jqJEsT1n2zqxCRmSj_SXSM","timestamp":1634240963028},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/master/projectile_in_air.ipynb","timestamp":1624892396515}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"cells":[{"cell_type":"markdown","source":["---\n","# Implementation Plan - Regular/Honors Physics\n","\n","\n","**Kinematics and Newtonian Forces**\n","\n","The 2021-22 school year was a bad year for innovation, especially computers; the students were overloaded and burnt out.  This printed file/key set up to be almost 100% scaffolded to familiarize students with how to use a Python workbook to do and redo calculations and allow graphs to automatically set their own axes.  \n","* **Tier I:** the average RZJHS student who needs to USE the workbook, not MAKE the workbook.  Students are given a workbook without constants and shown how to run a Python workbook.  Students are encouraged to play with the values for initial velocity, area, mass, etc. to determine how much air drag is expected to affect a given experiment, such as a rocket launch or balcony drop.  Final conclusion: YES, we can use kinematics formulas or NO, air drag will affect the trajectory, flight time, and range of tomorrow's lab projectile.\n","* **Tier II:** teaching students to use Python.  Constants are provided, but students are led through the process of filling in the formulas for force, acceleration, velocity, and position.  Final product: a working Python graphical model with vectors, as per this key.  Final conclusion: Python is good for running only until the projectile hits the ground, and automatically resetting the graph window every time you change the conditions.  Python is also handy for graphs with vectors.  If you don't need that functionality, Excel is fine.\n","* **Tier III:** teaching intrepid students to code in Python.  This tier only really works with a group who already knows how to think like a coder, e.g. has previous coding experience in other languages. Pseudocode is provided, as well as a sample structure (an empty list of constants), a sample function definition, a sample appending of a data list, a sample plot, and a sample quiver of arrows/vectors.  Students are responsible for writing their own code according to the model, or according to a coding structure they prefer better.\n","---"],"metadata":{"id":"sJvQjUxAIz0S"}},{"cell_type":"markdown","metadata":{"id":"3aQZjntsK9tm"},"source":["# Projectile Motion in Air\n","Your task is to:  \n","- model the motion of a Tesla roadster launched at 8 m/s *horizontally* off a 30 m cliff, including air resistance.  \n","$$ F_{drag} =  -\\frac{1}{2} \\rho C_{drag} A v^{2}$$\n","- add inline comments and or markdown cells to describe what the code does OR fill in formulas as needed\n","- describe the role iteration plays in the quality of the simulation\n","- compare and contrast the functionality of Python and Excel in swiftly and easily generating readable graphs for a wide variety of conditions\n","\n","You may find these references helpful:  \n","- [Aerodynamic drag](https://en.wikipedia.org/wiki/Drag_(physics))  \n","- Estimating [coefficient of drag](https://en.wikipedia.org/wiki/Drag_coefficient)  "]},{"cell_type":"code","metadata":{"id":"gPgYRBRPK9to"},"source":["# imports some software packages we'll use\n","import pandas as pd  # Python data analysis\n","import numpy as np   # Python numerical library\n","from math import cos,sin,pi\n","import matplotlib as mpl  # Graphing library\n","import matplotlib.pyplot as plt   #  Drawing plots"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zxfesLoWK9ty"},"source":["# Define your constants.\n","# Some of these constants and initial values aren't estimated very well.  Update these as you work with different scenarios.\n","M = 1305  # mass, in kg, source=Google\n","g = 9.81  #three sig figs, if you please\n","\n","rho = 1.275 # air density, kg/m^3\n","Cdrag = 0.41  # source=Wikipedia, smart Roadster\n","A = 1.103 # source=https://forum.onshape.com/discussion/15185/cross-sectional-area-of-car-for-drag\n","\n","# Set up your initial conditions.\n","xi = 0\n","yi = 40\n","\n","t = 0\n","ti = 0\n","dt = .25  # this is the important one: our discrete delta-t, our step and margin of error\n","\n","vxi = 8\n","vyi = 0\n","\n","ax = 0\n","ay = -g"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gbZ2wsUCK9t7","colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1659028447085,"user_tz":300,"elapsed":11,"user":{"displayName":"RZJHS Physics","userId":"03367456617350110797"}},"outputId":"b6514d6e-97c6-465a-e03a-69779a0286d2"},"source":["# Set up your function for the drag force.  You can define variables \"azoi\" (Yiddish), but you need a formal def for functions.\n","def Fdrag(v):     # Define a function called \"Fdrag\" which takes as its input  velocity v\n","    return -.5*rho*Cdrag*A*(v**2)  # note use of earlier constants\n","\n","    # The code below assumes that the car is moving FORWARDS and DOWN.\n","    # You will need to account for a sign change if you simulate moving up or backwards.\n","\n","# Define your variables, and start them off with your initial values.\n","x=xi\n","y=yi\n","vx=vxi\n","vy=vyi\n","t=ti\n","\n","# Set up lists to include all your data.\n","tlist = []\n","xlist = []\n","ylist = []\n","Vxlist = []\n","Vylist = []\n","zeroD = [] # for graphing vector components\n","\n","# Begin filling the lists with the values you have already.\n","tlist.append(t)\n","xlist.append(x)\n","ylist.append(y)\n","Vxlist.append(vx)\n","Vylist.append(vy)\n","zeroD.append(0)\n","\n","# See what happens to the car as it begins at height yi and falls until it hits the ground.\n","# The advantage in Python is that you can tell the computer to quit when y becomes negative, whereas Excel simply fills down as you drag.\n","# Note that this worksheet allows for for possible horizontal forces to be added.\n","\n","while y >= 0:\n","    ax = Fdrag(vx)/m\n","    vx = vx + ax*dt\n","    x = .5*ax*dt*dt + vx*dt + x\n","    xlist.append(x)\n","    Vxlist.append(vx)\n","\n","    ay = (-m*g + Fdrag(vy))/m\n","    vy = vy + ay*dt\n","    y = .5*ay*dt*dt + vy*dt + y\n","    ylist.append(y)\n","    Vylist.append(vy)\n","\n","    t = t +dt\n","    tlist.append(t)\n","    zeroD.append(0)\n","\n","# Note that the tabs and intendations are MANDATORY--it's how Python processes code!\n","# This is not like TI:Basic or Arduino:C++ where the orgainzation is pretty but optional.\n","\n","# Print your data table so you can see what's happening.\n","data = pd.DataFrame({\"t\": tlist, \"x\": xlist, \"y\": ylist, \"vx\": Vxlist, \"vy\" : Vylist})\n","data"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       t          x          y        vx         vy\n","0   0.00   0.000000  40.000000  8.000000   0.000000\n","1   0.25   1.950181  39.080312  7.867148  -2.452500\n","2   0.50   3.868789  37.542818  7.738672  -4.917485\n","3   0.75   5.756839  35.374935  7.614358  -7.420182\n","4   1.00   7.615296  32.557343  7.494005  -9.986974\n","5   1.25   9.445081  29.063271  7.377428 -12.646515\n","6   1.50  11.247071  24.857458  7.264449 -15.431009\n","7   1.75  13.022104  19.894661  7.154903 -18.377792\n","8   2.00  14.770980  14.117617  7.048637 -21.531384\n","9   2.25  16.494464   7.454203  6.945504 -24.946231\n","10  2.50  18.193289  -0.186470  6.845367 -28.690538"],"text/html":["\n","  <div id=\"df-9e268737-aa4c-4aa0-8fdf-174af543ef1f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>t</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>vx</th>\n","      <th>vy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>8.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.25</td>\n","      <td>1.950181</td>\n","      <td>39.080312</td>\n","      <td>7.867148</td>\n","      <td>-2.452500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.50</td>\n","      <td>3.868789</td>\n","      <td>37.542818</td>\n","      <td>7.738672</td>\n","      <td>-4.917485</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.75</td>\n","      <td>5.756839</td>\n","      <td>35.374935</td>\n","      <td>7.614358</td>\n","      <td>-7.420182</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.00</td>\n","      <td>7.615296</td>\n","      <td>32.557343</td>\n","      <td>7.494005</td>\n","      <td>-9.986974</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.25</td>\n","      <td>9.445081</td>\n","      <td>29.063271</td>\n","      <td>7.377428</td>\n","      <td>-12.646515</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.50</td>\n","      <td>11.247071</td>\n","      <td>24.857458</td>\n","      <td>7.264449</td>\n","      <td>-15.431009</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.75</td>\n","      <td>13.022104</td>\n","      <td>19.894661</td>\n","      <td>7.154903</td>\n","      <td>-18.377792</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.00</td>\n","      <td>14.770980</td>\n","      <td>14.117617</td>\n","      <td>7.048637</td>\n","      <td>-21.531384</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.25</td>\n","      <td>16.494464</td>\n","      <td>7.454203</td>\n","      <td>6.945504</td>\n","      <td>-24.946231</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.50</td>\n","      <td>18.193289</td>\n","      <td>-0.186470</td>\n","      <td>6.845367</td>\n","      <td>-28.690538</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e268737-aa4c-4aa0-8fdf-174af543ef1f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9e268737-aa4c-4aa0-8fdf-174af543ef1f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9e268737-aa4c-4aa0-8fdf-174af543ef1f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["# Set the scale for vectors on the graph\n","# This scale-the-graph function was done by trial and error\n","#  ...and curve-fitting a function to this particular pattern.\n","# Mondo extra credit for anyone who can explain what Python thinks it's doing.\n","scg=1.87*dt**-0.747\n","\n","# Arrange for the components to add tip-to-tail\n","yShift=[v*dt*(1-1/scg) for v in Vylist]\n","xVectYPos=np.add(ylist,yShift)\n","\n","# Graph position with velocity vectors\n","plt.plot(xlist, ylist, color='blue', marker='o',alpha=0.5,linewidth=0)\n","plt.quiver(xlist, ylist, Vxlist, Vylist, color='#660066', angles='xy', scale_units='xy', scale=scg, width=0.003,alpha=1)\n","plt.quiver(xlist, ylist, zeroD, Vylist, color='blue', angles='xy', scale_units='xy', scale=scg, width=0.003,alpha=1)\n","plt.quiver(xlist, xVectYPos, Vxlist, zeroD, color='violet', angles='xy', scale_units='xy', scale=scg, width=0.003,alpha=1)\n","plt.xlabel('x (m)')\n","plt.ylabel('(y (m)')\n","plt.title('Motion of Car Under Air Drag (Trajectory)\\n With Velocity Components')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"Me3YsRCgY-y9","executionInfo":{"status":"ok","timestamp":1659028447461,"user_tz":300,"elapsed":384,"user":{"displayName":"RZJHS Physics","userId":"03367456617350110797"}},"outputId":"64db718b-ff79-42e9-bcd3-c0379f01a444"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"SA3BGSbBdJlM","executionInfo":{"status":"ok","timestamp":1659028447463,"user_tz":300,"elapsed":11,"user":{"displayName":"RZJHS Physics","userId":"03367456617350110797"}},"outputId":"b3229322-7d41-4cb9-d410-03fcd479f316"},"source":["# Now, define a new set of lists for freefall, to show how the air drag numbers differ.\n","# Note that we need new variables and new lists, but not new constants.\n","# Famliarize yourself with the process of defining variables, loading them into lists while a certai ncondition holds, and displaying the results.\n","\n","xfree=xi\n","yfree=yi\n","vxfree=vxi\n","vyfree=vyi\n","tfree=0\n","\n","tfreelist = []\n","xfreelist = []\n","yfreelist = []\n","\n","tfreelist.append(tfree)\n","xfreelist.append(xfree)\n","yfreelist.append(yfree)\n","\n","while yfree >= 0:\n","    ax = 0\n","    vxfree = vxfree\n","    xfree = .5*ax*dt + vxfree*dt + xfree\n","    xfreelist.append(xfree)\n","\n","    ay = -g\n","    vyfree = vyfree + ay*dt\n","    yfree = .5*ay*dt*dt + vyfree*dt + yfree\n","    yfreelist.append(yfree)\n","\n","    tfree = tfree + dt\n","    tfreelist.append(tfree)\n","\n","datafree = pd.DataFrame({\"t\": tfreelist, \"x\": xfreelist, \"y\": yfreelist})\n","datafree"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       t     x          y\n","0   0.00   0.0  40.000000\n","1   0.25   2.0  39.080312\n","2   0.50   4.0  37.547500\n","3   0.75   6.0  35.401562\n","4   1.00   8.0  32.642500\n","5   1.25  10.0  29.270312\n","6   1.50  12.0  25.285000\n","7   1.75  14.0  20.686563\n","8   2.00  16.0  15.475000\n","9   2.25  18.0   9.650313\n","10  2.50  20.0   3.212500\n","11  2.75  22.0  -3.838437"],"text/html":["\n","  <div id=\"df-5b081ff0-c325-4aa2-b49f-6f2ea99c230d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>t</th>\n","      <th>x</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.25</td>\n","      <td>2.0</td>\n","      <td>39.080312</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.50</td>\n","      <td>4.0</td>\n","      <td>37.547500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.75</td>\n","      <td>6.0</td>\n","      <td>35.401562</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.00</td>\n","      <td>8.0</td>\n","      <td>32.642500</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.25</td>\n","      <td>10.0</td>\n","      <td>29.270312</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.50</td>\n","      <td>12.0</td>\n","      <td>25.285000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.75</td>\n","      <td>14.0</td>\n","      <td>20.686563</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.00</td>\n","      <td>16.0</td>\n","      <td>15.475000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.25</td>\n","      <td>18.0</td>\n","      <td>9.650313</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.50</td>\n","      <td>20.0</td>\n","      <td>3.212500</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.75</td>\n","      <td>22.0</td>\n","      <td>-3.838437</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b081ff0-c325-4aa2-b49f-6f2ea99c230d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5b081ff0-c325-4aa2-b49f-6f2ea99c230d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5b081ff0-c325-4aa2-b49f-6f2ea99c230d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":128}]},{"cell_type":"code","metadata":{"id":"71rubSqXK9uA","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1659028448288,"user_tz":300,"elapsed":834,"user":{"displayName":"RZJHS Physics","userId":"03367456617350110797"}},"outputId":"4ffd7adf-2535-4f85-eefd-d7fb37e8dbae"},"source":["# Now... graph!\n","# How to's are up and waiting at https://colab.research.google.com/drive/1y9GgoofIGPFP_DKA-6BJklVaFHAXwUg4?usp=sharing\n","# Do avail yourself of great Python tutorials on GeeksForGeeks.org\n","\n","plt.plot(data['x'],data['y'],linestyle='-', marker='o', color='cyan', markersize=5, label='Air drag')\n","plt.plot(datafree['x'],datafree['y'],linestyle='-', marker='o', color='yellow', markersize=3, label='Freefall')\n","\n","plt.table(cellText=data.values.round(3), colLabels=data.columns, loc='right')\n","\n","plt.xlabel('x (m)')\n","plt.ylabel('(y (m)')\n","plt.title('Motion of Car (Trajectory)')\n","plt.legend()\n","plt.grid(False)\n","plt.axis([0, np.max(xfreelist), 0, np.max(yfreelist)])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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qzpZWVl88803dO3a1ab93LlziYmJcb7gTsZkMrF8+XIAFi9ezIkTtsZg3t7ejB07lubNm+Pl5UX9+vXp3r07t99+OxaLhcIQtEuWLLFqv337dkJDQ4mJiWH//v2umZATuZFMhiXdCzNnzsRsNhMXF0dmZqYzRXU6jr5ze8yaNQt/f39eeuklPvjgA5vrX3zxhaHH6tWrEx8fT0hICE2bNuXAgQMMHz78huV06aZZ0zSvYh/7oh9oKRSKSsYo4FlgOnpi7EnoJ889cObG2RtYB9RFj+WsMgcqbPnmm2+48847rU4st27dyq5du1i1ahWzZs1i8+bNN1HCsvHWW29x4sQJhgwZwsyZM6+7vcViYfDgwYwePZqWLVtaXfvPf/7Dzp07efHFF50lboUxb948Zs+eTfv27bl48SI1atSwqZOZmcny5cs5duwY6enp5OTk8J///AdN0/j88895/vnn6dChA3Xr1sXNzQ2A8PBwjh8/zp49e3juued46KGHXD21cnH16lUSEhIYMGDAdbVzdC+MHDmSo0ePkpycjJeXFy+88EJFiO00HH3n9njmmWc4evQokydP5s0337S69sMPP1CrVi3Djj43N5f4+Hh2795Neno6ZrOZf/zjHzcsZ4VtmjVN+ww9IGtbTdNSNU0bDkzRNG2fpml70bMcPF9R4ysUivJxH7rb3hVAgGzgB2CVU0fxQ984uxeM+LNTe1dUfeydvnl7ewP6o96+ffuSmFh1THyGDBli16TA29vb6tQ0NTXVmCfAk08+SevWrRkzZoxVu++//5633nqLhIQEatasWXGCO4mAgADWrl1LUlISgwcPxt/f36bO999/T4sWLWjcuDHVq1enX79+/Pe//wUgMjKSLVu2kJiYSFRUlGGqUa9ePerUqQNAr169yM3NLZ/Dl4tZtWoV4eHhNGnS5LraOboXmjRpgpubG9WqVeOJJ564qffIrFmzDAc9R06wJX3njhg0aBDLli2zKrv290WhM6C/vz+apvHwww+X2m9JVGT0jMEi4iUi1UXER0TmisijIhIiuhfQAyJysqLGVygU5WMvcG2gyhwqwpCiNfrGORfoClSuCACKm8f58+fZtGkTDz74oFGWk5PDxYsXjfdr1651GIGjsvDTTz8Z75cvX05AQIBNnR49erB27VoyMzPJzMxk7dq19OjRA4C///3vnD9/3iaqwu7du3nqqadISEjA09OzYifhJE6dOgVAfn4+b775Jk8//bRNnebNm/O///2PS5cuISKsW7eOwMBAq/ZXrlxh8uTJRvvffvvNCJeWmJhIfn4+t912myum5BRuxG6/pHvh5Mmi7dXSpUtv6j3yzDPPkJycTHJyskN74pK+8+IUv5dWrFhB69atjc/5+fl8+eWXhj0z6P9UHDhwgNOn9fQg3333nd1+y4w978DK9iqeZ12hULiGb0SkjljfjHUKyiuGXSLSQET8RSS1wka5laASRQa4lkGDBskdd9wh7u7u4u3tLXPmzJH4+HiJj4836syfP18GDhxo1e7o0aNiNpvFbDZLUFCQvPnmm2Uaz1W6sDevfv36iclkkpCQELn//vslNVVf3zt27JDhw4cbbefOnSv+/v7i7+8v8+bNExGREydOCCABAQESGhoqoaGh8q9//UtERLp27Sqenp5GeZ8+fcok483UxbRp06R169bSunVrGTdunOTn54uISFpamsTExBhtX3nlFWnbtq2YTCYZOnSoXL58WURExo4dKwEBAdKmTRt5//33jfozZsyQoKAgMZvN0rFjR9m2bVuZZKwM90h2drY0atRIsrKyjLLi98LJkyfF29tb6tatK/Xr1xdvb285f/58iffC0KFDJTg4WEJCQqRPnz6Snp5eqhyu0IWjuYg4/s4nTpwoy5cvFxGR0aNHS1BQkISGhsq9994rP/74o9H3hg0bpGPHjjZjxsfHS0BAgHH/nTlzplQ5cRA9Q5MqEMg6IiJCCg3/FQqFa8hDt2H+Ad00A/Qz4YPoZhsVww/oZho+wCZ0h0HFjaKSFRShdFGE0kURShdFKF0UUaALm9Acrg45p1AoqghuwBr0NCSvo4e6SQH2VeioHYEV6CYa3VD5kRQKhUJRWajINNoKhaKK4wbcX/AaCYSiR9HYCdSusFGjgOUFo/ZAD01Xv8JG+yOjaZrdOKa3Ih4eHkoXBShdFKF0UYTSRREeHh7XuvQAatOsUCjKyO3AQnTjiTHogdYrjm7AEqAfegKUNVTkNv2PSqEdnkI9ei6O0kURShdFKF0UoWmaXUsMZZ6hUCjKTBdgPDAHfUtbsfRBNw7ZDjwA/F7hIypuPidOnCA6OpqgoCBMJhPTp0+3qSMijB49mlatWmE2m9m1a9dNkNQ+cXFxeHp62o1W8N5776Fpmt1QaBs2bDDCcoWFheHh4WGE07r77ruN8qZNmxoxiA8dOkRkZCQ1a9bk3XffrdiJ3QA3qguAnj170qBBA+6//36r8pkzZ9KqVSubtufPn6dPnz6EhoZiMpmYP3++cydTQRw+fNjqe69Xr55NlJTS1vuFCxfw8fHh2WefNcq++OILzGYzJpOJcePGuWQuZWHRokWYzWZCQkLo3Lkze/bsMa6VtF4K2bhxI/Xr1zf0VZgo6PLly3To0MH4/idNmmS0cbRmbgh73oGV7aWiZygUlYerItJR9DgXKS4ZcaGIaCLSS0SuuGTEPwpUgsgA10t6erokJSWJiMiFCxekdevWsn//fqs6K1askJ49e0p+fr5s375dOnToUGq/rtLFpk2bJCkpSUwmk1X5r7/+Kt27d5fmzZvL6dOnS+zj7Nmz0rBhQ8nJybG51q9fP/nkk09ERCQjI0MSExPl5ZdflqlTp5ZZxqqgi++//14SEhKkd+/eVuW7du2SY8eOia+vr1Xbt956S1566SURETl16pQ0bNhQrlwp/fdFZbpHLBaLNGnSRFJSrH+zlrbeR48eLYMHD5ZnnnlGRETOnDkjzZo1k1OnTomIyGOPPSbff/99qeO7Qhfbtm2Tc+fOiYjIypUrrebiaL0UZ8OGDTZrQkQkPz9fLl68KCIiV69elQ4dOsj27dtFxPGaKQkcRM9QJ80KheK6qA58ih5dYwhgqfARhwIfAivRLaorfkTFzcPLy4vw8HAA6tatS2BgoE066eXLl/PYY4+haRqdOnUiKyvLKi7tzSQqKsoqe2Ehzz//PFOmTCmTzeiSJUuIiYmhVq1aVuUXLlxg/fr1xkmzp6cnf/7zn6levbpzhHcy5dFF165dqVu3rk15u3bt8PPzsynXNI2LFy8iImRnZ9OoUSPc3auWBeq6devw9/fH19fXqryk9Z6UlERGRoZVyulffvmF1q1b07hxYwDuu+8+uwl1bgadO3emYcOGAHTq1InU1FTjmqP1UhY0TTOS2+Tm5pKbm2usL0dr5kZQm2aFQnHdtETfxm4D3iylrnN4EpgGfA0Mw5nJvBWVl5SUFHbv3k3Hjh2tytPS0mjWrJnx2cfHx2ZjXZlYvnw53t7ehIaGlqm+vSyIAMuWLaNr167Uq1fP2SK6jOvVRVl59tlnOXjwIE2bNiUkJITp06dTrVrV2uI4+t4drff8/HxeeOEFG9OcVq1acfjwYVJSUrBYLCxbtswq22RlYe7cucTExFx3u+3btxMaGkpMTAz79+83yvPy8ggLC8PT05Nu3brZ/N5wBlXr3zCFQlFpeATdPe8N9Dx+d1f4iH9Bt2v+G1AL+Aj1f/8fl+zsbGJjY5k2bVqV3iReunSJt99+m7Vr15ap/smTJ9m3b5+RDbA4n332GSNGjHC2iC7jenVxPaxZs4awsDDWr1/P0aNH6datG3fffXeVWTtXr14lISGBf/zjH2VuM3v2bHr16oWPj49VecOGDYmPj2fgwIFUq1aNzp07c/ToUWeLXC42bNjA3Llz2bp163W1Cw8P5/jx49SpU4eVK1fy0EMPGVkC3dzcSE5OJisri759+/Ljjz86PROi+oujUChumJnop85DgEyXjDgemIjuijgGUJ7ef0Ryc3OJjY1lyJAh9OvXz+a6t7e31clZamoq3t7erhSxzBw9epRjx44RGhqKn58fqamphIeH89tvv9mt/+WXX9K3b18bk4szZ86QmJhI7969XSF2hXC9urge5s+fT79+/dA0jVatWtGiRQsOHTrkBKldw6pVqwgPD6dJkyY21xyt9+3btzNz5kz8/PwYO3YsCxYsYPz48QD06dOHH374ge3bt9O2bVvatGnjsrlcy6xZswzHvfT0dPbu3cuIESNYvnz5dac6r1evnmGG0atXL3Jzc22c+xo0aEB0dDSrV6922hwKUZtmhUJxw9RFj29xEngCV21hXwNeAGagb6LVxvmPhIgwfPhwAgMD+etf/2q3zgMPPMCCBQsQEf73v/9Rv359vLy8XCxp2QgJCeHUqVOkpKSQkpKCj48Pu3bt4o477rBb/7PPPrP7iH7JkiXcf//9eHh4VLTIFcb16uJ6aN68OevWrQMgIyODw4cP07Jly3L36yocfe/geL0vWrSIX3/9lZSUFN59910ee+wx3nnnHQBOnToFQGZmJrNnz76pTyieeeYZkpOTSU5OxmKx0K9fPxYuXHhDG/nffvvNCIuXmJhIfn4+t912G6dPnyYrKwuA33//ne+++46AgACnzgNQ0TMUCkX5mSL6zfqRy0bMF5GRBaO+5rJRqxpUosgAZWXLli0CSEhIiISGhkpoaKisWLFC4uPjJT4+XkR0T/lRo0ZJy5YtJTg4WHbs2FFqv67SxaBBg+SOO+4Qd3d38fb2ljlz5lhdL+7Bv2PHDhk+fLhx7dixY9K0aVPJy8uz6feee+6RVatWWZWdPHlSvL29pW7dulK/fn3x9vaW8+fPlypjVdDFXXfdJbfffrt4eHiIt7e3rF69WkREpk+fLt7e3uLm5iZeXl5Gm7S0NOnWrZsEBweLyWSShQsXlknGynCPZGdnS6NGjSQrK8sou971Pn/+fCN6hoiu+8DAQAkMDJTPPvusTHK4QhfDhw+XBg0aGPd28f2do/VSXBczZsyQoKAgMZvN0rFjR9m2bZuIiOzZs0fCwsIkJCRETCaTvPZa0d8FR2umJHAQPUOTKhDIOiIiQnbu3HmzxVAoFA7IB3oCW9GzBQa5bNThwL+BKcCLLhm1KqGSFRShdFGE0kURShdFKF0UUaALm/AuyjxDoVCUm2rAJ0AdYBBw2WWjzgEGAi8Bs1wyqkKhUChuTVT0DIVC4RS80M98e6NvYT9wyahu6Mm9LwPPAn8C4lwyclVA07QyxQW+FfDw8FC6KEDpogiliyKULorw8PDIt1euNs0KhcJp9EKPaTEN6IaeCLviqQ58ATwIjAA80APiKQrt8BTq0XNxlC6KULooQumiCE3T7FpiKPMMhULhVN4BwoDHgXSXjVoTPfHJPcBjBe8VlZUTJ04QHR1NUFAQJpOJ6dOn29RZtGgRZrOZkJAQOnfuzJ49e4xrfn5+hISEEBYWRkREhCtFL5W4uDg8PT1t4sPOmDGDgIAATCYTL730ksP2eXl5tGvXjvvvv98oW79+PeHh4QQHBzNs2DAsFuusmDt27MDd3Z0lS5Y4dzIVxOHDh40QZGFhYdSrV49p06bZrWtvbm5ubkbbBx54wKbN6NGjjbBkVYGsrCz69+9PQEAAgYGBbN++3ep6ZmYmffv2xWw206FDB3788Uer6/bWjIgwYcIE2rRpQ2BgIB984Jpnf6VR0n0N9udSnOPHj9O1a1fMZjP33nuvVUZB0LNm+vj48OyzzxplV69e5cknn6RNmzYEBASULzuiPe9AZ7yAecAp4MdiZY2A74CfCn42LEtfKnqGQlG1OCgitUSkq4jYxgGoSC6KSKSIVBeRFS4duTJCJYgMYI/09HRJSkoSEZELFy5I69atZf/+/VZ1tm3bJufOnRMRkZUrV0qHDh2Ma8WjLpQVV+li06ZNkpSUJCaTyShbv369dO3aVS5fviwiIhkZGQ7bv/feezJ48GDp3bu3iIjk5eWJj4+PHD58WEREJk6caBWFwmKxSHR0tMTExMjixYvLJGNlWhcWi0WaNGkiKSkpdq/Zm1vt2rUd9rdjxw4ZOnRoiXWKUxl08dhjj8m//vUvERG5cuWKZGZmWl0fO3asvPrqqyIicvDgQenSpYvV9WvXjIjIvHnz5NFHHzUisZS05gpxhS5Kuq9F7M+lOP3795d///vfIiKybt06GTp0qNX10aNHy+DBg60iibzyyisyYcIEEdHvp7L87sBB9IyKPGn+N7pDfXHGA+tEpDWwruCzQqH4gxGAbtO8Dpjq0pHrAKsAM9CvQAJFZcPLy4vw8HAA6tatS2BgoE0a7M6dO9OwYUMAOnXqZHOiVFmJioqiUaNGVmXx8fGMHz+emjVrAuDp6Wm3bWpqKitWrLCKqXv27Flq1KhhxLTt1q2b1UnZjBkziI2NddhnZWfdunX4+/vj6+trc+1655aXl8eLL77IlClTnC1mhXH+/Hk2b97M8OHDAahRowYNGjSwqnPgwAG6dOkCQEBAACkpKWRkZAD21wzoa+6VV14xUolXlvVR0n3taC7FKa6L6Oholi9fblxLSkoiIyOD7t27W7WZN28ef/vb3wCoVq0at99++w3LX2GbZhHZDJy7pvhBdCd7Cn4+VFHjKxSKm0scMAD4O5Do0pHroyf4bg08AGxz6eiK6yMlJYXdu3fTsWNHh3Xmzp1LTEyM8VnTNLp370779u35+OOPXSFmuThy5AhbtmyhY8eO3HPPPezYscNuvTFjxjBlyhRjowNw++23Y7FYKAy7umTJEiM7XFpaGkuXLmXkyJEVP4kK4vPPP7eb1KOkuV2+fJmIiAg6derEsmXLjPKZM2fywAMPVNpEN/Y4duwYjRs35vHHH6ddu3aMGDGCnJwcqzqhoaF8/bVucpaYmMjx48eNzaa9NQN69sUvvviCiIgIYmJijFTTlYlr72tHcylOcV0sXbqUixcvcvbsWfLz83nhhRd49913reoXJjyZOHEi4eHhDBgwwPiH40ZwtU1zExE5WfD+N8A2X2QBmqY9qWnaTk3Tdp4+fdo10ikUCqehAR8DTYHBwAWXjn4b8D3gA8QAc4F/ANtLaqRwMdnZ2cTGxjJt2jTq1atnt86GDRuYO3cukydPNsq2bt3Krl27WLVqFbNmzWLz5s2uEvmGsFgsnDt3jv/9739MnTqVhx9+2Mbh6ttvv8XT05P27dtblWuaxueff87zzz9Phw4dqFu3Lm5uboC+yZg8eXKJm4zKzNWrV0lISGDAgAE210qa2/Hjx9m5cyeffvopY8aM4ejRo6Snp7N48WKee+45V4juNCwWC7t27WLkyJHs3r2b2rVrG1n9Chk/fjxZWVmEhYUxY8YM2rVrh5ubm8M1A3DlyhU8PDzYuXMnTzzxBHFxlSuq0LX3dUlzKc67777Lpk2baNeuHZs2bcLb2xs3Nzdmz55Nr1698PHxsapvsVhITU2lc+fO7Nq1i8jISMaOHXvjgtuz2XDWC/DD2qY565rrmWXpR9k0KxRVl60iUk1EhtyU0U+IiJfov0qqicifROS/N0WSmwGVwF7TEVevXpXu3bvLe++957DOnj17pGXLloY9rz0mTZokU6dOLXU8V+ri2LFjVjbNPXr0kPXr1xufW7ZsKadOnbJqM378ePH29hZfX19p0qSJ/OlPf5IhQ2zvmjVr1siAAQNERMTPz098fX3F19dXateuLY0bN5alS5eWKl9lWRfLli2Tbt262b1W1rkNGzZMFi9eLN9++600adLEaKNpmvj7+5cqw83WxcmTJ8XX19f4vHnzZunVq5fD+vn5+eLr6yvnz58vcc20bdtWfvnlF6NNvXr1SpWlonQxc+ZMIwNgWlqa3fu6rOu/OBcvXhRvb28REXnkkUekWU/MyAEAABxmSURBVLNm4uvrK7fddpvUrVtXxo0bJ/n5+VKrVi3DtvvXX3+VoKCgUmXGgU2zqzfNhwGvgvdewOGy9KM2zQpF1eY10W/mBTdl9Bel6NeJm4i8fVOkuBnc7A2BI/Lz8+XRRx+Vv/zlLw7rHD9+XPz9/Y00uYVkZ2fLhQsXjPeRkZE26aXtcTM3zfHx8TJx4kQRETl8+LD4+PhIfn6+w/YbNmywcoQqdOK6fPmydOnSRdatW2fTpnDzWBYqy7oYOHCgzJs3r9R6xed27tw5w6Hy9OnT0qpVKxsnUpGSnQWLUxl0cdddd8mhQ4dERP8ncOzYsVbXMzMz5cqVKyIi8vHHH8ujjz5q08e1a2bcuHEyd+5c41pERESpcrhCF47u6+JcO5finD592tgAv/zyy8Z9VZxrU4oPHDjQuGfmz58v/fv3L1VOR5tmV8dpTgCGoUelGgYsL7m6QqH4IzAB3VhiFBAJtHLp6H2BGegJUPKByhWi7FZk27ZtLFy40AgbB/D222/z66+/AvD000/z+uuvc/bsWUaNGgWAu7s7O3fuJCMjg759+wL6o9dHHnmEnj2v9Tm/eQwePJiNGzdy5swZfHx8eO2114iLiyMuLo7g4GBq1KjBJ598gqZppKenM2LECFauXFlin1OnTuXbb78lPz+fkSNHGo5QVZmcnBy+++47PvroI6Psww8/BPTv3xEHDx7kqaeeolq1auTn5zN+/HiCgoIqXN6KZMaMGQwZMoSrV6/SsmVL5s+fb6WLgwcPMmzYMDRNw2QyMXfu3FL7HD9+PEOGDOH999+nTp06zJkzp6KnUSYc3dcl8corrxAREcEDDzzAxo0b+dvf/oamaURFRTFrVumZYCdPnsyjjz7KmDFjaNy4MfPnz79h+TW5xq7KWWia9hlwL3A7kAFMApYBXwLNgePAwyJyrbOgDREREVKaUhUKReXmV/T4zf7ornk1XDr6dvSU258AXYAV6ElR/tioZAVFKF0UoXRRhNJFEUoXRRTowiY9YoWdNIuIrTusTteKGlOhUFRemqNvW2OBicDkkqs7mciC193oaVeeQncOVCljFQqFQlE2VBpthULhMvoBTwJTgPvQU227lv8DjgGvAy3RA+L9cdE0DU1T/xgAeHh4KF0UoHRRhNJFEUoXRXh4eOTbK1ebZoVC4VLeB7agJ7veCzR2uQSvAino591+wFCXS+AqpMgJ+5ZHPXouQumiCKWLIpQuitA0zW4cx6oZ3FGhUFRZagGfA5no576u/xWtAf8CotFTsGxwuQQKx5w4cYLo6GiCgoIwmUxMnz7dps7GjRupX78+YWFhhIWF8frrr98ESe0TFxeHp6cnwcHBRllycjKdOnUiLCyMiIgIEhPtp/vp2bMnDRo04P7777cqX79+PeHh4QQHBzNs2DAsFgsAy5cvx2w2G/1u3bq14ibmJESE0aNH06pVK8xmM7t27bJbb8KECTRr1ow6depYlf/6669ER0fTrl07zGazlRPl3r17iYyMxGQyERISwuXLlyt0Ls4iKyuL/v37ExAQQGBgINu3W8eTP3/+PH369CE0NBSTyfT/7d17fJTlmf/xz1XAooicWyABgSoYCAlEllNZtFVAUn+KePiJtqhF3a1Qtlqw7q+L+qrrq+i6RQtKV0WqyI/qaimsUDxQpYggCAQQRaBAKwc5CEIBoYRc+8c9DDlMSAKZeSbp9/16PS8mz2GeK/c8M1x55r6vu8xAtgMHDpCZmcmoUaPi6y699FI6deoUf4/s2rUrJb9LRaZPn05OTg5du3alb9++rFq1Kr5twoQJdOnShezsbIYNG1bu6/fyyy/HPx9uuumm+Pqf/OQnZGdnk52dzUsvvRRfP2nSJC644ALMjD179pzZL5CopEa6LSo5J1L7/NLDG/zxyCLY5+6d3b2Ru5ctWVUbkAbltKpq+/btvnz5cnd3P3DggF944YVlSoqdqiRVeVLVFgsWLPDly5eXKDk3YMAAnzt3rru7z5kzxy+55JKEx7711ls+e/bsEr/b8ePHPTMzM17Tdty4cf7ss8+6e6hTe6J03apVq7xTp06VijHK62LOnDl+xRVXeFFRkS9evNh79uyZcL/Fixf79u3by5SOu+OOO/ypp55yd/e1a9fGaxwfO3bMu3bt6gUFBe7uvmfPHi8sLKwwnnR4jwwfPtyfeeYZd3c/evSo79u3r8T2hx9+2O+99153d9+1a5c3adIkXoLO3X306NE+bNiwEmXWLrnkEl+2bFmV4khFWyxatMj37t3r7u5z586Nv/5bt271du3a+eHDh93d/frrr/epU6eWOX79+vXerVu3+HOcKMf42muv+eWXX+7Hjh3zgwcPeo8ePXz//v3u7r5ixQrfvHmzn3/++b579+5KxUk5Jed0p1lEIjEKuBK4FyiIJILGwFzgbCCfMEmpRK1Vq1bk5eUB0LBhQ7Kysti2bVvEUVVe//79adq0aYl1ZsaBA2FOzP3799O6deuEx1522WU0bNiwxLrPP/+cs846i44dOwIwYMAAXn31VQDOPffceB/UQ4cO1Yj+qLNmzWL48OGYGb179+aLL75gx44dZfbr3bt3wumwy2vLN954g5ycHHJzcwFo1qxZfObEdLZ//37++Mc/MmLECADOOussGjduXGIfM+Ovf/0r7s7Bgwdp2rQpdeuG3rXLly9n586dDBw4MOWxn46+ffvSpEkTILzGJ6YDh1BC8ssvv6SwsJDDhw8nfJ8888wzjBw5Mv4cX/va1wD46KOP6N+/P3Xr1qVBgwbk5OQwb948ALp37067du2qJX4lzSISCQOmEia8vhF4BXgIeA04nrIozo+dcTchhT+UsjNLxbZs2cLKlSvp1atXmW2LFy8mNzeXwYMHs3bt2giiq7zHH3+csWPH0qZNG8aMGcPPf/7zSh/bvHlzCgsL47VsX3nlFT799NP49pkzZ3LRRRfxne98h+eee67aY69u27Zto02bNvGfMzMzq/RH0YMPPsiLL75IZmYm+fn5TJw4EYD169djZgwaNIi8vDweffTRao89GTZv3kyLFi247bbb6N69O7fffjuHDpX8HBo1ahQff/wxrVu3pmvXrjzxxBPxOtU//vGPeeyxxxI+92233Ua3bt146KGH0rKv8pQpUxg8eDAAGRkZjBkzhrZt29KqVSsaNWqU8A+B9evXs379er75zW/Su3fveGKcm5vLvHnzOHz4MHv27OHtt98u8T6pLkqaRSQyzYFfE6YKHUYo5j4MGEQqE+eLgZeAlbGzp+7MUr6DBw9y7bXX8vjjj3PeeeeV2JaXl8ef//xnVq1axQ9/+EOGDBkSUZSVM3nyZCZMmMCnn37KhAkT4ncVK8PM+M1vfsPdd99Nz549adiwYYk7qNdccw3r1q3jd7/7HePGjUtG+GllxowZ3HrrrWzdupW5c+fyve99j6KiIgoLC3n33XeZPn067777LjNnzmT+/PlRh1uhwsJCVqxYwQ9+8ANWrlxJgwYNGD9+fIl9Xn/9dbp168b27dspKChg1KhRHDhwgKeeeor8/HwyMzPLPO/06dNZs2YNCxcuZOHChUybNi1Vv1KlvP3220yZMoVHHgnFR/ft28esWbPYvHkz27dv59ChQ7z44otljissLGTDhg288847zJgxgzvuuIMvvviCgQMHkp+fT9++fRk2bBh9+vRJyjcNSppFJFJ/I0wzUkgYFHgQeB/4fUqjuJIwa+D/AD8iiuGJctKxY8e49tprufnmmxk6dGiZ7eedd158gFh+fj7Hjh078wE+SfT888/Hf4/rr7++3IGA5enTpw8LFy5k6dKl9O/fP95Vo7j+/fuzadOmtGyHJ598Mj4grVWrViXuAG7dupWMjIxKP9eUKVO44YYbgNAuR44cic++2L9/f5o3b84555xDfn5+uYMM00lmZiaZmZnxb1Ouu+66MnFPnTqVoUOHYmZccMEFtG/fnnXr1rF48WImTZpEu3btGDNmDC+88AL33XcfQLxNGzZsyE033VTla646FX/9t2/fzurVq7n99tuZNWsWzZo1A+Ct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\n"},"metadata":{"needs_background":"light"}}]}]}