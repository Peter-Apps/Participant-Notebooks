{"cells":[{"cell_type":"markdown","metadata":{"id":"3aQZjntsK9tm"},"source":["# Parallel Plates\n","\n","This program will help you explore and model how a charged particle moves in a constant electric field. From class we have seen that charged parallel plates are a useful method for creating a constant electric field.\n","\n","The problem:\n","- How long does it take an electron to move from one charged plate to the other if the plates are 2 cm apart and maintain an electric field magnitude of 1500 N/C?\n","\n","Your first tasks:\n","- Define your constants and initial values\n","- Learn to construct a data table and tell the program to add information to that data table\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gPgYRBRPK9to"},"outputs":[],"source":["# imports some software packages we'll use\n","import pandas as pd\n","import numpy as np\n","from math import cos,sin,pi\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zxfesLoWK9ty"},"outputs":[],"source":["# constants and initial values\n","m = 1  # mass, in kg\n","q = 2 # charge in C\n","xi = 3 #initial position, m\n","ti = 4 #initial clock reading, s\n","tdelta = 5 #interval with which clock reading changes, s. You will want to play with this number a bit.\n","vx = 6 #initial velocity, m/s\n","ax = 7 #initital acceleration, m/s/s\n","E = 8 #electric field, N/C Hint: Think about the orientation of your problem. What direction does the electric field need to be"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gbZ2wsUCK9t7","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1655483917555,"user_tz":240,"elapsed":19,"user":{"displayName":"Megan Alvord","userId":"03659745622064702207"}},"outputId":"26f18b6b-6b67-4e24-ff00-8c04e0e0cbe4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   t (s)\n","0      4"],"text/html":["\n","  <div id=\"df-627b9da7-1d57-4e28-8c88-0fb4e9d1a781\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>t (s)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-627b9da7-1d57-4e28-8c88-0fb4e9d1a781')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-627b9da7-1d57-4e28-8c88-0fb4e9d1a781 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-627b9da7-1d57-4e28-8c88-0fb4e9d1a781');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}],"source":["#Now we will construct a data table. I will walk you through how to add a column for time\n","\n","t = ti #this line defines a variable t and sets it to your initial condition\n","tlist = [] #This line creates a holding place for all of your time values\n","tlist.append(t) #this line updates your list with the most recent value for t (for now, just your initial condition that you set up two code lines above)\n","\n","data = pd.DataFrame({\"t (s)\": tlist}) #this creates your data table (sometimes called a Data Frame)\n","data.head(10) #this line shows you the first 10 rows of data. We don't have ten rows of data yet so you should just see one!\n"]},{"cell_type":"code","source":["#Your turn! Using the code cell above as a guide,\n","\n","code something here     #this line defines a variable x and sets it to your initial condition\n","code something here     #This line creates a holding place for all of your position values\n","code something here     #this line updates your list with the most recent value for x\n","\n","data = pd.DataFrame({\"t (s)\": tlist, \"name your new column\": new list name here}) #this creates your data table. Modify to add your new position information\n","data.head(10) #this line shows you the first 10 rows of data. We don't have ten rows of data yet so you should just see one!"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":131},"id":"tNryPQOLasrN","executionInfo":{"status":"error","timestamp":1655483917960,"user_tz":240,"elapsed":419,"user":{"displayName":"Megan Alvord","userId":"03659745622064702207"}},"outputId":"cb04bead-93f8-4814-84ed-1a4668e20033"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-12-2697b9eb735d>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    code something here     #this line defines a variable x and sets it to your initial condition\u001b[0m\n\u001b[0m                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","source":["Great! You have a data table with one row of data. Our next step is to update our data table as the particle moves between the plates.\n","\n","The problem:\n","- How long does it take an electron to move from one charged plate to the other if the plates are 2 cm apart and maintain an electric field magnitude of 1500 N/C?"],"metadata":{"id":"GVaITPkrcXoB"}},{"cell_type":"code","source":["while x <= 9: #wait, what? This number tells the code how long to run. Go back and look at the problem. When do we \"know\" the problem is over? Change this number\n","    ax = ??? # changes in motion is called an acceleration. Using what you know about forces and electric fields, define an equation that solves for the particle's acceleration\n","    vx = ??? # because the particle is accelerating, it has a new velocity at every clock update (tdelta). Define an equation that solves for your partilce's new velocity using the variables vx, ax, and tdelta\n","    x = ??? # because the particle is moving, it has a new position at every clock update (tdelta). Define an equation that solves for your particle's new position using the variables x, vx, ax, and tdelta\n","\n","    code something here #this line updates our data table with our new position value (Hint: copy your code from the cell above!)\n","\n","    t = t + tdelta #this line updates our t value to the new clock time\n","    code something here #this line updates our data table with our new time value (Hint: copy a code from a previous cell )\n","\n","#whew! That was a lot. Let's printout our data table to see if it's working\n","data.head(10)"],"metadata":{"id":"0Xxg1cXPaI5Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"71rubSqXK9uA"},"outputs":[],"source":["#Now it is time to plot! Construct a position vs time graph\n","\n","plt.plot(data['t (s)'],data['write here what you named your column for position'],linestyle='--', marker='o', color='b', markersize=10)\n","\n","#plt.table(cellText=data.values.round(3), colLabels=data.columns, loc='right')\n","plt.xlabel('label me!')\n","plt.ylabel('labels are cool')\n","plt.title('Something here?')\n","plt.grid(False)\n","plt.show()"]}],"metadata":{"colab":{"provenance":[{"file_id":"1ONNb5bF9sLgcVHFnmFXKXkM-SO9ZJxma","timestamp":1694384756979},{"file_id":"1KyOH9L0QDMJLpqShhrx0yHGkPO3Zif6t","timestamp":1655822243904},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/main/projectile_in_air.ipynb","timestamp":1655141045761}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"nbformat":4,"nbformat_minor":0}