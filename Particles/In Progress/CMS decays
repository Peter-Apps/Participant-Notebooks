{"cells":[{"cell_type":"markdown","source":["# Teacher notes  \n","I will teach IB Physics for the 1st time next year.  When I get to Topic 7: Atomic, nuclear and particle physics, I will use the leptonic decay code to introduce them to particle physics from a coding perspective.  I truly believe it will change lives.  My goal is to increase student's interest in coding.\n","\n"],"metadata":{"id":"7LX0eqHxCsKh"}},{"cell_type":"markdown","metadata":{"id":"zfjMica8AOfk"},"source":["# Create a plot showing Leptonic Decays\n","\n","Your task is to:  \n","- Create an invariant mass plot using one of the dilepton data sets:\n","   1.   https://raw.githubusercontent.com/QuarkNet-HEP/coding-camp/main/data/Double_Electron_Run2011A.csv\n","   2. https://raw.githubusercontent.com/QuarkNet-HEP/coding-camp/main/data/Single_Electron_Run2011A.csv\n","- You may observe evidence for the [J/$\\Psi$](https://en.wikipedia.org/wiki/J/psi_meson), [Upsilon](https://en.wikipedia.org/wiki/Upsilon_meson) ($\\Upsilon$), or [Z boson](https://en.wikipedia.org/wiki/W_and_Z_bosons).  \n","- Once you've created a mass plot, work with your partner to conduct a further analysis.  \n","- Share your analysis using the claim, evidence, reasoning (CER) format.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"odsYrYVOZgca"},"outputs":[],"source":["# We've included some links and potential tools, but the rest is up to you! Put your code here.\n","\n","# Pro tip: programmers often copy/paste code from their previous work"]},{"cell_type":"markdown","source":["You must upload needed software packages to have success."],"metadata":{"id":"dBPXmRN_Xpi8"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"NiDzd_bwjv0Z"},"outputs":[],"source":["# imports some software packages we'll use\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":["Below you will copy and paste the raw data"],"metadata":{"id":"rzLhN2VXX84c"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"WMTlKXuwjv0j","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1718804812098,"user_tz":300,"elapsed":2001,"user":{"displayName":"Tracie Schroeder","userId":"13810655036895515303"}},"outputId":"4cf41c47-2791-4ab4-b2d1-62db4c16fa1e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Run      Event        E1       px1        py1       pz1       pt1  \\\n","0  147115  366639895  58.71410  -7.31132  10.531000 -57.29740  12.82020   \n","1  147115  366704169   6.61188  -4.15213  -0.579855  -5.11278   4.19242   \n","2  147115  367112316  25.54190 -11.48090   2.041680  22.72460  11.66100   \n","3  147115  366952149  65.39590   7.51214  11.887100  63.86620  14.06190   \n","4  147115  366523212  61.45040   2.95284 -14.622700 -59.61210  14.91790   \n","5  147115  366663412   6.39616  -5.45672  -2.090680  -2.60078   5.84352   \n","6  147115  366639101  84.50580   8.82436  10.578900  83.37530  13.77610   \n","7  147115  367133576  77.00570  10.00290   9.175450 -75.80000  13.57370   \n","8  147115  368639137   9.68787   1.11192   2.050640  -9.40284   2.33270   \n","9  147115  367825395  27.88120  11.93900 -18.346200  17.26960  21.88880   \n","\n","       eta1      phi1  Q1        E2        px2       py2       pz2       pt2  \\\n","0 -2.202670  2.177660   1  11.28360  -1.032340  -1.88066 -11.07780   2.14537   \n","1 -1.028420 -3.002840  -1  17.14920 -11.713500   5.04474  11.46470  12.75360   \n","2  1.420480  2.965600   1  15.82030  -1.472800   2.25895 -15.58880   2.69667   \n","3  2.218380  1.007210   1  25.12730   4.087860   2.59641  24.65630   4.84272   \n","4 -2.093750 -1.371540  -1  13.88710  -0.277757  -2.42560 -13.67080   2.44145   \n","5 -0.431551 -2.775710  -1  21.38650  15.169800  -8.87030 -12.18930  17.57280   \n","6  2.500320  0.875576   1  12.67840  -1.134460  -3.20939 -12.21280   3.40400   \n","7 -2.421030  0.742282   1   9.11623  -1.722950  -1.48674  -8.82761   2.27574   \n","8 -2.102180  1.073940   1  63.45970  -1.858440  12.79460 -62.12870  12.92890   \n","9  0.724032 -0.993887   1  12.92180  -5.026300  11.60260   2.66263  12.64450   \n","\n","       eta2      phi2  Q2  \n","0 -2.344030 -2.072810  -1  \n","1  0.808077  2.734920   1  \n","2 -2.455080  2.148570   1  \n","3  2.330210  0.565865  -1  \n","4 -2.423700 -1.684810  -1  \n","5 -0.647450 -0.529120  -1  \n","6 -1.989560 -1.910570  -1  \n","7 -2.064940 -2.429650   1  \n","8 -2.273550  1.715040   1  \n","9  0.209050  1.979600  -1  "],"text/html":["\n","  <div id=\"df-98bb7702-e65c-4ca3-b397-c92a105cc224\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Run</th>\n","      <th>Event</th>\n","      <th>E1</th>\n","      <th>px1</th>\n","      <th>py1</th>\n","      <th>pz1</th>\n","      <th>pt1</th>\n","      <th>eta1</th>\n","      <th>phi1</th>\n","      <th>Q1</th>\n","      <th>E2</th>\n","      <th>px2</th>\n","      <th>py2</th>\n","      <th>pz2</th>\n","      <th>pt2</th>\n","      <th>eta2</th>\n","      <th>phi2</th>\n","      <th>Q2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147115</td>\n","      <td>366639895</td>\n","      <td>58.71410</td>\n","      <td>-7.31132</td>\n","      <td>10.531000</td>\n","      <td>-57.29740</td>\n","      <td>12.82020</td>\n","      <td>-2.202670</td>\n","      <td>2.177660</td>\n","      <td>1</td>\n","      <td>11.28360</td>\n","      <td>-1.032340</td>\n","      <td>-1.88066</td>\n","      <td>-11.07780</td>\n","      <td>2.14537</td>\n","      <td>-2.344030</td>\n","      <td>-2.072810</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>147115</td>\n","      <td>366704169</td>\n","      <td>6.61188</td>\n","      <td>-4.15213</td>\n","      <td>-0.579855</td>\n","      <td>-5.11278</td>\n","      <td>4.19242</td>\n","      <td>-1.028420</td>\n","      <td>-3.002840</td>\n","      <td>-1</td>\n","      <td>17.14920</td>\n","      <td>-11.713500</td>\n","      <td>5.04474</td>\n","      <td>11.46470</td>\n","      <td>12.75360</td>\n","      <td>0.808077</td>\n","      <td>2.734920</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>147115</td>\n","      <td>367112316</td>\n","      <td>25.54190</td>\n","      <td>-11.48090</td>\n","      <td>2.041680</td>\n","      <td>22.72460</td>\n","      <td>11.66100</td>\n","      <td>1.420480</td>\n","      <td>2.965600</td>\n","      <td>1</td>\n","      <td>15.82030</td>\n","      <td>-1.472800</td>\n","      <td>2.25895</td>\n","      <td>-15.58880</td>\n","      <td>2.69667</td>\n","      <td>-2.455080</td>\n","      <td>2.148570</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>147115</td>\n","      <td>366952149</td>\n","      <td>65.39590</td>\n","      <td>7.51214</td>\n","      <td>11.887100</td>\n","      <td>63.86620</td>\n","      <td>14.06190</td>\n","      <td>2.218380</td>\n","      <td>1.007210</td>\n","      <td>1</td>\n","      <td>25.12730</td>\n","      <td>4.087860</td>\n","      <td>2.59641</td>\n","      <td>24.65630</td>\n","      <td>4.84272</td>\n","      <td>2.330210</td>\n","      <td>0.565865</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>147115</td>\n","      <td>366523212</td>\n","      <td>61.45040</td>\n","      <td>2.95284</td>\n","      <td>-14.622700</td>\n","      <td>-59.61210</td>\n","      <td>14.91790</td>\n","      <td>-2.093750</td>\n","      <td>-1.371540</td>\n","      <td>-1</td>\n","      <td>13.88710</td>\n","      <td>-0.277757</td>\n","      <td>-2.42560</td>\n","      <td>-13.67080</td>\n","      <td>2.44145</td>\n","      <td>-2.423700</td>\n","      <td>-1.684810</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>147115</td>\n","      <td>366663412</td>\n","      <td>6.39616</td>\n","      <td>-5.45672</td>\n","      <td>-2.090680</td>\n","      <td>-2.60078</td>\n","      <td>5.84352</td>\n","      <td>-0.431551</td>\n","      <td>-2.775710</td>\n","      <td>-1</td>\n","      <td>21.38650</td>\n","      <td>15.169800</td>\n","      <td>-8.87030</td>\n","      <td>-12.18930</td>\n","      <td>17.57280</td>\n","      <td>-0.647450</td>\n","      <td>-0.529120</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>147115</td>\n","      <td>366639101</td>\n","      <td>84.50580</td>\n","      <td>8.82436</td>\n","      <td>10.578900</td>\n","      <td>83.37530</td>\n","      <td>13.77610</td>\n","      <td>2.500320</td>\n","      <td>0.875576</td>\n","      <td>1</td>\n","      <td>12.67840</td>\n","      <td>-1.134460</td>\n","      <td>-3.20939</td>\n","      <td>-12.21280</td>\n","      <td>3.40400</td>\n","      <td>-1.989560</td>\n","      <td>-1.910570</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>147115</td>\n","      <td>367133576</td>\n","      <td>77.00570</td>\n","      <td>10.00290</td>\n","      <td>9.175450</td>\n","      <td>-75.80000</td>\n","      <td>13.57370</td>\n","      <td>-2.421030</td>\n","      <td>0.742282</td>\n","      <td>1</td>\n","      <td>9.11623</td>\n","      <td>-1.722950</td>\n","      <td>-1.48674</td>\n","      <td>-8.82761</td>\n","      <td>2.27574</td>\n","      <td>-2.064940</td>\n","      <td>-2.429650</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>147115</td>\n","      <td>368639137</td>\n","      <td>9.68787</td>\n","      <td>1.11192</td>\n","      <td>2.050640</td>\n","      <td>-9.40284</td>\n","      <td>2.33270</td>\n","      <td>-2.102180</td>\n","      <td>1.073940</td>\n","      <td>1</td>\n","      <td>63.45970</td>\n","      <td>-1.858440</td>\n","      <td>12.79460</td>\n","      <td>-62.12870</td>\n","      <td>12.92890</td>\n","      <td>-2.273550</td>\n","      <td>1.715040</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>147115</td>\n","      <td>367825395</td>\n","      <td>27.88120</td>\n","      <td>11.93900</td>\n","      <td>-18.346200</td>\n","      <td>17.26960</td>\n","      <td>21.88880</td>\n","      <td>0.724032</td>\n","      <td>-0.993887</td>\n","      <td>1</td>\n","      <td>12.92180</td>\n","      <td>-5.026300</td>\n","      <td>11.60260</td>\n","      <td>2.66263</td>\n","      <td>12.64450</td>\n","      <td>0.209050</td>\n","      <td>1.979600</td>\n","      <td>-1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98bb7702-e65c-4ca3-b397-c92a105cc224')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-98bb7702-e65c-4ca3-b397-c92a105cc224 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-98bb7702-e65c-4ca3-b397-c92a105cc224');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d11cbe4-3899-4a65-b925-fde6897ed0b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d11cbe4-3899-4a65-b925-fde6897ed0b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d11cbe4-3899-4a65-b925-fde6897ed0b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 100000,\n  \"fields\": [\n    {\n      \"column\": \"Run\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 920,\n        \"min\": 146511,\n        \"max\": 149182,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          149182,\n          147926,\n          147115\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403770324,\n        \"min\": 6414,\n        \"max\": 1791247487,\n        \"num_unique_values\": 99976,\n        \"samples\": [\n          315905163,\n          344631734,\n          119101199\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41.21620332041292,\n        \"min\": 0.377928,\n        \"max\": 850.602,\n        \"num_unique_values\": 95669,\n        \"samples\": [\n          49.5977,\n          14.1888,\n          16.5243\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.404975701171853,\n        \"min\": -250.587,\n        \"max\": 134.539,\n        \"num_unique_values\": 97213,\n        \"samples\": [\n          -1.0294,\n          33.9593,\n          1.30918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"py1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.470281354897454,\n        \"min\": -126.079,\n        \"max\": 147.467,\n        \"num_unique_values\": 97153,\n        \"samples\": [\n          -3.79776,\n          2.72106,\n          -6.43404\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pz1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.603652478757645,\n        \"min\": -840.987,\n        \"max\": 760.096,\n        \"num_unique_values\": 98152,\n        \"samples\": [\n          41.2374,\n          -5.7418,\n          -11.0284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pt1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.388740449491216,\n        \"min\": 0.219629,\n        \"max\": 265.578,\n        \"num_unique_values\": 91788,\n        \"samples\": [\n          36.2561,\n          2.25504,\n          10.6363\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"eta1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.462136923328741,\n        \"min\": -4.16538,\n        \"max\": 2.62297,\n        \"num_unique_values\": 94037,\n        \"samples\": [\n          -0.561527,\n          -2.34976,\n          1.01199\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phi1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7995618518873688,\n        \"min\": -3.14158,\n        \"max\": 3.14142,\n        \"num_unique_values\": 94641,\n        \"samples\": [\n          -0.0790799,\n          0.306309,\n          3.13318\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46.75113155425967,\n        \"min\": 0.4725,\n        \"max\": 948.375,\n        \"num_unique_values\": 95425,\n        \"samples\": [\n          16.1399,\n          94.3207\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.127404299510882,\n        \"min\": -233.73,\n        \"max\": 227.33,\n        \"num_unique_values\": 97392,\n        \"samples\": [\n          15.9112,\n          2.17761\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"py2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.168867274076572,\n        \"min\": -145.651,\n        \"max\": 166.283,\n        \"num_unique_values\": 97410,\n        \"samples\": [\n          2.87363,\n          2.69038\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pz2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.430039526470246,\n        \"min\": -655.396,\n        \"max\": 935.558,\n        \"num_unique_values\": 97924,\n        \"samples\": [\n          -7.02936,\n          9.53728\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pt2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.460548515036301,\n        \"min\": 0.0266508,\n        \"max\": 281.654,\n        \"num_unique_values\": 92789,\n        \"samples\": [\n          2.29892,\n          2.0873\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"eta2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.738033039300773,\n        \"min\": -7.06479,\n        \"max\": 3.06055,\n        \"num_unique_values\": 89752,\n        \"samples\": [\n          1.7676,\n          -2.26011\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phi2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.817031132364081,\n        \"min\": -3.14158,\n        \"max\": 3.14129,\n        \"num_unique_values\": 94494,\n        \"samples\": [\n          0.638998,\n          2.3769\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Q2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          -1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}],"source":["\n","data = pd.read_csv('https://raw.githubusercontent.com/QuarkNet-HEP/coding-camp/main/data/Double_Electron_Run2011A.csv') #copy/paste url link here showing the raw data\n","# units in these files are energy, E (in GeV) and momentum, p (in GeV/c)\n","\n","# The .head(n) command displays the first n rows of a file.\n","data.head(10) #You can change the number to show more data"]},{"cell_type":"markdown","source":["In this part calculating the total momentum for particle #1"],"metadata":{"id":"RK3kbLbiYLTz"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"1sgk3CLRjv1A","colab":{"base_uri":"https://localhost:8080/","height":458},"executionInfo":{"status":"ok","timestamp":1718804812865,"user_tz":300,"elapsed":769,"user":{"displayName":"Tracie Schroeder","userId":"13810655036895515303"}},"outputId":"f6dee0d7-286e-4d14-96fa-4b1837163b64"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pandas/core/arraylike.py:396: RuntimeWarning: invalid value encountered in sqrt\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n"]},{"output_type":"execute_result","data":{"text/plain":["          Run      Event        E1        px1        py1       pz1       pt1  \\\n","0      147115  366639895  58.71410  -7.311320  10.531000 -57.29740  12.82020   \n","1      147115  366704169   6.61188  -4.152130  -0.579855  -5.11278   4.19242   \n","2      147115  367112316  25.54190 -11.480900   2.041680  22.72460  11.66100   \n","3      147115  366952149  65.39590   7.512140  11.887100  63.86620  14.06190   \n","4      147115  366523212  61.45040   2.952840 -14.622700 -59.61210  14.91790   \n","...       ...        ...       ...        ...        ...       ...       ...   \n","99995  146511  522575834  12.31310 -10.658000   5.164440   3.36858  11.84330   \n","99996  146511  522786431  18.46420   7.854990  15.133000  -7.08659  17.05020   \n","99997  146511  522906124   4.18566  -3.273500  -0.308507  -2.59013   3.28801   \n","99998  146511  523243830  54.46220  11.352600  11.880900  51.92400  16.43280   \n","99999  146511  524172389   7.64000   0.886162   5.478900  -5.25033   5.55010   \n","\n","           eta1      phi1  Q1        E2        px2      py2        pz2  \\\n","0     -2.202670  2.177660   1  11.28360  -1.032340 -1.88066 -11.077800   \n","1     -1.028420 -3.002840  -1  17.14920 -11.713500  5.04474  11.464700   \n","2      1.420480  2.965600   1  15.82030  -1.472800  2.25895 -15.588800   \n","3      2.218380  1.007210   1  25.12730   4.087860  2.59641  24.656300   \n","4     -2.093750 -1.371540  -1  13.88710  -0.277757 -2.42560 -13.670800   \n","...         ...       ...  ..       ...        ...      ...        ...   \n","99995  0.280727  2.690370  -1   1.80181   0.668609 -1.58437   0.537805   \n","99996 -0.404510  1.092010   1  14.69110  -1.418020 -2.28117 -14.443500   \n","99997 -0.723075 -3.047630   1  72.81740 -11.074900 -9.28179 -71.369300   \n","99998  1.867800  0.808132  -1   8.58671   0.378009  3.07828   8.007050   \n","99999 -0.842662  1.410440   1  52.10880  16.807500 -4.60510  49.108400   \n","\n","            pt2      eta2      phi2  Q2    totalp1     mass1  \n","0       2.14537 -2.344030 -2.072810  -1  58.714133  0.000000  \n","1      12.75360  0.808077  2.734920   1   6.611878  0.004738  \n","2       2.69667 -2.455080  2.148570   1  25.541867  0.041090  \n","3       4.84272  2.330210  0.565865  -1  65.395924  0.000000  \n","4       2.44145 -2.423700 -1.684810  -1  61.450347  0.081083  \n","...         ...       ...       ...  ..        ...       ...  \n","99995   1.71967  0.307851 -1.171470   1  12.313072  0.026380  \n","99996   2.68598 -2.383880 -2.126960   1  18.464244  0.000000  \n","99997  14.45010 -2.300410 -2.444050  -1   4.185660  0.000000  \n","99998   3.10141  1.677170  1.448610   1  54.462272  0.000000  \n","99999  17.42700  1.759250 -0.267427  -1   7.640000  0.002567  \n","\n","[100000 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-e1b2b3d1-91e9-4615-b447-1ce6c67471f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Run</th>\n","      <th>Event</th>\n","      <th>E1</th>\n","      <th>px1</th>\n","      <th>py1</th>\n","      <th>pz1</th>\n","      <th>pt1</th>\n","      <th>eta1</th>\n","      <th>phi1</th>\n","      <th>Q1</th>\n","      <th>E2</th>\n","      <th>px2</th>\n","      <th>py2</th>\n","      <th>pz2</th>\n","      <th>pt2</th>\n","      <th>eta2</th>\n","      <th>phi2</th>\n","      <th>Q2</th>\n","      <th>totalp1</th>\n","      <th>mass1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147115</td>\n","      <td>366639895</td>\n","      <td>58.71410</td>\n","      <td>-7.311320</td>\n","      <td>10.531000</td>\n","      <td>-57.29740</td>\n","      <td>12.82020</td>\n","      <td>-2.202670</td>\n","      <td>2.177660</td>\n","      <td>1</td>\n","      <td>11.28360</td>\n","      <td>-1.032340</td>\n","      <td>-1.88066</td>\n","      <td>-11.077800</td>\n","      <td>2.14537</td>\n","      <td>-2.344030</td>\n","      <td>-2.072810</td>\n","      <td>-1</td>\n","      <td>58.714133</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>147115</td>\n","      <td>366704169</td>\n","      <td>6.61188</td>\n","      <td>-4.152130</td>\n","      <td>-0.579855</td>\n","      <td>-5.11278</td>\n","      <td>4.19242</td>\n","      <td>-1.028420</td>\n","      <td>-3.002840</td>\n","      <td>-1</td>\n","      <td>17.14920</td>\n","      <td>-11.713500</td>\n","      <td>5.04474</td>\n","      <td>11.464700</td>\n","      <td>12.75360</td>\n","      <td>0.808077</td>\n","      <td>2.734920</td>\n","      <td>1</td>\n","      <td>6.611878</td>\n","      <td>0.004738</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>147115</td>\n","      <td>367112316</td>\n","      <td>25.54190</td>\n","      <td>-11.480900</td>\n","      <td>2.041680</td>\n","      <td>22.72460</td>\n","      <td>11.66100</td>\n","      <td>1.420480</td>\n","      <td>2.965600</td>\n","      <td>1</td>\n","      <td>15.82030</td>\n","      <td>-1.472800</td>\n","      <td>2.25895</td>\n","      <td>-15.588800</td>\n","      <td>2.69667</td>\n","      <td>-2.455080</td>\n","      <td>2.148570</td>\n","      <td>1</td>\n","      <td>25.541867</td>\n","      <td>0.041090</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>147115</td>\n","      <td>366952149</td>\n","      <td>65.39590</td>\n","      <td>7.512140</td>\n","      <td>11.887100</td>\n","      <td>63.86620</td>\n","      <td>14.06190</td>\n","      <td>2.218380</td>\n","      <td>1.007210</td>\n","      <td>1</td>\n","      <td>25.12730</td>\n","      <td>4.087860</td>\n","      <td>2.59641</td>\n","      <td>24.656300</td>\n","      <td>4.84272</td>\n","      <td>2.330210</td>\n","      <td>0.565865</td>\n","      <td>-1</td>\n","      <td>65.395924</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>147115</td>\n","      <td>366523212</td>\n","      <td>61.45040</td>\n","      <td>2.952840</td>\n","      <td>-14.622700</td>\n","      <td>-59.61210</td>\n","      <td>14.91790</td>\n","      <td>-2.093750</td>\n","      <td>-1.371540</td>\n","      <td>-1</td>\n","      <td>13.88710</td>\n","      <td>-0.277757</td>\n","      <td>-2.42560</td>\n","      <td>-13.670800</td>\n","      <td>2.44145</td>\n","      <td>-2.423700</td>\n","      <td>-1.684810</td>\n","      <td>-1</td>\n","      <td>61.450347</td>\n","      <td>0.081083</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>146511</td>\n","      <td>522575834</td>\n","      <td>12.31310</td>\n","      <td>-10.658000</td>\n","      <td>5.164440</td>\n","      <td>3.36858</td>\n","      <td>11.84330</td>\n","      <td>0.280727</td>\n","      <td>2.690370</td>\n","      <td>-1</td>\n","      <td>1.80181</td>\n","      <td>0.668609</td>\n","      <td>-1.58437</td>\n","      <td>0.537805</td>\n","      <td>1.71967</td>\n","      <td>0.307851</td>\n","      <td>-1.171470</td>\n","      <td>1</td>\n","      <td>12.313072</td>\n","      <td>0.026380</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>146511</td>\n","      <td>522786431</td>\n","      <td>18.46420</td>\n","      <td>7.854990</td>\n","      <td>15.133000</td>\n","      <td>-7.08659</td>\n","      <td>17.05020</td>\n","      <td>-0.404510</td>\n","      <td>1.092010</td>\n","      <td>1</td>\n","      <td>14.69110</td>\n","      <td>-1.418020</td>\n","      <td>-2.28117</td>\n","      <td>-14.443500</td>\n","      <td>2.68598</td>\n","      <td>-2.383880</td>\n","      <td>-2.126960</td>\n","      <td>1</td>\n","      <td>18.464244</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>146511</td>\n","      <td>522906124</td>\n","      <td>4.18566</td>\n","      <td>-3.273500</td>\n","      <td>-0.308507</td>\n","      <td>-2.59013</td>\n","      <td>3.28801</td>\n","      <td>-0.723075</td>\n","      <td>-3.047630</td>\n","      <td>1</td>\n","      <td>72.81740</td>\n","      <td>-11.074900</td>\n","      <td>-9.28179</td>\n","      <td>-71.369300</td>\n","      <td>14.45010</td>\n","      <td>-2.300410</td>\n","      <td>-2.444050</td>\n","      <td>-1</td>\n","      <td>4.185660</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>146511</td>\n","      <td>523243830</td>\n","      <td>54.46220</td>\n","      <td>11.352600</td>\n","      <td>11.880900</td>\n","      <td>51.92400</td>\n","      <td>16.43280</td>\n","      <td>1.867800</td>\n","      <td>0.808132</td>\n","      <td>-1</td>\n","      <td>8.58671</td>\n","      <td>0.378009</td>\n","      <td>3.07828</td>\n","      <td>8.007050</td>\n","      <td>3.10141</td>\n","      <td>1.677170</td>\n","      <td>1.448610</td>\n","      <td>1</td>\n","      <td>54.462272</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>146511</td>\n","      <td>524172389</td>\n","      <td>7.64000</td>\n","      <td>0.886162</td>\n","      <td>5.478900</td>\n","      <td>-5.25033</td>\n","      <td>5.55010</td>\n","      <td>-0.842662</td>\n","      <td>1.410440</td>\n","      <td>1</td>\n","      <td>52.10880</td>\n","      <td>16.807500</td>\n","      <td>-4.60510</td>\n","      <td>49.108400</td>\n","      <td>17.42700</td>\n","      <td>1.759250</td>\n","      <td>-0.267427</td>\n","      <td>-1</td>\n","      <td>7.640000</td>\n","      <td>0.002567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1b2b3d1-91e9-4615-b447-1ce6c67471f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1b2b3d1-91e9-4615-b447-1ce6c67471f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1b2b3d1-91e9-4615-b447-1ce6c67471f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-efccc9b2-8b10-4e4a-aa97-e58082fef060\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-efccc9b2-8b10-4e4a-aa97-e58082fef060')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-efccc9b2-8b10-4e4a-aa97-e58082fef060 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 100000,\n  \"fields\": [\n    {\n      \"column\": \"Run\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 920,\n        \"min\": 146511,\n        \"max\": 149182,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          149182,\n          147926,\n          147115\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403770324,\n        \"min\": 6414,\n        \"max\": 1791247487,\n        \"num_unique_values\": 99976,\n        \"samples\": [\n          315905163,\n          344631734,\n          119101199\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41.21620332041292,\n        \"min\": 0.377928,\n        \"max\": 850.602,\n        \"num_unique_values\": 95669,\n        \"samples\": [\n          49.5977,\n          14.1888,\n          16.5243\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.404975701171853,\n        \"min\": -250.587,\n        \"max\": 134.539,\n        \"num_unique_values\": 97213,\n        \"samples\": [\n          -1.0294,\n          33.9593,\n          1.30918\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"py1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.470281354897454,\n        \"min\": -126.079,\n        \"max\": 147.467,\n        \"num_unique_values\": 97153,\n        \"samples\": [\n          -3.79776,\n          2.72106,\n          -6.43404\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pz1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.603652478757645,\n        \"min\": -840.987,\n        \"max\": 760.096,\n        \"num_unique_values\": 98152,\n        \"samples\": [\n          41.2374,\n          -5.7418,\n          -11.0284\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pt1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.388740449491216,\n        \"min\": 0.219629,\n        \"max\": 265.578,\n        \"num_unique_values\": 91788,\n        \"samples\": [\n          36.2561,\n          2.25504,\n          10.6363\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"eta1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.462136923328741,\n        \"min\": -4.16538,\n        \"max\": 2.62297,\n        \"num_unique_values\": 94037,\n        \"samples\": [\n          -0.561527,\n          -2.34976,\n          1.01199\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phi1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7995618518873688,\n        \"min\": -3.14158,\n        \"max\": 3.14142,\n        \"num_unique_values\": 94641,\n        \"samples\": [\n          -0.0790799,\n          0.306309,\n          3.13318\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Q1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46.75113155425967,\n        \"min\": 0.4725,\n        \"max\": 948.375,\n        \"num_unique_values\": 95425,\n        \"samples\": [\n          16.1399,\n          94.3207\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"px2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.127404299510882,\n        \"min\": -233.73,\n        \"max\": 227.33,\n        \"num_unique_values\": 97392,\n        \"samples\": [\n          15.9112,\n          2.17761\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"py2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.168867274076572,\n        \"min\": -145.651,\n        \"max\": 166.283,\n        \"num_unique_values\": 97410,\n        \"samples\": [\n          2.87363,\n          2.69038\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pz2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.430039526470246,\n        \"min\": -655.396,\n        \"max\": 935.558,\n        \"num_unique_values\": 97924,\n        \"samples\": [\n          -7.02936,\n          9.53728\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pt2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.460548515036301,\n        \"min\": 0.0266508,\n        \"max\": 281.654,\n        \"num_unique_values\": 92789,\n        \"samples\": [\n          2.29892,\n          2.0873\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"eta2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.738033039300773,\n        \"min\": -7.06479,\n        \"max\": 3.06055,\n        \"num_unique_values\": 89752,\n        \"samples\": [\n          1.7676,\n          -2.26011\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"phi2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.817031132364081,\n        \"min\": -3.14158,\n        \"max\": 3.14129,\n        \"num_unique_values\": 94494,\n        \"samples\": [\n          0.638998,\n          2.3769\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Q2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          -1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totalp1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41.21620252255112,\n        \"min\": 0.37792872271104244,\n        \"max\": 850.6018708842346,\n        \"num_unique_values\": 99977,\n        \"samples\": [\n          12.338266659525113,\n          113.08965258913878\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mass1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.061461860340652125,\n        \"min\": 0.0,\n        \"max\": 0.9179353789721416,\n        \"num_unique_values\": 50039,\n        \"samples\": [\n          0.006264207850214973,\n          0.03814610727118355\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["data['totalp1']=np.sqrt(data['px1']**2+data['py1']**2+data['pz1']**2) #momentum formula for particle 1\n","data['mass1'] = np.sqrt(data['E1']**2 - data['totalp1']**2) #mass formula for particle 1\n","data = data.fillna(0) # fills in a zero for any imaginary values your caluclation might produce\n","data.head(100000)"]},{"cell_type":"markdown","source":["In this part calculating the total momentum for particle #2"],"metadata":{"id":"vSJ6bRZUAw8C"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"executionInfo":{"status":"ok","timestamp":1718804813089,"user_tz":300,"elapsed":226,"user":{"displayName":"Tracie Schroeder","userId":"13810655036895515303"}},"outputId":"6a71b5cd-85f8-42e3-8fc8-241e4ca282a1","id":"wzNwUOLj_3nB"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pandas/core/arraylike.py:396: RuntimeWarning: invalid value encountered in sqrt\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n"]},{"output_type":"execute_result","data":{"text/plain":["          Run      Event        E1        px1        py1       pz1       pt1  \\\n","0      147115  366639895  58.71410  -7.311320  10.531000 -57.29740  12.82020   \n","1      147115  366704169   6.61188  -4.152130  -0.579855  -5.11278   4.19242   \n","2      147115  367112316  25.54190 -11.480900   2.041680  22.72460  11.66100   \n","3      147115  366952149  65.39590   7.512140  11.887100  63.86620  14.06190   \n","4      147115  366523212  61.45040   2.952840 -14.622700 -59.61210  14.91790   \n","...       ...        ...       ...        ...        ...       ...       ...   \n","99995  146511  522575834  12.31310 -10.658000   5.164440   3.36858  11.84330   \n","99996  146511  522786431  18.46420   7.854990  15.133000  -7.08659  17.05020   \n","99997  146511  522906124   4.18566  -3.273500  -0.308507  -2.59013   3.28801   \n","99998  146511  523243830  54.46220  11.352600  11.880900  51.92400  16.43280   \n","99999  146511  524172389   7.64000   0.886162   5.478900  -5.25033   5.55010   \n","\n","           eta1      phi1  Q1  ...      py2        pz2       pt2      eta2  \\\n","0     -2.202670  2.177660   1  ... -1.88066 -11.077800   2.14537 -2.344030   \n","1     -1.028420 -3.002840  -1  ...  5.04474  11.464700  12.75360  0.808077   \n","2      1.420480  2.965600   1  ...  2.25895 -15.588800   2.69667 -2.455080   \n","3      2.218380  1.007210   1  ...  2.59641  24.656300   4.84272  2.330210   \n","4     -2.093750 -1.371540  -1  ... -2.42560 -13.670800   2.44145 -2.423700   \n","...         ...       ...  ..  ...      ...        ...       ...       ...   \n","99995  0.280727  2.690370  -1  ... -1.58437   0.537805   1.71967  0.307851   \n","99996 -0.404510  1.092010   1  ... -2.28117 -14.443500   2.68598 -2.383880   \n","99997 -0.723075 -3.047630   1  ... -9.28179 -71.369300  14.45010 -2.300410   \n","99998  1.867800  0.808132  -1  ...  3.07828   8.007050   3.10141  1.677170   \n","99999 -0.842662  1.410440   1  ... -4.60510  49.108400  17.42700  1.759250   \n","\n","           phi2  Q2    totalp1     mass1    totalp2     mass2  \n","0     -2.072810  -1  58.714133  0.000000  11.283628  0.000000  \n","1      2.734920   1   6.611878  0.004738  17.149193  0.015187  \n","2      2.148570   1  25.541867  0.041090  15.820325  0.000000  \n","3      0.565865  -1  65.395924  0.000000  25.127377  0.000000  \n","4     -1.684810  -1  61.450347  0.081083  13.887097  0.009458  \n","...         ...  ..        ...       ...        ...       ...  \n","99995 -1.171470   1  12.313072  0.026380   1.801805  0.004332  \n","99996 -2.126960   1  18.464244  0.000000  14.691127  0.000000  \n","99997 -2.444050  -1   4.185660  0.000000  72.817457  0.000000  \n","99998  1.448610   1  54.462272  0.000000   8.586708  0.006353  \n","99999 -0.267427  -1   7.640000  0.002567  52.108866  0.000000  \n","\n","[100000 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-2d4d78d9-8472-4e48-bd8b-c1767784e436\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Run</th>\n","      <th>Event</th>\n","      <th>E1</th>\n","      <th>px1</th>\n","      <th>py1</th>\n","      <th>pz1</th>\n","      <th>pt1</th>\n","      <th>eta1</th>\n","      <th>phi1</th>\n","      <th>Q1</th>\n","      <th>...</th>\n","      <th>py2</th>\n","      <th>pz2</th>\n","      <th>pt2</th>\n","      <th>eta2</th>\n","      <th>phi2</th>\n","      <th>Q2</th>\n","      <th>totalp1</th>\n","      <th>mass1</th>\n","      <th>totalp2</th>\n","      <th>mass2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147115</td>\n","      <td>366639895</td>\n","      <td>58.71410</td>\n","      <td>-7.311320</td>\n","      <td>10.531000</td>\n","      <td>-57.29740</td>\n","      <td>12.82020</td>\n","      <td>-2.202670</td>\n","      <td>2.177660</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-1.88066</td>\n","      <td>-11.077800</td>\n","      <td>2.14537</td>\n","      <td>-2.344030</td>\n","      <td>-2.072810</td>\n","      <td>-1</td>\n","      <td>58.714133</td>\n","      <td>0.000000</td>\n","      <td>11.283628</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>147115</td>\n","      <td>366704169</td>\n","      <td>6.61188</td>\n","      <td>-4.152130</td>\n","      <td>-0.579855</td>\n","      <td>-5.11278</td>\n","      <td>4.19242</td>\n","      <td>-1.028420</td>\n","      <td>-3.002840</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>5.04474</td>\n","      <td>11.464700</td>\n","      <td>12.75360</td>\n","      <td>0.808077</td>\n","      <td>2.734920</td>\n","      <td>1</td>\n","      <td>6.611878</td>\n","      <td>0.004738</td>\n","      <td>17.149193</td>\n","      <td>0.015187</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>147115</td>\n","      <td>367112316</td>\n","      <td>25.54190</td>\n","      <td>-11.480900</td>\n","      <td>2.041680</td>\n","      <td>22.72460</td>\n","      <td>11.66100</td>\n","      <td>1.420480</td>\n","      <td>2.965600</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>2.25895</td>\n","      <td>-15.588800</td>\n","      <td>2.69667</td>\n","      <td>-2.455080</td>\n","      <td>2.148570</td>\n","      <td>1</td>\n","      <td>25.541867</td>\n","      <td>0.041090</td>\n","      <td>15.820325</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>147115</td>\n","      <td>366952149</td>\n","      <td>65.39590</td>\n","      <td>7.512140</td>\n","      <td>11.887100</td>\n","      <td>63.86620</td>\n","      <td>14.06190</td>\n","      <td>2.218380</td>\n","      <td>1.007210</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>2.59641</td>\n","      <td>24.656300</td>\n","      <td>4.84272</td>\n","      <td>2.330210</td>\n","      <td>0.565865</td>\n","      <td>-1</td>\n","      <td>65.395924</td>\n","      <td>0.000000</td>\n","      <td>25.127377</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>147115</td>\n","      <td>366523212</td>\n","      <td>61.45040</td>\n","      <td>2.952840</td>\n","      <td>-14.622700</td>\n","      <td>-59.61210</td>\n","      <td>14.91790</td>\n","      <td>-2.093750</td>\n","      <td>-1.371540</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>-2.42560</td>\n","      <td>-13.670800</td>\n","      <td>2.44145</td>\n","      <td>-2.423700</td>\n","      <td>-1.684810</td>\n","      <td>-1</td>\n","      <td>61.450347</td>\n","      <td>0.081083</td>\n","      <td>13.887097</td>\n","      <td>0.009458</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>146511</td>\n","      <td>522575834</td>\n","      <td>12.31310</td>\n","      <td>-10.658000</td>\n","      <td>5.164440</td>\n","      <td>3.36858</td>\n","      <td>11.84330</td>\n","      <td>0.280727</td>\n","      <td>2.690370</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>-1.58437</td>\n","      <td>0.537805</td>\n","      <td>1.71967</td>\n","      <td>0.307851</td>\n","      <td>-1.171470</td>\n","      <td>1</td>\n","      <td>12.313072</td>\n","      <td>0.026380</td>\n","      <td>1.801805</td>\n","      <td>0.004332</td>\n","    </tr>\n","    <tr>\n","      <th>99996</th>\n","      <td>146511</td>\n","      <td>522786431</td>\n","      <td>18.46420</td>\n","      <td>7.854990</td>\n","      <td>15.133000</td>\n","      <td>-7.08659</td>\n","      <td>17.05020</td>\n","      <td>-0.404510</td>\n","      <td>1.092010</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-2.28117</td>\n","      <td>-14.443500</td>\n","      <td>2.68598</td>\n","      <td>-2.383880</td>\n","      <td>-2.126960</td>\n","      <td>1</td>\n","      <td>18.464244</td>\n","      <td>0.000000</td>\n","      <td>14.691127</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>99997</th>\n","      <td>146511</td>\n","      <td>522906124</td>\n","      <td>4.18566</td>\n","      <td>-3.273500</td>\n","      <td>-0.308507</td>\n","      <td>-2.59013</td>\n","      <td>3.28801</td>\n","      <td>-0.723075</td>\n","      <td>-3.047630</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-9.28179</td>\n","      <td>-71.369300</td>\n","      <td>14.45010</td>\n","      <td>-2.300410</td>\n","      <td>-2.444050</td>\n","      <td>-1</td>\n","      <td>4.185660</td>\n","      <td>0.000000</td>\n","      <td>72.817457</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>99998</th>\n","      <td>146511</td>\n","      <td>523243830</td>\n","      <td>54.46220</td>\n","      <td>11.352600</td>\n","      <td>11.880900</td>\n","      <td>51.92400</td>\n","      <td>16.43280</td>\n","      <td>1.867800</td>\n","      <td>0.808132</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>3.07828</td>\n","      <td>8.007050</td>\n","      <td>3.10141</td>\n","      <td>1.677170</td>\n","      <td>1.448610</td>\n","      <td>1</td>\n","      <td>54.462272</td>\n","      <td>0.000000</td>\n","      <td>8.586708</td>\n","      <td>0.006353</td>\n","    </tr>\n","    <tr>\n","      <th>99999</th>\n","      <td>146511</td>\n","      <td>524172389</td>\n","      <td>7.64000</td>\n","      <td>0.886162</td>\n","      <td>5.478900</td>\n","      <td>-5.25033</td>\n","      <td>5.55010</td>\n","      <td>-0.842662</td>\n","      <td>1.410440</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-4.60510</td>\n","      <td>49.108400</td>\n","      <td>17.42700</td>\n","      <td>1.759250</td>\n","      <td>-0.267427</td>\n","      <td>-1</td>\n","      <td>7.640000</td>\n","      <td>0.002567</td>\n","      <td>52.108866</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100000 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d4d78d9-8472-4e48-bd8b-c1767784e436')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2d4d78d9-8472-4e48-bd8b-c1767784e436 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2d4d78d9-8472-4e48-bd8b-c1767784e436');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33ceb6bb-2b35-47c7-895f-57814249d17c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33ceb6bb-2b35-47c7-895f-57814249d17c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33ceb6bb-2b35-47c7-895f-57814249d17c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":5}],"source":["data['totalp2']=np.sqrt(data['px2']**2+data['py2']**2+data['pz2']**2) #momentum formula for particle 2\n","data['mass2'] = np.sqrt(data['E2']**2 - data['totalp2']**2) # mass formula for particle 2\n","data = data.fillna(0) # fills in a zero for any imaginary values your caluclation might produce\n","data.head(100000)"]},{"cell_type":"markdown","source":["In this part, calculate the following:\n","* Total Energy\n","*Total Momentum\n","*Total mass"],"metadata":{"id":"BZqnVAdfBBEW"}},{"cell_type":"code","source":["data['totalE']= data['E1']+data['E2'] #formula for total energy\n","data['totalp']=data['totalp1']+data['totalp2']#caluclates the total momentum of the electrons\n","data['totalm']=np.sqrt(data['totalE']**2- data['totalp']**2)#calculates the total mass of the parent particle\n","data_trimmed_1=data.query('totalm <10') #filters the large data set to only values less than 10(upsilon particles have a mass of 9.46Gev)\n","data = data.fillna(0) # fills in a zero for any imaginary values your caluclation might produce\n","data_trimmed_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"-xyntNSwAWhf","executionInfo":{"status":"ok","timestamp":1718804813309,"user_tz":300,"elapsed":222,"user":{"displayName":"Tracie Schroeder","userId":"13810655036895515303"}},"outputId":"5040e51b-f23d-4d1a-ce2e-735262f24e44"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pandas/core/arraylike.py:396: RuntimeWarning: invalid value encountered in sqrt\n","  result = getattr(ufunc, method)(*inputs, **kwargs)\n"]},{"output_type":"execute_result","data":{"text/plain":["          Run      Event        E1        px1        py1       pz1       pt1  \\\n","1      147115  366704169   6.61188  -4.152130  -0.579855  -5.11278   4.19242   \n","2      147115  367112316  25.54190 -11.480900   2.041680  22.72460  11.66100   \n","4      147115  366523212  61.45040   2.952840 -14.622700 -59.61210  14.91790   \n","6      147115  366639101  84.50580   8.824360  10.578900  83.37530  13.77610   \n","8      147115  368639137   9.68787   1.111920   2.050640  -9.40284   2.33270   \n","...       ...        ...       ...        ...        ...       ...       ...   \n","99985  146511  521812616   9.85511  -2.175060   0.444301   9.60182   2.21997   \n","99987  146511  521441669   7.24205   0.602269   5.173780  -5.03156   5.20872   \n","99992  146511  522163364  68.69390 -23.625300 -43.576500 -47.55820  49.56880   \n","99994  146511  522722226  69.60060 -63.503700  -8.944140  27.04670  64.13050   \n","99995  146511  522575834  12.31310 -10.658000   5.164440   3.36858  11.84330   \n","\n","           eta1      phi1  Q1  ...      eta2      phi2  Q2    totalp1  \\\n","1     -1.028420 -3.002840  -1  ...  0.808077  2.734920   1   6.611878   \n","2      1.420480  2.965600   1  ... -2.455080  2.148570   1  25.541867   \n","4     -2.093750 -1.371540  -1  ... -2.423700 -1.684810  -1  61.450347   \n","6      2.500320  0.875576   1  ... -1.989560 -1.910570  -1  84.505758   \n","8     -2.102180  1.073940   1  ... -2.273550  1.715040   1   9.687873   \n","...         ...       ...  ..  ...       ...       ...  ..        ...   \n","99985  2.170710  2.940090  -1  ... -1.916380 -0.371415   1   9.855112   \n","99987 -0.857118  1.454910  -1  ...  0.706201 -0.722194   1   7.242052   \n","99992 -0.852401 -2.067600  -1  ...  0.275488  1.007890   1  68.693876   \n","99994  0.410148 -3.001670  -1  ...  0.448619 -0.988556   1  69.600586   \n","99995  0.280727  2.690370  -1  ...  0.307851 -1.171470   1  12.313072   \n","\n","          mass1    totalp2     mass2     totalE      totalp    totalm  \n","1      0.004738  17.149193  0.015187   23.76108   23.761072  0.020006  \n","2      0.041090  15.820325  0.000000   41.36220   41.362192  0.025946  \n","4      0.081083  13.887097  0.009458   75.33750   75.337443  0.092442  \n","6      0.084433  12.678315  0.046466   97.18420   97.184073  0.157316  \n","8      0.000000  63.459680  0.050715   73.14757   73.147553  0.049706  \n","...         ...        ...       ...        ...         ...       ...  \n","99985  0.000000  10.428176  0.022519   20.28331   20.283288  0.029944  \n","99987  0.000000  23.062993  0.017899   30.30505   30.305045  0.016535  \n","99992  0.057945   2.695399  0.002610   71.38930   71.389274  0.060579  \n","99994  0.044558  53.921701  0.000000  123.52230  123.522287  0.057629  \n","99995  0.026380   1.801805  0.004332   14.11491   14.114877  0.030736  \n","\n","[50140 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-2d0af429-fe04-4492-b691-8dc333ae655c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Run</th>\n","      <th>Event</th>\n","      <th>E1</th>\n","      <th>px1</th>\n","      <th>py1</th>\n","      <th>pz1</th>\n","      <th>pt1</th>\n","      <th>eta1</th>\n","      <th>phi1</th>\n","      <th>Q1</th>\n","      <th>...</th>\n","      <th>eta2</th>\n","      <th>phi2</th>\n","      <th>Q2</th>\n","      <th>totalp1</th>\n","      <th>mass1</th>\n","      <th>totalp2</th>\n","      <th>mass2</th>\n","      <th>totalE</th>\n","      <th>totalp</th>\n","      <th>totalm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>147115</td>\n","      <td>366704169</td>\n","      <td>6.61188</td>\n","      <td>-4.152130</td>\n","      <td>-0.579855</td>\n","      <td>-5.11278</td>\n","      <td>4.19242</td>\n","      <td>-1.028420</td>\n","      <td>-3.002840</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>0.808077</td>\n","      <td>2.734920</td>\n","      <td>1</td>\n","      <td>6.611878</td>\n","      <td>0.004738</td>\n","      <td>17.149193</td>\n","      <td>0.015187</td>\n","      <td>23.76108</td>\n","      <td>23.761072</td>\n","      <td>0.020006</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>147115</td>\n","      <td>367112316</td>\n","      <td>25.54190</td>\n","      <td>-11.480900</td>\n","      <td>2.041680</td>\n","      <td>22.72460</td>\n","      <td>11.66100</td>\n","      <td>1.420480</td>\n","      <td>2.965600</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-2.455080</td>\n","      <td>2.148570</td>\n","      <td>1</td>\n","      <td>25.541867</td>\n","      <td>0.041090</td>\n","      <td>15.820325</td>\n","      <td>0.000000</td>\n","      <td>41.36220</td>\n","      <td>41.362192</td>\n","      <td>0.025946</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>147115</td>\n","      <td>366523212</td>\n","      <td>61.45040</td>\n","      <td>2.952840</td>\n","      <td>-14.622700</td>\n","      <td>-59.61210</td>\n","      <td>14.91790</td>\n","      <td>-2.093750</td>\n","      <td>-1.371540</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>-2.423700</td>\n","      <td>-1.684810</td>\n","      <td>-1</td>\n","      <td>61.450347</td>\n","      <td>0.081083</td>\n","      <td>13.887097</td>\n","      <td>0.009458</td>\n","      <td>75.33750</td>\n","      <td>75.337443</td>\n","      <td>0.092442</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>147115</td>\n","      <td>366639101</td>\n","      <td>84.50580</td>\n","      <td>8.824360</td>\n","      <td>10.578900</td>\n","      <td>83.37530</td>\n","      <td>13.77610</td>\n","      <td>2.500320</td>\n","      <td>0.875576</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-1.989560</td>\n","      <td>-1.910570</td>\n","      <td>-1</td>\n","      <td>84.505758</td>\n","      <td>0.084433</td>\n","      <td>12.678315</td>\n","      <td>0.046466</td>\n","      <td>97.18420</td>\n","      <td>97.184073</td>\n","      <td>0.157316</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>147115</td>\n","      <td>368639137</td>\n","      <td>9.68787</td>\n","      <td>1.111920</td>\n","      <td>2.050640</td>\n","      <td>-9.40284</td>\n","      <td>2.33270</td>\n","      <td>-2.102180</td>\n","      <td>1.073940</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>-2.273550</td>\n","      <td>1.715040</td>\n","      <td>1</td>\n","      <td>9.687873</td>\n","      <td>0.000000</td>\n","      <td>63.459680</td>\n","      <td>0.050715</td>\n","      <td>73.14757</td>\n","      <td>73.147553</td>\n","      <td>0.049706</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99985</th>\n","      <td>146511</td>\n","      <td>521812616</td>\n","      <td>9.85511</td>\n","      <td>-2.175060</td>\n","      <td>0.444301</td>\n","      <td>9.60182</td>\n","      <td>2.21997</td>\n","      <td>2.170710</td>\n","      <td>2.940090</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>-1.916380</td>\n","      <td>-0.371415</td>\n","      <td>1</td>\n","      <td>9.855112</td>\n","      <td>0.000000</td>\n","      <td>10.428176</td>\n","      <td>0.022519</td>\n","      <td>20.28331</td>\n","      <td>20.283288</td>\n","      <td>0.029944</td>\n","    </tr>\n","    <tr>\n","      <th>99987</th>\n","      <td>146511</td>\n","      <td>521441669</td>\n","      <td>7.24205</td>\n","      <td>0.602269</td>\n","      <td>5.173780</td>\n","      <td>-5.03156</td>\n","      <td>5.20872</td>\n","      <td>-0.857118</td>\n","      <td>1.454910</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>0.706201</td>\n","      <td>-0.722194</td>\n","      <td>1</td>\n","      <td>7.242052</td>\n","      <td>0.000000</td>\n","      <td>23.062993</td>\n","      <td>0.017899</td>\n","      <td>30.30505</td>\n","      <td>30.305045</td>\n","      <td>0.016535</td>\n","    </tr>\n","    <tr>\n","      <th>99992</th>\n","      <td>146511</td>\n","      <td>522163364</td>\n","      <td>68.69390</td>\n","      <td>-23.625300</td>\n","      <td>-43.576500</td>\n","      <td>-47.55820</td>\n","      <td>49.56880</td>\n","      <td>-0.852401</td>\n","      <td>-2.067600</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>0.275488</td>\n","      <td>1.007890</td>\n","      <td>1</td>\n","      <td>68.693876</td>\n","      <td>0.057945</td>\n","      <td>2.695399</td>\n","      <td>0.002610</td>\n","      <td>71.38930</td>\n","      <td>71.389274</td>\n","      <td>0.060579</td>\n","    </tr>\n","    <tr>\n","      <th>99994</th>\n","      <td>146511</td>\n","      <td>522722226</td>\n","      <td>69.60060</td>\n","      <td>-63.503700</td>\n","      <td>-8.944140</td>\n","      <td>27.04670</td>\n","      <td>64.13050</td>\n","      <td>0.410148</td>\n","      <td>-3.001670</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>0.448619</td>\n","      <td>-0.988556</td>\n","      <td>1</td>\n","      <td>69.600586</td>\n","      <td>0.044558</td>\n","      <td>53.921701</td>\n","      <td>0.000000</td>\n","      <td>123.52230</td>\n","      <td>123.522287</td>\n","      <td>0.057629</td>\n","    </tr>\n","    <tr>\n","      <th>99995</th>\n","      <td>146511</td>\n","      <td>522575834</td>\n","      <td>12.31310</td>\n","      <td>-10.658000</td>\n","      <td>5.164440</td>\n","      <td>3.36858</td>\n","      <td>11.84330</td>\n","      <td>0.280727</td>\n","      <td>2.690370</td>\n","      <td>-1</td>\n","      <td>...</td>\n","      <td>0.307851</td>\n","      <td>-1.171470</td>\n","      <td>1</td>\n","      <td>12.313072</td>\n","      <td>0.026380</td>\n","      <td>1.801805</td>\n","      <td>0.004332</td>\n","      <td>14.11491</td>\n","      <td>14.114877</td>\n","      <td>0.030736</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>50140 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d0af429-fe04-4492-b691-8dc333ae655c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2d0af429-fe04-4492-b691-8dc333ae655c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2d0af429-fe04-4492-b691-8dc333ae655c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-563f0d76-8a7d-4a86-9f02-d56fb504817e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-563f0d76-8a7d-4a86-9f02-d56fb504817e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-563f0d76-8a7d-4a86-9f02-d56fb504817e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_33a4f25e-1fe5-4dfc-9fad-f6f5f50829cf\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_trimmed_1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_33a4f25e-1fe5-4dfc-9fad-f6f5f50829cf button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_trimmed_1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_trimmed_1"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["In this part, create a histogram"],"metadata":{"id":"6A5vaHzhBU60"}},{"cell_type":"code","source":["plt.hist(data['totalm'], bins=100, range=[0,10], log=False)  # makes the histogram\n","plt.title(\"Instances of potential upsilon decay\") #Change the title of the histogram\n","plt.xlabel(\"Mass of parent (in GeV/c^2)\") #change the x-axis label\n","plt.ylabel(\"number of events\") #change the y-axis label\n","plt.grid(False);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"352_ju6vG88H","executionInfo":{"status":"ok","timestamp":1718804814859,"user_tz":300,"elapsed":1552,"user":{"displayName":"Tracie Schroeder","userId":"13810655036895515303"}},"outputId":"f5b9f30d-f19c-4865-a719-eefc41d08fa0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"KLDYYwM4AOgU"},"source":["## Analysis and conclusion\n","Here are some guide questions to help you write your analysis and conclusion\n","* Explain the relationship between independent and dependent variable\n","* What this histogram represents?\n","*What is the spike that is showing in your graph?\n","*Is your result accurate and precise? Justify\n","*Refer to the table of masses and identify the particle analyzed based on the spike in your histogram (see the standard model)\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1OKEOE_RY9wDPhBrDayN_L5pEZ7n1AjgU","timestamp":1694385031913},{"file_id":"1CFK2AwaqnwZ_48ZlIZz2abyV-KFRtVSA","timestamp":1655822291156},{"file_id":"1L84MxowRMZYkZC36mr31z_TiUpJO07w0","timestamp":1655392148847},{"file_id":"1w5SdsSp8xDjUfC44InuzucXDIb_Qmlg-","timestamp":1655329965963},{"file_id":"1GwhO7hrqjlbMuLVxpCOPWBMNYe6URC0l","timestamp":1655328596038},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/main/leptonic_decays_v2.ipynb","timestamp":1655218481292}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"}},"nbformat":4,"nbformat_minor":0}