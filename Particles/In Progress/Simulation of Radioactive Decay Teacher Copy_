{"cells":[{"cell_type":"markdown","metadata":{"id":"VxPAdfoTjv0X"},"source":["# Calculating Half Life\n","\n","**Objectives**\n","\n","-Use non-radioactive materials (dice/pennies) to determine the probability that a nucleus decays during a given time period (a roll of the dice or toss of the pennies)\n","\n","-Demonstrate that the number, N, of dice/pennies remaining (number of nuclei not yet decayed) after a roll and the rate of decay, dN/dt, both decrease exponentially.\n","\n","-Determine the rate constant, k, and initial activity, Ao, for the sample of dice/pennies (nuclei).\n","\n","-Determine the experimental values for the half-life of the dice/pennies (nuclei) and calculate the percent error for the experimental half-life values.\n","\n","**Background**\n","\n","It is not possible to predict exactly when any given radioactive nuclei will decay. But it is possible to  predict the average rate of decay for a large number of nuclei within a  given sample. This is because the rate of decay for each type of radioactive isotope is a constant and is a characteristic or that given isotope.\n","\n","For example, in a sample of cobalt-60 we cannot exactly predict when an atom will decay. However, we can measure the decay over a large sample of atoms. If we start with 10.0 grams of cobalt-60, then after 5.27 years (one half-life cycle), only 5.0 grams of cobalt-60 will remain.![cobalt-60](https://wisc.pb.unizin.org/app/uploads/sites/564/2020/11/decay_cobalt_60.png)\n","\n","Iodine-131 is another radioactive isotope. A sample of I-131 loses decays to half of its original amount after 8 days.\n","![Iodine-131](https://useruploads.socratic.org/lVubTLVCQvK93RLeP96j_0_quiz-7.2-03.gif)\n","\n","The decay of a given nuclei is not dependent on the environment of the nucleus nor its past history. We can use statistical analysis to determine the probability of the rate of decay. We can model nuclear decay using an object that will create a probability. For example, a penny has a one in two chance (50% probability) of landing heads up or tails up. A six-sided dice has a one in six chance of landing on a particular number. If a sample of 100 dice are rolled and all of the dice that landed on 5 are removed, then 1/6x100 is the probability representing the number of dice that rolled a 5. In the sample of 100 dice, ⅙ x 100 = 16.6, so 16 or 17 dice should land on a 5.\n","\n","**Experimental**\n","\n","1. Acquire a plastic cup and a sample of 100 dice/pennies in a plastic bag. This will be the model of your radioactive sample.\n","2. Determine as a group which side will represent decay of a nucleus. For example, for a six-sided dice, you can choose the number 3 as representing a decayed nucleus.\n","3. Pour all of the “radioactive sample”into the cup and shake the cup. Pour “radioactive nuclei” out onto the lab bench. (Each roll simulates one minute.)\n","4. Remove all of the “nuclei” that landed as a decayed nucleus (e.g, landed on 3). Put them back in the plastic bag.\n","5. Record the number of remaining “radioactive nuclei” on your [datasheet](https://docs.google.com/spreadsheets/d/1ffmFTOJai6IPpGrY9VEH7reU1VdsHjSXWJKjyNJM-F4/copy).\n","6. Put all of the remaining “radioactive nuclei” back into the cup, shake and pour out the sample.\n","\n","7. Repeat steps 4-6 until the number of remaining nuclei does not change between two rolls of the dice.\n","\n","8. Repeat the entire experiment twice, starting with a sample of 100 each time.\n","9. Once data has been collected for three runs, average the numbers going across for each roll (each time step of 1 minute). Record the average in the proper column on the datasheet.\n","10. Calculate the natural log of each value in the average counts/min column. Record in the proper column on the datasheet.\n","11. Put the samples back in a plastic bag. Return supplies.\n","12. Extension:  Select a different radioactive sample (e.g., a 4-sided dice) and repeat the experiment.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NiDzd_bwjv0Z"},"outputs":[],"source":["# imports some software packages we'll use\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WMTlKXuwjv0j","colab":{"base_uri":"https://localhost:8080/","height":707},"executionInfo":{"status":"ok","timestamp":1687377545462,"user_tz":300,"elapsed":1479,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"b6efecd4-47c7-45b2-f027-20ba2acc17c5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    time  Run1  Run2  Run3\n","0      0   100   100   100\n","1      1    90    86    88\n","2      2    81    74    76\n","3      3    75    70    72\n","4      4    70    62    64\n","5      5    59    56    59\n","6      6    56    49    51\n","7      7    50    44    46\n","8      8    48    38    40\n","9      9    44    34    37\n","10    10    38    29    33\n","11    11    36    27    31\n","12    12    33    25    28\n","13    13    31    22    25\n","14    14    28    19    23\n","15    15    26    17    20\n","16    16    25    17    19\n","17    17    23    16    18\n","18    18    19    16    17\n","19    19    18    16    17\n","20    20    16    16    16"],"text/html":["\n","  <div id=\"df-64b892ca-7f13-4f9a-8f94-bccf0c197393\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>Run1</th>\n","      <th>Run2</th>\n","      <th>Run3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>90</td>\n","      <td>86</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>70</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>62</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>59</td>\n","      <td>56</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>56</td>\n","      <td>49</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>50</td>\n","      <td>44</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>48</td>\n","      <td>38</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>44</td>\n","      <td>34</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>38</td>\n","      <td>29</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>36</td>\n","      <td>27</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>33</td>\n","      <td>25</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>28</td>\n","      <td>19</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>17</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>25</td>\n","      <td>17</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>16</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64b892ca-7f13-4f9a-8f94-bccf0c197393')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-64b892ca-7f13-4f9a-8f94-bccf0c197393 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-64b892ca-7f13-4f9a-8f94-bccf0c197393');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}],"source":["# After completing your data table, make your file shareable and edit the link by deleting out the \"edit?usp=sharing\" part of the address and add /export at the end.\n","#Use the following format ('https://docs.google.com/spreadsheets/d/1ffmFTOJai6IPpGrY9VEH7reU1VdsHjSXWJKjyNJM-F4/export'\n","\n","data = pd.read_excel('https://docs.google.com/spreadsheets/d/1wQWs6d_MfG1sbCwqYPllrM35QsC1FctGFtCbrCXT4EY/export')\n","# units in these files are time, T (rolls) and Undecayed Atoms, A (number of atoms)\n","\n","# The .head(n) command displays the first n rows of a file.\n","data.head(21)"]},{"cell_type":"markdown","metadata":{"id":"KufRU5EUjv0_"},"source":["## Part Two\n","Record the average in the proper column on the datasheet.\n","\n","When you're ready, scroll down to **Part 3**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"baDYUis1jv05","colab":{"base_uri":"https://localhost:8080/","height":707},"executionInfo":{"status":"ok","timestamp":1687377550270,"user_tz":300,"elapsed":119,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"133150a6-c0f7-4180-ab6f-8d44ddb3c503"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    time  Run1  Run2  Run3        Ravg\n","0      0   100   100   100  100.000000\n","1      1    90    86    88   88.000000\n","2      2    81    74    76   77.000000\n","3      3    75    70    72   72.333333\n","4      4    70    62    64   65.333333\n","5      5    59    56    59   58.000000\n","6      6    56    49    51   52.000000\n","7      7    50    44    46   46.666667\n","8      8    48    38    40   42.000000\n","9      9    44    34    37   38.333333\n","10    10    38    29    33   33.333333\n","11    11    36    27    31   31.333333\n","12    12    33    25    28   28.666667\n","13    13    31    22    25   26.000000\n","14    14    28    19    23   23.333333\n","15    15    26    17    20   21.000000\n","16    16    25    17    19   20.333333\n","17    17    23    16    18   19.000000\n","18    18    19    16    17   17.333333\n","19    19    18    16    17   17.000000\n","20    20    16    16    16   16.000000"],"text/html":["\n","  <div id=\"df-7dfd7150-bed9-425e-9007-6daffe6b6835\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>Run1</th>\n","      <th>Run2</th>\n","      <th>Run3</th>\n","      <th>Ravg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>90</td>\n","      <td>86</td>\n","      <td>88</td>\n","      <td>88.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>76</td>\n","      <td>77.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>70</td>\n","      <td>72</td>\n","      <td>72.333333</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>62</td>\n","      <td>64</td>\n","      <td>65.333333</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>59</td>\n","      <td>56</td>\n","      <td>59</td>\n","      <td>58.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>56</td>\n","      <td>49</td>\n","      <td>51</td>\n","      <td>52.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>50</td>\n","      <td>44</td>\n","      <td>46</td>\n","      <td>46.666667</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>48</td>\n","      <td>38</td>\n","      <td>40</td>\n","      <td>42.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>44</td>\n","      <td>34</td>\n","      <td>37</td>\n","      <td>38.333333</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>38</td>\n","      <td>29</td>\n","      <td>33</td>\n","      <td>33.333333</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>36</td>\n","      <td>27</td>\n","      <td>31</td>\n","      <td>31.333333</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>33</td>\n","      <td>25</td>\n","      <td>28</td>\n","      <td>28.666667</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>25</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>28</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>23.333333</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>17</td>\n","      <td>20</td>\n","      <td>21.000000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>25</td>\n","      <td>17</td>\n","      <td>19</td>\n","      <td>20.333333</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>18</td>\n","      <td>19.000000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>17</td>\n","      <td>17.333333</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>16</td>\n","      <td>17</td>\n","      <td>17.000000</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dfd7150-bed9-425e-9007-6daffe6b6835')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7dfd7150-bed9-425e-9007-6daffe6b6835 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7dfd7150-bed9-425e-9007-6daffe6b6835');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}],"source":["# Calculate the average of the three data sets for each trial.\n","data['Ravg'] = (data['Run1']  + data['Run2'] + data['Run3'])/3\n","data.head(21)"]},{"cell_type":"markdown","metadata":{"id":"4MXlLaWNjv1F"},"source":["## Part Three\n","\n","Decay Graph\n","For each radioactive nuclei sample, plot the average values of “counts/min” (Avg Run) as a function of time. The Avg Run value is on the y-axis and time is on the x-axis.\n","\n","The graphed data should result in an exponential decay curve. Connect the data points with a curve.\n","\n","On the same graph, plot the Avg Run versus time data for the other radioactive nuclei samples. Be sure to provide a legend to label each line on the graph.\n","\n","When you're ready, scroll down to **Part 4**."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-scsKIdKjv1G","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1687377555332,"user_tz":300,"elapsed":310,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"3835a9db-4739-4b70-a330-084cd25e2ae6"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#Create a scatterplot: plt.scatter(x-variable, y-variable)\n","plt.scatter(data['time'], data['Ravg'])\n","plt.title(\"Decay Graph\")\n","plt.xlabel(\"Time(rolls)\")\n","plt.ylabel(\"Undecayed atoms(numbers)\");"]},{"cell_type":"markdown","source":["![HalfLifeGraph](https://www.ibchem.com/IB16/Section05-kinetics/img/decay.gif)\n","#Determine the half-life, t1/2, for each radioactive sample. Draw horizontal lines at 50% and 25%. Wherever these lines cross the data, drop a vertical line. The distance between these two lines is the half-life.\n"],"metadata":{"id":"t3C1XGWCUzBg"}},{"cell_type":"code","source":["# Radioactive decay follows first order kinetics\n","# A plot of the natural log of the decay versus time give the rate constant as the slope.\n","data['ln_Ravg'] = np.log(data['Ravg'])\n","data.head(21)"],"metadata":{"id":"3vlb3a6dt1MW","colab":{"base_uri":"https://localhost:8080/","height":707},"executionInfo":{"status":"ok","timestamp":1687377560147,"user_tz":300,"elapsed":113,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"3b9ab611-4e03-4996-e924-49f9fdcaab05"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    time  Run1  Run2  Run3        Ravg   ln_Ravg\n","0      0   100   100   100  100.000000  4.605170\n","1      1    90    86    88   88.000000  4.477337\n","2      2    81    74    76   77.000000  4.343805\n","3      3    75    70    72   72.333333  4.281285\n","4      4    70    62    64   65.333333  4.179502\n","5      5    59    56    59   58.000000  4.060443\n","6      6    56    49    51   52.000000  3.951244\n","7      7    50    44    46   46.666667  3.843030\n","8      8    48    38    40   42.000000  3.737670\n","9      9    44    34    37   38.333333  3.646320\n","10    10    38    29    33   33.333333  3.506558\n","11    11    36    27    31   31.333333  3.444682\n","12    12    33    25    28   28.666667  3.355735\n","13    13    31    22    25   26.000000  3.258097\n","14    14    28    19    23   23.333333  3.149883\n","15    15    26    17    20   21.000000  3.044522\n","16    16    25    17    19   20.333333  3.012262\n","17    17    23    16    18   19.000000  2.944439\n","18    18    19    16    17   17.333333  2.852631\n","19    19    18    16    17   17.000000  2.833213\n","20    20    16    16    16   16.000000  2.772589"],"text/html":["\n","  <div id=\"df-7dac4dfc-f223-450c-b51c-5e989408859e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>time</th>\n","      <th>Run1</th>\n","      <th>Run2</th>\n","      <th>Run3</th>\n","      <th>Ravg</th>\n","      <th>ln_Ravg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>100.000000</td>\n","      <td>4.605170</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>90</td>\n","      <td>86</td>\n","      <td>88</td>\n","      <td>88.000000</td>\n","      <td>4.477337</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>76</td>\n","      <td>77.000000</td>\n","      <td>4.343805</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>70</td>\n","      <td>72</td>\n","      <td>72.333333</td>\n","      <td>4.281285</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>62</td>\n","      <td>64</td>\n","      <td>65.333333</td>\n","      <td>4.179502</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>59</td>\n","      <td>56</td>\n","      <td>59</td>\n","      <td>58.000000</td>\n","      <td>4.060443</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>56</td>\n","      <td>49</td>\n","      <td>51</td>\n","      <td>52.000000</td>\n","      <td>3.951244</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>50</td>\n","      <td>44</td>\n","      <td>46</td>\n","      <td>46.666667</td>\n","      <td>3.843030</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>48</td>\n","      <td>38</td>\n","      <td>40</td>\n","      <td>42.000000</td>\n","      <td>3.737670</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>44</td>\n","      <td>34</td>\n","      <td>37</td>\n","      <td>38.333333</td>\n","      <td>3.646320</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>10</td>\n","      <td>38</td>\n","      <td>29</td>\n","      <td>33</td>\n","      <td>33.333333</td>\n","      <td>3.506558</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>11</td>\n","      <td>36</td>\n","      <td>27</td>\n","      <td>31</td>\n","      <td>31.333333</td>\n","      <td>3.444682</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>12</td>\n","      <td>33</td>\n","      <td>25</td>\n","      <td>28</td>\n","      <td>28.666667</td>\n","      <td>3.355735</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>13</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>25</td>\n","      <td>26.000000</td>\n","      <td>3.258097</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>28</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>23.333333</td>\n","      <td>3.149883</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>17</td>\n","      <td>20</td>\n","      <td>21.000000</td>\n","      <td>3.044522</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>16</td>\n","      <td>25</td>\n","      <td>17</td>\n","      <td>19</td>\n","      <td>20.333333</td>\n","      <td>3.012262</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>17</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>18</td>\n","      <td>19.000000</td>\n","      <td>2.944439</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>17</td>\n","      <td>17.333333</td>\n","      <td>2.852631</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>19</td>\n","      <td>18</td>\n","      <td>16</td>\n","      <td>17</td>\n","      <td>17.000000</td>\n","      <td>2.833213</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16.000000</td>\n","      <td>2.772589</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dac4dfc-f223-450c-b51c-5e989408859e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7dac4dfc-f223-450c-b51c-5e989408859e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7dac4dfc-f223-450c-b51c-5e989408859e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":524},"executionInfo":{"status":"ok","timestamp":1687377565624,"user_tz":300,"elapsed":309,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"86c18a05-f1c1-4b57-8655-926c68f0ca8a","id":"0VbYdD6_wDQs"},"outputs":[{"output_type":"stream","name":"stdout","text":["slope =  -0.09405069929513328\n","-0.09405069929513328\n"]},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f1dca67f9d0>]"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#Create a scatterplot of the linear data: plt.scatter(x-variable, y-variable)\n","plt.scatter(data['time'], data['ln_Ravg'])\n","plt.title(\"Rate Constant\")\n","plt.xlabel(\"Time(rolls)\")\n","plt.ylabel(\"Ln of Roll Average\");\n","plt.plot(data['time'], data['ln_Ravg'], 'o')\n","\n","#Calculate the slope of the best fit line\n","m, b = np.polyfit(data['time'], data['ln_Ravg'], 1)\n","#m = slope, b=intercept\n","print('slope = ',(m))\n","print(m)\n","\n","#add line of best fit\n","plt.plot(data['time'], m*data['time'] + b)"]},{"cell_type":"code","source":["#Use the slope of the line to calculate the halflife\n","halflife = np.log(2) /np.abs(m)\n","print('halflife = ',(halflife))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QHLQIxi7lgNP","executionInfo":{"status":"ok","timestamp":1687377570813,"user_tz":300,"elapsed":120,"user":{"displayName":"Mary Yarbray","userId":"17928602431562004002"}},"outputId":"209a12fe-3484-4235-fd8a-fd69555891ce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["halflife =  7.369931172811733\n"]}]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"IckJMDaijv1f"},"source":["---\n","## Saving Your Work\n","This is running on a Google server on a distant planet and deletes what you've done when you close this tab. To save your work for later use or analysis you have a few options:\n","- File > \"Save a copy in Drive\" will save it to you Google Drive in a folder called \"Collaboratory\". You can run it later from there.\n","- File > \"Download .ipynb\" to save to your computer (and run with Jupyter software later)\n","- File > Print to ... um ... print.\n","- To save an image of a graph or chart, right-click on it and select Save Image as ...\n","\n","## Credits\n","This notebook was designed by [Quarknet](https://quarknet.org/) Teaching and Learning Fellow [Adam LaMee](https://adamlamee.github.io/) and UCF Physics undergrad Brooke Emison. The handy csv files were created from the CMS Run2011A primary datasets and converted from ROOT format by the masterful [Tom McCauley](https://github.com/tpmccauley). More can be found on the [CERN OpenData](http://opendata.cern.ch/?ln=en) site, like [here](http://opendata.cern.ch/record/545). The 3D vector image can be found on [WikiMedia Commons](https://commons.wikimedia.org/wiki/File:Coord_XYZ.svg). Finally, thanks to the great folks at [Binder](https://mybinder.org/) and [Google Colaboratory](https://colab.research.google.com/notebooks/intro.ipynb) for making this notebook interactive without you needing to download it or install [Jupyter](https://jupyter.org/) on your own device. Find more activities and license info at [CODINGinK12.org](http://www.codingink12.org).\n","[Real Python](https://realpython.com/linear-regression-in-python/)\n","[Numpy](https://numpy.org/doc/stable/reference/generated/numpy.lib.scimath.log2.html)"]}],"metadata":{"anaconda-cloud":{},"colab":{"provenance":[{"file_id":"1diOqiNNKF1HxvB5LWQIq4KbAlivCG_pm","timestamp":1694386137458},{"file_id":"1pGmqMYWWhjpqblVQWHK-nbosnGoT4Zg-","timestamp":1687286896135},{"file_id":"1sx-P7mL6ekoCiL3m0mPfQToQ6OsqGeab","timestamp":1654609035827},{"file_id":"https://github.com/QuarkNet-HEP/coding-camp/blob/master/muon_mass.ipynb","timestamp":1654529207733}],"collapsed_sections":["VxPAdfoTjv0X"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"nbformat":4,"nbformat_minor":0}