{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1uXODC6JspMt5WJf9M6CdgU8lZenu1SUi","timestamp":1694385109442},{"file_id":"10l0LXcpTJ3dGa9vA0iOCbPUxSzu4EA9I","timestamp":1655822219496}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Frisco League Data Camp - Calculate the Mass of the Muon This data camp will be offered by me to the Frisco League, 9 high schools in rural Missouri, many of which do not offer Physics, let alone Particle Physics. Camp will be offered on two consequtive Saturdays, with an optional third Saturday for the Z Boson Mass activity. The first Saturday will introduce the basics of particle physics, I will attempt to set up a Zoom with one of our Virtual QuarkNet (my group) mentors, so students have an opportunity to ask questions to an actual Particle Physicist. The second Saturday will have the students complete the Mass of the Muon activity via this notebook."],"metadata":{"id":"ohaiNhrqRhc2"}},{"cell_type":"code","source":["#We will use our new knowledge of particle physics to calculate the mass of the Muon.  To do this, we will use actual data from CERN, the Large Hadron\n","#Accelerator in France/Switzerland.  We will use this Notebook created using Python."],"metadata":{"id":"re2NcJOyTsO_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Importing modules that may be necessary and/or helpful, #at the beginning of the line tells Python not to read any further, we use it for inserting comments\n","import pandas as pd\n","import numpy as np\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt"],"metadata":{"id":"sTT4lWwi_x24"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Importing the data\n","data = pd.read_csv('https://github.com/QuarkNet-HEP/coding-camp/raw/main/data/muons.csv')\n","#.csv is a type of spreadsheet, \"comma-separated values\""],"metadata":{"id":"w8wfDLw1AFub"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Showing the first 10 rows of the data spreadsheet, .head(n) command displays the first n rows of a file.\n","data.head(10)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"TiYBigG2MCs1","executionInfo":{"status":"ok","timestamp":1655327504169,"user_tz":300,"elapsed":14,"user":{"displayName":"Marteen Nolan","userId":"14094425185011343552"}},"outputId":"b7f559a5-265e-42a1-b840-9dce68993ad9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Run     Event         E        px         py        pz\n","0  165617  74601703   9.69873 -9.510430   0.366205   1.86329\n","1  165617  75100943   6.20385 -4.266610   0.456545  -4.47930\n","2  165617  75587682  19.28920 -4.212080  -0.651623  18.81210\n","3  165617  75660978   7.04268 -6.326780  -0.268545   3.08025\n","4  165617  75947690   7.27507  0.102966  -5.533080  -4.72122\n","5  165617  74570517  14.94220 -9.174410 -10.320300  -5.70786\n","6  165617  74697773  41.95380 -1.479420 -12.464800  40.03190\n","7  165617  74704205  14.43040 -4.340830  -6.072900 -12.34920\n","8  165617  75167029   9.75833  2.390320  -3.782350   8.67145\n","9  165617  75206813  10.16230  0.476262  -8.516420   5.52306"],"text/html":["\n","  <div id=\"df-96d065d9-e9a6-481e-b575-0f847405a632\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Run</th>\n","      <th>Event</th>\n","      <th>E</th>\n","      <th>px</th>\n","      <th>py</th>\n","      <th>pz</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>165617</td>\n","      <td>74601703</td>\n","      <td>9.69873</td>\n","      <td>-9.510430</td>\n","      <td>0.366205</td>\n","      <td>1.86329</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>165617</td>\n","      <td>75100943</td>\n","      <td>6.20385</td>\n","      <td>-4.266610</td>\n","      <td>0.456545</td>\n","      <td>-4.47930</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>165617</td>\n","      <td>75587682</td>\n","      <td>19.28920</td>\n","      <td>-4.212080</td>\n","      <td>-0.651623</td>\n","      <td>18.81210</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>165617</td>\n","      <td>75660978</td>\n","      <td>7.04268</td>\n","      <td>-6.326780</td>\n","      <td>-0.268545</td>\n","      <td>3.08025</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>165617</td>\n","      <td>75947690</td>\n","      <td>7.27507</td>\n","      <td>0.102966</td>\n","      <td>-5.533080</td>\n","      <td>-4.72122</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>165617</td>\n","      <td>74570517</td>\n","      <td>14.94220</td>\n","      <td>-9.174410</td>\n","      <td>-10.320300</td>\n","      <td>-5.70786</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>165617</td>\n","      <td>74697773</td>\n","      <td>41.95380</td>\n","      <td>-1.479420</td>\n","      <td>-12.464800</td>\n","      <td>40.03190</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>165617</td>\n","      <td>74704205</td>\n","      <td>14.43040</td>\n","      <td>-4.340830</td>\n","      <td>-6.072900</td>\n","      <td>-12.34920</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>165617</td>\n","      <td>75167029</td>\n","      <td>9.75833</td>\n","      <td>2.390320</td>\n","      <td>-3.782350</td>\n","      <td>8.67145</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>165617</td>\n","      <td>75206813</td>\n","      <td>10.16230</td>\n","      <td>0.476262</td>\n","      <td>-8.516420</td>\n","      <td>5.52306</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96d065d9-e9a6-481e-b575-0f847405a632')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-96d065d9-e9a6-481e-b575-0f847405a632 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-96d065d9-e9a6-481e-b575-0f847405a632');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#What do you think each of the header captions mean?  Discuss with your team."],"metadata":{"id":"QWeSHuEsD1o9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Because of special relativity, we know that the mass of a particle is due to both it's energy and momentum. The equation looks similar to the Pythagoream theorem:\n","\n","#  energy^2 = mass2 ^+ momentum^2\n","\n","#Mass in this equation is called the particle's invariant (i.e. never changing) mass because it is a value all observers would agree on, regardless of their reference\n","# frame. The code below creates a column for the mass of the muon, but the equation isn't quite right.\n","#Edit the code in the cell below to really calculate the muon's mass.\n","#How could your equation produce some imaginary numbers?"],"metadata":{"id":"QeLg9g2bEJdB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['mass'] = (data['E'] + data['px']) # this calculates nothing useful, why?  Discuss with your team\n","data['mass'] = (data['E'] + data['px']) #correct the equation to calculate the mass of a muon.\n","data = data.fillna(0) # fills in a zero for any imaginary values your caluclation might produce\n","data.head(3)"],"metadata":{"id":"xbCf0q7MGB5g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist(data['mass'], bins=10, range=[0,50], log=False)  # makes the histogram\n","plt.title(\"Title\")\n","plt.xlabel(\"x-axis label\")\n","plt.ylabel(\"y-axis  label\"\")\n","plt.grid(False);"],"metadata":{"id":"PyVbZEmQGlpb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#The code above may take a few moments to run since it's grabbing a pretty big data set (>400,000 events!?). When it's finished, you'll see a histogram\n","# of the invariant mass values you calucalted for muon 1 in each event. This is called a mass plot.\n","\n","#You'll probably need to adjust the histogram's range and number of bins to see a clear peak. The x-value of that peak occurs at the invariant mass\n","# of the particle (in this case, a muon).\n","#Based on your histogram, what value does the muon's invariant mass seem to be?\n","#Replace the histogram's title and x-axis label and y-axis label to something better."],"metadata":{"id":"PKoVT6uWKRkV"},"execution_count":null,"outputs":[]}]}